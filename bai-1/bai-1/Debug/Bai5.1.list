
Bai5.1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001044  08000194  08000194  00010194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080011d8  080011d8  00020024  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080011d8  080011d8  00020024  2**0
                  CONTENTS
  4 .ARM          00000000  080011d8  080011d8  00020024  2**0
                  CONTENTS
  5 .preinit_array 00000000  080011d8  080011d8  00020024  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080011d8  080011d8  000111d8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080011dc  080011dc  000111dc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000024  20000000  080011e0  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000020  20000024  08001204  00020024  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000044  08001204  00020044  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020024  2**0
                  CONTENTS, READONLY
 12 .debug_info   000032a8  00000000  00000000  00020054  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000a37  00000000  00000000  000232fc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000460  00000000  00000000  00023d38  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000003f8  00000000  00000000  00024198  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000c8c1  00000000  00000000  00024590  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00002896  00000000  00000000  00030e51  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0003e3bd  00000000  00000000  000336e7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      000000ce  00000000  00000000  00071aa4  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00001248  00000000  00000000  00071b74  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	; (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	20000024 	.word	0x20000024
 80001b0:	00000000 	.word	0x00000000
 80001b4:	080011c0 	.word	0x080011c0

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	; (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	; (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	; (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	20000028 	.word	0x20000028
 80001d0:	080011c0 	.word	0x080011c0

080001d4 <main>:

/* Private variables ---------------------------------------------------------*/
uint8_t Data_Receive;

int main(void)
{
 80001d4:	b580      	push	{r7, lr}
 80001d6:	b082      	sub	sp, #8
 80001d8:	af00      	add	r7, sp, #0
	AppInitCommon();
 80001da:	f000 f839 	bl	8000250 <AppInitCommon>

	while(1)
	{
	    if (GPIO_ReadInputDataBit(BUTTON_CFG_PORT, BUTTON_CFG_PIN) == Bit_RESET)
 80001de:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80001e2:	4818      	ldr	r0, [pc, #96]	; (8000244 <main+0x70>)
 80001e4:	f000 fc08 	bl	80009f8 <GPIO_ReadInputDataBit>
 80001e8:	4603      	mov	r3, r0
 80001ea:	2b00      	cmp	r3, #0
 80001ec:	d109      	bne.n	8000202 <main+0x2e>
		{
			I2C_Start();
 80001ee:	f000 f92d 	bl	800044c <I2C_Start>

			I2C_SendAddress(SERIAL_ADR);
 80001f2:	2002      	movs	r0, #2
 80001f4:	f000 f948 	bl	8000488 <I2C_SendAddress>

			I2C_TransmitData(DATA_RCV_VALID);
 80001f8:	2010      	movs	r0, #16
 80001fa:	f000 f961 	bl	80004c0 <I2C_TransmitData>

			I2C_Stop();
 80001fe:	f000 f97b 	bl	80004f8 <I2C_Stop>
		}

	    if (Data_Receive == DATA_RCV_VALID)
 8000202:	4b11      	ldr	r3, [pc, #68]	; (8000248 <main+0x74>)
 8000204:	781b      	ldrb	r3, [r3, #0]
 8000206:	2b10      	cmp	r3, #16
 8000208:	d1e9      	bne.n	80001de <main+0xa>
	    {
	    	for (int i = 0; i < LED_NUM_OF_BLINK; i++)
 800020a:	2300      	movs	r3, #0
 800020c:	607b      	str	r3, [r7, #4]
 800020e:	e012      	b.n	8000236 <main+0x62>
	    	{
	    		GPIO_SetBits(LED_IND_PORT, LED_IND_PIN);
 8000210:	2120      	movs	r1, #32
 8000212:	480e      	ldr	r0, [pc, #56]	; (800024c <main+0x78>)
 8000214:	f000 fc0a 	bl	8000a2c <GPIO_SetBits>
	    		Delay_ms(1000);
 8000218:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 800021c:	f000 f9b0 	bl	8000580 <Delay_ms>
	    		GPIO_ResetBits(LED_IND_PORT, LED_IND_PIN);
 8000220:	2120      	movs	r1, #32
 8000222:	480a      	ldr	r0, [pc, #40]	; (800024c <main+0x78>)
 8000224:	f000 fc11 	bl	8000a4a <GPIO_ResetBits>
	    		Delay_ms(1000);
 8000228:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 800022c:	f000 f9a8 	bl	8000580 <Delay_ms>
	    	for (int i = 0; i < LED_NUM_OF_BLINK; i++)
 8000230:	687b      	ldr	r3, [r7, #4]
 8000232:	3301      	adds	r3, #1
 8000234:	607b      	str	r3, [r7, #4]
 8000236:	687b      	ldr	r3, [r7, #4]
 8000238:	2b04      	cmp	r3, #4
 800023a:	dde9      	ble.n	8000210 <main+0x3c>
	    	}
	    	Data_Receive = DATA_RCV_IDLE;
 800023c:	4b02      	ldr	r3, [pc, #8]	; (8000248 <main+0x74>)
 800023e:	2200      	movs	r2, #0
 8000240:	701a      	strb	r2, [r3, #0]
	    if (GPIO_ReadInputDataBit(BUTTON_CFG_PORT, BUTTON_CFG_PIN) == Bit_RESET)
 8000242:	e7cc      	b.n	80001de <main+0xa>
 8000244:	40020800 	.word	0x40020800
 8000248:	20000040 	.word	0x20000040
 800024c:	40020000 	.word	0x40020000

08000250 <AppInitCommon>:
 * @param  None
 * @retval None
 */
static
void AppInitCommon(void)
{
 8000250:	b580      	push	{r7, lr}
 8000252:	af00      	add	r7, sp, #0
	// System clock 84MHz ------------------------------------------------------
	SystemCoreClockUpdate();
 8000254:	f000 fa14 	bl	8000680 <SystemCoreClockUpdate>

	// Initializes Button User -------------------------------------------------
	Button_Init();
 8000258:	f000 f822 	bl	80002a0 <Button_Init>

	// Initializes Led ---------------------------------------------------------
	Led_Init();
 800025c:	f000 f806 	bl	800026c <Led_Init>

	// Initializes I2C3 Master -------------------------------------------------
	I2C_InitMaster();
 8000260:	f000 f89c 	bl	800039c <I2C_InitMaster>

	// Initializes I2C1 Slave --------------------------------------------------
	I2C_InitSlave();
 8000264:	f000 f838 	bl	80002d8 <I2C_InitSlave>
}
 8000268:	bf00      	nop
 800026a:	bd80      	pop	{r7, pc}

0800026c <Led_Init>:
 * @brief  Led_Init
 * @param  None
 * @retval None
 */
static void Led_Init(void)
{
 800026c:	b580      	push	{r7, lr}
 800026e:	b082      	sub	sp, #8
 8000270:	af00      	add	r7, sp, #0
	GPIO_InitTypeDef GPIO_InitStructure;

	RCC_AHB1PeriphClockCmd(LED_IND_GPIO_RCC, ENABLE);
 8000272:	2101      	movs	r1, #1
 8000274:	2001      	movs	r0, #1
 8000276:	f000 ff3f 	bl	80010f8 <RCC_AHB1PeriphClockCmd>

	GPIO_InitStructure.GPIO_Pin = LED_IND_PIN;
 800027a:	2320      	movs	r3, #32
 800027c:	603b      	str	r3, [r7, #0]
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
 800027e:	2301      	movs	r3, #1
 8000280:	713b      	strb	r3, [r7, #4]
	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 8000282:	2302      	movs	r3, #2
 8000284:	717b      	strb	r3, [r7, #5]
	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
 8000286:	2300      	movs	r3, #0
 8000288:	71bb      	strb	r3, [r7, #6]

	GPIO_Init(LED_IND_PORT, &GPIO_InitStructure);
 800028a:	463b      	mov	r3, r7
 800028c:	4619      	mov	r1, r3
 800028e:	4803      	ldr	r0, [pc, #12]	; (800029c <Led_Init+0x30>)
 8000290:	f000 fb24 	bl	80008dc <GPIO_Init>
}
 8000294:	bf00      	nop
 8000296:	3708      	adds	r7, #8
 8000298:	46bd      	mov	sp, r7
 800029a:	bd80      	pop	{r7, pc}
 800029c:	40020000 	.word	0x40020000

080002a0 <Button_Init>:
 * @brief  Button_Init
 * @param  None
 * @retval None
 */
static void Button_Init(void)
{
 80002a0:	b580      	push	{r7, lr}
 80002a2:	b082      	sub	sp, #8
 80002a4:	af00      	add	r7, sp, #0
	GPIO_InitTypeDef GPIO_InitStructure ;

	RCC_AHB1PeriphClockCmd(BUTTON_CFG_GPIO_RCC, ENABLE);
 80002a6:	2101      	movs	r1, #1
 80002a8:	2004      	movs	r0, #4
 80002aa:	f000 ff25 	bl	80010f8 <RCC_AHB1PeriphClockCmd>

	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;
 80002ae:	2300      	movs	r3, #0
 80002b0:	713b      	strb	r3, [r7, #4]
	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 80002b2:	2302      	movs	r3, #2
 80002b4:	717b      	strb	r3, [r7, #5]
	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;
 80002b6:	2301      	movs	r3, #1
 80002b8:	71fb      	strb	r3, [r7, #7]

	GPIO_InitStructure.GPIO_Pin = BUTTON_CFG_PIN;
 80002ba:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80002be:	603b      	str	r3, [r7, #0]
	GPIO_Init(BUTTON_CFG_PORT, &GPIO_InitStructure);
 80002c0:	463b      	mov	r3, r7
 80002c2:	4619      	mov	r1, r3
 80002c4:	4803      	ldr	r0, [pc, #12]	; (80002d4 <Button_Init+0x34>)
 80002c6:	f000 fb09 	bl	80008dc <GPIO_Init>
}
 80002ca:	bf00      	nop
 80002cc:	3708      	adds	r7, #8
 80002ce:	46bd      	mov	sp, r7
 80002d0:	bd80      	pop	{r7, pc}
 80002d2:	bf00      	nop
 80002d4:	40020800 	.word	0x40020800

080002d8 <I2C_InitSlave>:
 * @brief  I2C_InitSlave
 * @param  None
 * @retval None
 */
static void I2C_InitSlave(void)
{
 80002d8:	b580      	push	{r7, lr}
 80002da:	b088      	sub	sp, #32
 80002dc:	af00      	add	r7, sp, #0
	I2C_InitTypeDef I2C_InitStruct;
	GPIO_InitTypeDef GPIO_InitStruct;
	NVIC_InitTypeDef NVIC_InitStruct;

	// Initialize GPIO as open drain alternate function ------------------------
	RCC_APB1PeriphClockCmd(I2C_SLAVE_RCC, ENABLE);
 80002de:	2101      	movs	r1, #1
 80002e0:	f44f 1000 	mov.w	r0, #2097152	; 0x200000
 80002e4:	f000 ff28 	bl	8001138 <RCC_APB1PeriphClockCmd>
	RCC_AHB1PeriphClockCmd(I2C_SLAVE_GPIO_RCC, ENABLE);
 80002e8:	2101      	movs	r1, #1
 80002ea:	2002      	movs	r0, #2
 80002ec:	f000 ff04 	bl	80010f8 <RCC_AHB1PeriphClockCmd>

	GPIO_InitStruct.GPIO_Mode = GPIO_Mode_AF;
 80002f0:	2302      	movs	r3, #2
 80002f2:	733b      	strb	r3, [r7, #12]
	GPIO_InitStruct.GPIO_Speed = GPIO_Speed_50MHz;
 80002f4:	2302      	movs	r3, #2
 80002f6:	737b      	strb	r3, [r7, #13]
	GPIO_InitStruct.GPIO_OType = GPIO_OType_OD;
 80002f8:	2301      	movs	r3, #1
 80002fa:	73bb      	strb	r3, [r7, #14]
	GPIO_InitStruct.GPIO_PuPd  = GPIO_PuPd_NOPULL;
 80002fc:	2300      	movs	r3, #0
 80002fe:	73fb      	strb	r3, [r7, #15]

	GPIO_InitStruct.GPIO_Pin = SCL_SLAVE_PIN | SDA_SLAVE_PIN;
 8000300:	f44f 7340 	mov.w	r3, #768	; 0x300
 8000304:	60bb      	str	r3, [r7, #8]
	GPIO_Init(I2C_SLAVE_PORT, &GPIO_InitStruct);
 8000306:	f107 0308 	add.w	r3, r7, #8
 800030a:	4619      	mov	r1, r3
 800030c:	4820      	ldr	r0, [pc, #128]	; (8000390 <I2C_InitSlave+0xb8>)
 800030e:	f000 fae5 	bl	80008dc <GPIO_Init>

	// Connect PB8 to I2C1_SCL -------------------------------------------------
	GPIO_PinAFConfig(I2C_SLAVE_PORT, GPIO_PinSource8, GPIO_AF_I2C1);
 8000312:	2204      	movs	r2, #4
 8000314:	2108      	movs	r1, #8
 8000316:	481e      	ldr	r0, [pc, #120]	; (8000390 <I2C_InitSlave+0xb8>)
 8000318:	f000 fba6 	bl	8000a68 <GPIO_PinAFConfig>

	// Connect PB9 to I2C1_SDA -------------------------------------------------
	GPIO_PinAFConfig(I2C_SLAVE_PORT, GPIO_PinSource9, GPIO_AF_I2C1);
 800031c:	2204      	movs	r2, #4
 800031e:	2109      	movs	r1, #9
 8000320:	481b      	ldr	r0, [pc, #108]	; (8000390 <I2C_InitSlave+0xb8>)
 8000322:	f000 fba1 	bl	8000a68 <GPIO_PinAFConfig>

	// Initialize I2C1 ---------------------------------------------------------
	I2C_InitStruct.I2C_ClockSpeed = I2C_SPEED;
 8000326:	4b1b      	ldr	r3, [pc, #108]	; (8000394 <I2C_InitSlave+0xbc>)
 8000328:	613b      	str	r3, [r7, #16]
	I2C_InitStruct.I2C_Mode = I2C_Mode_I2C;
 800032a:	2300      	movs	r3, #0
 800032c:	82bb      	strh	r3, [r7, #20]
	I2C_InitStruct.I2C_DutyCycle = I2C_DutyCycle_2;
 800032e:	f64b 73ff 	movw	r3, #49151	; 0xbfff
 8000332:	82fb      	strh	r3, [r7, #22]
	I2C_InitStruct.I2C_OwnAddress1 = SERIAL_ADR;
 8000334:	2302      	movs	r3, #2
 8000336:	833b      	strh	r3, [r7, #24]
	I2C_InitStruct.I2C_Ack = I2C_Ack_Enable;
 8000338:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800033c:	837b      	strh	r3, [r7, #26]
	I2C_InitStruct.I2C_AcknowledgedAddress = I2C_AcknowledgedAddress_7bit;
 800033e:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8000342:	83bb      	strh	r3, [r7, #28]

	I2C_Init(I2C_SLAVE_INSTANCE, &I2C_InitStruct);
 8000344:	f107 0310 	add.w	r3, r7, #16
 8000348:	4619      	mov	r1, r3
 800034a:	4813      	ldr	r0, [pc, #76]	; (8000398 <I2C_InitSlave+0xc0>)
 800034c:	f000 fbd6 	bl	8000afc <I2C_Init>
	I2C_Cmd(I2C_SLAVE_INSTANCE, ENABLE);
 8000350:	2101      	movs	r1, #1
 8000352:	4811      	ldr	r0, [pc, #68]	; (8000398 <I2C_InitSlave+0xc0>)
 8000354:	f000 fc94 	bl	8000c80 <I2C_Cmd>

	// Configure interrupt -----------------------------------------------------
	I2C_ITConfig(I2C_SLAVE_INSTANCE, I2C_IT_EVT, ENABLE);
 8000358:	2201      	movs	r2, #1
 800035a:	f44f 7100 	mov.w	r1, #512	; 0x200
 800035e:	480e      	ldr	r0, [pc, #56]	; (8000398 <I2C_InitSlave+0xc0>)
 8000360:	f000 fd4a 	bl	8000df8 <I2C_ITConfig>
	I2C_ITConfig(I2C_SLAVE_INSTANCE, I2C_IT_BUF, ENABLE);
 8000364:	2201      	movs	r2, #1
 8000366:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800036a:	480b      	ldr	r0, [pc, #44]	; (8000398 <I2C_InitSlave+0xc0>)
 800036c:	f000 fd44 	bl	8000df8 <I2C_ITConfig>

	NVIC_InitStruct.NVIC_IRQChannel = I2C1_EV_IRQn;
 8000370:	231f      	movs	r3, #31
 8000372:	713b      	strb	r3, [r7, #4]
	NVIC_InitStruct.NVIC_IRQChannelPreemptionPriority = 0;
 8000374:	2300      	movs	r3, #0
 8000376:	717b      	strb	r3, [r7, #5]
	NVIC_InitStruct.NVIC_IRQChannelSubPriority = 0;
 8000378:	2300      	movs	r3, #0
 800037a:	71bb      	strb	r3, [r7, #6]
	NVIC_InitStruct.NVIC_IRQChannelCmd = ENABLE;
 800037c:	2301      	movs	r3, #1
 800037e:	71fb      	strb	r3, [r7, #7]

	NVIC_Init(&NVIC_InitStruct);
 8000380:	1d3b      	adds	r3, r7, #4
 8000382:	4618      	mov	r0, r3
 8000384:	f000 fa48 	bl	8000818 <NVIC_Init>
}
 8000388:	bf00      	nop
 800038a:	3720      	adds	r7, #32
 800038c:	46bd      	mov	sp, r7
 800038e:	bd80      	pop	{r7, pc}
 8000390:	40020400 	.word	0x40020400
 8000394:	00061a80 	.word	0x00061a80
 8000398:	40005400 	.word	0x40005400

0800039c <I2C_InitMaster>:
 * @brief  I2C_InitMaster
 * @param  None
 * @retval None
 */
static void I2C_InitMaster(void)
{
 800039c:	b580      	push	{r7, lr}
 800039e:	b086      	sub	sp, #24
 80003a0:	af00      	add	r7, sp, #0
	I2C_InitTypeDef I2C_InitStruct;
	GPIO_InitTypeDef GPIO_InitStruct;

	// Initialize GPIO as open drain alternate function ------------------------
	//Enable the i2c
	RCC_APB1PeriphClockCmd(I2C_MASTER_RCC, ENABLE);
 80003a2:	2101      	movs	r1, #1
 80003a4:	f44f 0000 	mov.w	r0, #8388608	; 0x800000
 80003a8:	f000 fec6 	bl	8001138 <RCC_APB1PeriphClockCmd>
	RCC_AHB1PeriphClockCmd(I2C_MASTER_GPIO_RCC, ENABLE);
 80003ac:	2101      	movs	r1, #1
 80003ae:	2001      	movs	r0, #1
 80003b0:	f000 fea2 	bl	80010f8 <RCC_AHB1PeriphClockCmd>
	RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOC, ENABLE);
 80003b4:	2101      	movs	r1, #1
 80003b6:	2004      	movs	r0, #4
 80003b8:	f000 fe9e 	bl	80010f8 <RCC_AHB1PeriphClockCmd>

	GPIO_InitStruct.GPIO_Mode = GPIO_Mode_AF;
 80003bc:	2302      	movs	r3, #2
 80003be:	713b      	strb	r3, [r7, #4]
	GPIO_InitStruct.GPIO_Speed = GPIO_Speed_50MHz;
 80003c0:	2302      	movs	r3, #2
 80003c2:	717b      	strb	r3, [r7, #5]
	GPIO_InitStruct.GPIO_OType = GPIO_OType_OD;
 80003c4:	2301      	movs	r3, #1
 80003c6:	71bb      	strb	r3, [r7, #6]
	GPIO_InitStruct.GPIO_PuPd  = GPIO_PuPd_UP;
 80003c8:	2301      	movs	r3, #1
 80003ca:	71fb      	strb	r3, [r7, #7]

	GPIO_InitStruct.GPIO_Pin = SCL_MASTER_PIN;
 80003cc:	f44f 7380 	mov.w	r3, #256	; 0x100
 80003d0:	603b      	str	r3, [r7, #0]
	GPIO_Init(I2C_MASTER_PORT, &GPIO_InitStruct);
 80003d2:	463b      	mov	r3, r7
 80003d4:	4619      	mov	r1, r3
 80003d6:	4819      	ldr	r0, [pc, #100]	; (800043c <I2C_InitMaster+0xa0>)
 80003d8:	f000 fa80 	bl	80008dc <GPIO_Init>

	GPIO_InitStruct.GPIO_Pin = SDA_MASTER_PIN;
 80003dc:	f44f 7300 	mov.w	r3, #512	; 0x200
 80003e0:	603b      	str	r3, [r7, #0]
	GPIO_Init(GPIOC, &GPIO_InitStruct);
 80003e2:	463b      	mov	r3, r7
 80003e4:	4619      	mov	r1, r3
 80003e6:	4816      	ldr	r0, [pc, #88]	; (8000440 <I2C_InitMaster+0xa4>)
 80003e8:	f000 fa78 	bl	80008dc <GPIO_Init>

	// Connect PA8 to I2C3_SCL -------------------------------------------------
	GPIO_PinAFConfig(I2C_MASTER_PORT, GPIO_PinSource8, GPIO_AF_I2C3);
 80003ec:	2204      	movs	r2, #4
 80003ee:	2108      	movs	r1, #8
 80003f0:	4812      	ldr	r0, [pc, #72]	; (800043c <I2C_InitMaster+0xa0>)
 80003f2:	f000 fb39 	bl	8000a68 <GPIO_PinAFConfig>

	// Connect PB4 to I2C3_SDA -------------------------------------------------
	GPIO_PinAFConfig(GPIOC, GPIO_PinSource9, GPIO_AF_I2C3);
 80003f6:	2204      	movs	r2, #4
 80003f8:	2109      	movs	r1, #9
 80003fa:	4811      	ldr	r0, [pc, #68]	; (8000440 <I2C_InitMaster+0xa4>)
 80003fc:	f000 fb34 	bl	8000a68 <GPIO_PinAFConfig>

	// Initialize I2C3 ---------------------------------------------------------
	I2C_InitStruct.I2C_ClockSpeed = I2C_SPEED;
 8000400:	4b10      	ldr	r3, [pc, #64]	; (8000444 <I2C_InitMaster+0xa8>)
 8000402:	60bb      	str	r3, [r7, #8]
	I2C_InitStruct.I2C_Mode = I2C_Mode_I2C;
 8000404:	2300      	movs	r3, #0
 8000406:	81bb      	strh	r3, [r7, #12]
	I2C_InitStruct.I2C_DutyCycle = I2C_DutyCycle_2;
 8000408:	f64b 73ff 	movw	r3, #49151	; 0xbfff
 800040c:	81fb      	strh	r3, [r7, #14]
	I2C_InitStruct.I2C_OwnAddress1 = 0x00;
 800040e:	2300      	movs	r3, #0
 8000410:	823b      	strh	r3, [r7, #16]
	I2C_InitStruct.I2C_Ack = I2C_Ack_Enable;
 8000412:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000416:	827b      	strh	r3, [r7, #18]
	I2C_InitStruct.I2C_AcknowledgedAddress = I2C_AcknowledgedAddress_7bit;
 8000418:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 800041c:	82bb      	strh	r3, [r7, #20]

	I2C_Init(I2C_MASTER_INSTANCE, &I2C_InitStruct);
 800041e:	f107 0308 	add.w	r3, r7, #8
 8000422:	4619      	mov	r1, r3
 8000424:	4808      	ldr	r0, [pc, #32]	; (8000448 <I2C_InitMaster+0xac>)
 8000426:	f000 fb69 	bl	8000afc <I2C_Init>
	I2C_Cmd(I2C_MASTER_INSTANCE, ENABLE);
 800042a:	2101      	movs	r1, #1
 800042c:	4806      	ldr	r0, [pc, #24]	; (8000448 <I2C_InitMaster+0xac>)
 800042e:	f000 fc27 	bl	8000c80 <I2C_Cmd>
}
 8000432:	bf00      	nop
 8000434:	3718      	adds	r7, #24
 8000436:	46bd      	mov	sp, r7
 8000438:	bd80      	pop	{r7, pc}
 800043a:	bf00      	nop
 800043c:	40020000 	.word	0x40020000
 8000440:	40020800 	.word	0x40020800
 8000444:	00061a80 	.word	0x00061a80
 8000448:	40005c00 	.word	0x40005c00

0800044c <I2C_Start>:
 * @param  None
 * @retval None
 */
static
void I2C_Start(void)
{
 800044c:	b580      	push	{r7, lr}
 800044e:	af00      	add	r7, sp, #0
	// Wait until I2Cx is not busy anymore
	while (I2C_GetFlagStatus(I2C_MASTER_INSTANCE, I2C_FLAG_BUSY));
 8000450:	bf00      	nop
 8000452:	f44f 3100 	mov.w	r1, #131072	; 0x20000
 8000456:	480a      	ldr	r0, [pc, #40]	; (8000480 <I2C_Start+0x34>)
 8000458:	f000 fd44 	bl	8000ee4 <I2C_GetFlagStatus>
 800045c:	4603      	mov	r3, r0
 800045e:	2b00      	cmp	r3, #0
 8000460:	d1f7      	bne.n	8000452 <I2C_Start+0x6>

	// Generate start condition
	I2C_GenerateSTART(I2C_MASTER_INSTANCE, ENABLE);
 8000462:	2101      	movs	r1, #1
 8000464:	4806      	ldr	r0, [pc, #24]	; (8000480 <I2C_Start+0x34>)
 8000466:	f000 fc2b 	bl	8000cc0 <I2C_GenerateSTART>

	// Wait for I2C EV5.
	// It means that the start condition has been correctly released
	// on the I2C bus (the bus is free, no other devices is communicating))
	while (!I2C_CheckEvent(I2C_MASTER_INSTANCE, I2C_EVENT_MASTER_MODE_SELECT));
 800046a:	bf00      	nop
 800046c:	4905      	ldr	r1, [pc, #20]	; (8000484 <I2C_Start+0x38>)
 800046e:	4804      	ldr	r0, [pc, #16]	; (8000480 <I2C_Start+0x34>)
 8000470:	f000 fce6 	bl	8000e40 <I2C_CheckEvent>
 8000474:	4603      	mov	r3, r0
 8000476:	2b00      	cmp	r3, #0
 8000478:	d0f8      	beq.n	800046c <I2C_Start+0x20>
}
 800047a:	bf00      	nop
 800047c:	bf00      	nop
 800047e:	bd80      	pop	{r7, pc}
 8000480:	40005c00 	.word	0x40005c00
 8000484:	00030001 	.word	0x00030001

08000488 <I2C_SendAddress>:

static void I2C_SendAddress(uint8_t address) {
 8000488:	b580      	push	{r7, lr}
 800048a:	b082      	sub	sp, #8
 800048c:	af00      	add	r7, sp, #0
 800048e:	4603      	mov	r3, r0
 8000490:	71fb      	strb	r3, [r7, #7]
	I2C_Send7bitAddress(I2C_MASTER_INSTANCE, address, I2C_Direction_Transmitter);
 8000492:	79fb      	ldrb	r3, [r7, #7]
 8000494:	2200      	movs	r2, #0
 8000496:	4619      	mov	r1, r3
 8000498:	4807      	ldr	r0, [pc, #28]	; (80004b8 <I2C_SendAddress+0x30>)
 800049a:	f000 fc51 	bl	8000d40 <I2C_Send7bitAddress>

	while (!I2C_CheckEvent(I2C_MASTER_INSTANCE, I2C_EVENT_MASTER_TRANSMITTER_MODE_SELECTED));
 800049e:	bf00      	nop
 80004a0:	4906      	ldr	r1, [pc, #24]	; (80004bc <I2C_SendAddress+0x34>)
 80004a2:	4805      	ldr	r0, [pc, #20]	; (80004b8 <I2C_SendAddress+0x30>)
 80004a4:	f000 fccc 	bl	8000e40 <I2C_CheckEvent>
 80004a8:	4603      	mov	r3, r0
 80004aa:	2b00      	cmp	r3, #0
 80004ac:	d0f8      	beq.n	80004a0 <I2C_SendAddress+0x18>
}
 80004ae:	bf00      	nop
 80004b0:	bf00      	nop
 80004b2:	3708      	adds	r7, #8
 80004b4:	46bd      	mov	sp, r7
 80004b6:	bd80      	pop	{r7, pc}
 80004b8:	40005c00 	.word	0x40005c00
 80004bc:	00070082 	.word	0x00070082

080004c0 <I2C_TransmitData>:
 * @brief  Send bits data
 * @param  data
 * @retval None
 */
static void I2C_TransmitData(uint8_t data)
{
 80004c0:	b580      	push	{r7, lr}
 80004c2:	b082      	sub	sp, #8
 80004c4:	af00      	add	r7, sp, #0
 80004c6:	4603      	mov	r3, r0
 80004c8:	71fb      	strb	r3, [r7, #7]
	// Send data byte
	I2C_SendData(I2C_MASTER_INSTANCE, data);
 80004ca:	79fb      	ldrb	r3, [r7, #7]
 80004cc:	4619      	mov	r1, r3
 80004ce:	4808      	ldr	r0, [pc, #32]	; (80004f0 <I2C_TransmitData+0x30>)
 80004d0:	f000 fc74 	bl	8000dbc <I2C_SendData>
	// Wait for I2C EV8_2.
	// It means that the data has been physically shifted out and
	// output on the bus)
	while (!I2C_CheckEvent(I2C_MASTER_INSTANCE, I2C_EVENT_MASTER_BYTE_TRANSMITTED));
 80004d4:	bf00      	nop
 80004d6:	4907      	ldr	r1, [pc, #28]	; (80004f4 <I2C_TransmitData+0x34>)
 80004d8:	4805      	ldr	r0, [pc, #20]	; (80004f0 <I2C_TransmitData+0x30>)
 80004da:	f000 fcb1 	bl	8000e40 <I2C_CheckEvent>
 80004de:	4603      	mov	r3, r0
 80004e0:	2b00      	cmp	r3, #0
 80004e2:	d0f8      	beq.n	80004d6 <I2C_TransmitData+0x16>
}
 80004e4:	bf00      	nop
 80004e6:	bf00      	nop
 80004e8:	3708      	adds	r7, #8
 80004ea:	46bd      	mov	sp, r7
 80004ec:	bd80      	pop	{r7, pc}
 80004ee:	bf00      	nop
 80004f0:	40005c00 	.word	0x40005c00
 80004f4:	00070084 	.word	0x00070084

080004f8 <I2C_Stop>:
 * @param  None
 * @retval None
 */
static
void I2C_Stop(void)
{
 80004f8:	b580      	push	{r7, lr}
 80004fa:	af00      	add	r7, sp, #0
	// Generate I2C stop condition
	I2C_GenerateSTOP(I2C_MASTER_INSTANCE, ENABLE);
 80004fc:	2101      	movs	r1, #1
 80004fe:	4802      	ldr	r0, [pc, #8]	; (8000508 <I2C_Stop+0x10>)
 8000500:	f000 fbfe 	bl	8000d00 <I2C_GenerateSTOP>
}
 8000504:	bf00      	nop
 8000506:	bd80      	pop	{r7, pc}
 8000508:	40005c00 	.word	0x40005c00

0800050c <I2C1_EV_IRQHandler>:
 * @brief  I2C1_EV_IRQHandler
 * @param  None
 * @retval None
 */
void I2C1_EV_IRQHandler(void)
{
 800050c:	b580      	push	{r7, lr}
 800050e:	af00      	add	r7, sp, #0
	switch (I2C_GetLastEvent(I2C_SLAVE_INSTANCE))
 8000510:	4815      	ldr	r0, [pc, #84]	; (8000568 <I2C1_EV_IRQHandler+0x5c>)
 8000512:	f000 fcc5 	bl	8000ea0 <I2C_GetLastEvent>
 8000516:	4603      	mov	r3, r0
 8000518:	4a14      	ldr	r2, [pc, #80]	; (800056c <I2C1_EV_IRQHandler+0x60>)
 800051a:	4293      	cmp	r3, r2
 800051c:	d00c      	beq.n	8000538 <I2C1_EV_IRQHandler+0x2c>
 800051e:	4a13      	ldr	r2, [pc, #76]	; (800056c <I2C1_EV_IRQHandler+0x60>)
 8000520:	4293      	cmp	r3, r2
 8000522:	d81a      	bhi.n	800055a <I2C1_EV_IRQHandler+0x4e>
 8000524:	2b10      	cmp	r3, #16
 8000526:	d013      	beq.n	8000550 <I2C1_EV_IRQHandler+0x44>
 8000528:	f1b3 1f02 	cmp.w	r3, #131074	; 0x20002
 800052c:	d115      	bne.n	800055a <I2C1_EV_IRQHandler+0x4e>
	{
	    case I2C_EVENT_SLAVE_RECEIVER_ADDRESS_MATCHED:
	    	// The address sent by the master matches the own address of the peripheral
	        I2C_ClearFlag(I2C_SLAVE_INSTANCE, I2C_FLAG_ADDR);
 800052e:	4910      	ldr	r1, [pc, #64]	; (8000570 <I2C1_EV_IRQHandler+0x64>)
 8000530:	480d      	ldr	r0, [pc, #52]	; (8000568 <I2C1_EV_IRQHandler+0x5c>)
 8000532:	f000 fd0a 	bl	8000f4a <I2C_ClearFlag>
	        break;
 8000536:	e011      	b.n	800055c <I2C1_EV_IRQHandler+0x50>

	    case I2C_EVENT_SLAVE_BYTE_RECEIVED:
	    	Data_Receive = I2C_ReceiveData(I2C_SLAVE_INSTANCE);
 8000538:	480b      	ldr	r0, [pc, #44]	; (8000568 <I2C1_EV_IRQHandler+0x5c>)
 800053a:	f000 fc4f 	bl	8000ddc <I2C_ReceiveData>
 800053e:	4603      	mov	r3, r0
 8000540:	461a      	mov	r2, r3
 8000542:	4b0c      	ldr	r3, [pc, #48]	; (8000574 <I2C1_EV_IRQHandler+0x68>)
 8000544:	701a      	strb	r2, [r3, #0]
	        I2C_ClearFlag(I2C_SLAVE_INSTANCE, I2C_FLAG_RXNE);
 8000546:	490c      	ldr	r1, [pc, #48]	; (8000578 <I2C1_EV_IRQHandler+0x6c>)
 8000548:	4807      	ldr	r0, [pc, #28]	; (8000568 <I2C1_EV_IRQHandler+0x5c>)
 800054a:	f000 fcfe 	bl	8000f4a <I2C_ClearFlag>
	        break;
 800054e:	e005      	b.n	800055c <I2C1_EV_IRQHandler+0x50>

	    case I2C_EVENT_SLAVE_STOP_DETECTED:
	    	// Disable bit stop I2C1
	    	I2C_AcknowledgeConfig(I2C_SLAVE_INSTANCE, ENABLE);
 8000550:	2101      	movs	r1, #1
 8000552:	4805      	ldr	r0, [pc, #20]	; (8000568 <I2C1_EV_IRQHandler+0x5c>)
 8000554:	f000 fc12 	bl	8000d7c <I2C_AcknowledgeConfig>
            break;
 8000558:	e000      	b.n	800055c <I2C1_EV_IRQHandler+0x50>

	    default:
		    break;
 800055a:	bf00      	nop
    }

    I2C_ClearITPendingBit(I2C_SLAVE_INSTANCE, I2C_IT_RXNE);
 800055c:	4907      	ldr	r1, [pc, #28]	; (800057c <I2C1_EV_IRQHandler+0x70>)
 800055e:	4802      	ldr	r0, [pc, #8]	; (8000568 <I2C1_EV_IRQHandler+0x5c>)
 8000560:	f000 fd0a 	bl	8000f78 <I2C_ClearITPendingBit>
}
 8000564:	bf00      	nop
 8000566:	bd80      	pop	{r7, pc}
 8000568:	40005400 	.word	0x40005400
 800056c:	00020040 	.word	0x00020040
 8000570:	10000002 	.word	0x10000002
 8000574:	20000040 	.word	0x20000040
 8000578:	10000040 	.word	0x10000040
 800057c:	06000040 	.word	0x06000040

08000580 <Delay_ms>:
 * @brief  Delay
 * @param  None
 * @retval None
 */
static void Delay_ms(uint32_t ms)
{
 8000580:	b480      	push	{r7}
 8000582:	b085      	sub	sp, #20
 8000584:	af00      	add	r7, sp, #0
 8000586:	6078      	str	r0, [r7, #4]
	uint32_t i, j;

	for (i = 0 ; i < ms ; i ++)
 8000588:	2300      	movs	r3, #0
 800058a:	60fb      	str	r3, [r7, #12]
 800058c:	e00d      	b.n	80005aa <Delay_ms+0x2a>
	{
		for (j = 0; j < 5000; j++) {;}
 800058e:	2300      	movs	r3, #0
 8000590:	60bb      	str	r3, [r7, #8]
 8000592:	e002      	b.n	800059a <Delay_ms+0x1a>
 8000594:	68bb      	ldr	r3, [r7, #8]
 8000596:	3301      	adds	r3, #1
 8000598:	60bb      	str	r3, [r7, #8]
 800059a:	68bb      	ldr	r3, [r7, #8]
 800059c:	f241 3287 	movw	r2, #4999	; 0x1387
 80005a0:	4293      	cmp	r3, r2
 80005a2:	d9f7      	bls.n	8000594 <Delay_ms+0x14>
	for (i = 0 ; i < ms ; i ++)
 80005a4:	68fb      	ldr	r3, [r7, #12]
 80005a6:	3301      	adds	r3, #1
 80005a8:	60fb      	str	r3, [r7, #12]
 80005aa:	68fa      	ldr	r2, [r7, #12]
 80005ac:	687b      	ldr	r3, [r7, #4]
 80005ae:	429a      	cmp	r2, r3
 80005b0:	d3ed      	bcc.n	800058e <Delay_ms+0xe>
	}
}
 80005b2:	bf00      	nop
 80005b4:	bf00      	nop
 80005b6:	3714      	adds	r7, #20
 80005b8:	46bd      	mov	sp, r7
 80005ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005be:	4770      	bx	lr

080005c0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80005c0:	480d      	ldr	r0, [pc, #52]	; (80005f8 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80005c2:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 80005c4:	f000 f826 	bl	8000614 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80005c8:	480c      	ldr	r0, [pc, #48]	; (80005fc <LoopForever+0x6>)
  ldr r1, =_edata
 80005ca:	490d      	ldr	r1, [pc, #52]	; (8000600 <LoopForever+0xa>)
  ldr r2, =_sidata
 80005cc:	4a0d      	ldr	r2, [pc, #52]	; (8000604 <LoopForever+0xe>)
  movs r3, #0
 80005ce:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80005d0:	e002      	b.n	80005d8 <LoopCopyDataInit>

080005d2 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80005d2:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80005d4:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80005d6:	3304      	adds	r3, #4

080005d8 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80005d8:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80005da:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80005dc:	d3f9      	bcc.n	80005d2 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80005de:	4a0a      	ldr	r2, [pc, #40]	; (8000608 <LoopForever+0x12>)
  ldr r4, =_ebss
 80005e0:	4c0a      	ldr	r4, [pc, #40]	; (800060c <LoopForever+0x16>)
  movs r3, #0
 80005e2:	2300      	movs	r3, #0
  b LoopFillZerobss
 80005e4:	e001      	b.n	80005ea <LoopFillZerobss>

080005e6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80005e6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80005e8:	3204      	adds	r2, #4

080005ea <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80005ea:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80005ec:	d3fb      	bcc.n	80005e6 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80005ee:	f000 fdc3 	bl	8001178 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80005f2:	f7ff fdef 	bl	80001d4 <main>

080005f6 <LoopForever>:

LoopForever:
    b LoopForever
 80005f6:	e7fe      	b.n	80005f6 <LoopForever>
  ldr   r0, =_estack
 80005f8:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 80005fc:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000600:	20000024 	.word	0x20000024
  ldr r2, =_sidata
 8000604:	080011e0 	.word	0x080011e0
  ldr r2, =_sbss
 8000608:	20000024 	.word	0x20000024
  ldr r4, =_ebss
 800060c:	20000044 	.word	0x20000044

08000610 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000610:	e7fe      	b.n	8000610 <ADC_IRQHandler>
	...

08000614 <SystemInit>:
 8000614:	b580      	push	{r7, lr}
 8000616:	af00      	add	r7, sp, #0
 8000618:	4b16      	ldr	r3, [pc, #88]	; (8000674 <SystemInit+0x60>)
 800061a:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800061e:	4a15      	ldr	r2, [pc, #84]	; (8000674 <SystemInit+0x60>)
 8000620:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8000624:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 8000628:	4b13      	ldr	r3, [pc, #76]	; (8000678 <SystemInit+0x64>)
 800062a:	681b      	ldr	r3, [r3, #0]
 800062c:	4a12      	ldr	r2, [pc, #72]	; (8000678 <SystemInit+0x64>)
 800062e:	f043 0301 	orr.w	r3, r3, #1
 8000632:	6013      	str	r3, [r2, #0]
 8000634:	4b10      	ldr	r3, [pc, #64]	; (8000678 <SystemInit+0x64>)
 8000636:	2200      	movs	r2, #0
 8000638:	609a      	str	r2, [r3, #8]
 800063a:	4b0f      	ldr	r3, [pc, #60]	; (8000678 <SystemInit+0x64>)
 800063c:	681b      	ldr	r3, [r3, #0]
 800063e:	4a0e      	ldr	r2, [pc, #56]	; (8000678 <SystemInit+0x64>)
 8000640:	f023 7384 	bic.w	r3, r3, #17301504	; 0x1080000
 8000644:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8000648:	6013      	str	r3, [r2, #0]
 800064a:	4b0b      	ldr	r3, [pc, #44]	; (8000678 <SystemInit+0x64>)
 800064c:	4a0b      	ldr	r2, [pc, #44]	; (800067c <SystemInit+0x68>)
 800064e:	605a      	str	r2, [r3, #4]
 8000650:	4b09      	ldr	r3, [pc, #36]	; (8000678 <SystemInit+0x64>)
 8000652:	681b      	ldr	r3, [r3, #0]
 8000654:	4a08      	ldr	r2, [pc, #32]	; (8000678 <SystemInit+0x64>)
 8000656:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 800065a:	6013      	str	r3, [r2, #0]
 800065c:	4b06      	ldr	r3, [pc, #24]	; (8000678 <SystemInit+0x64>)
 800065e:	2200      	movs	r2, #0
 8000660:	60da      	str	r2, [r3, #12]
 8000662:	f000 f889 	bl	8000778 <SetSysClock>
 8000666:	4b03      	ldr	r3, [pc, #12]	; (8000674 <SystemInit+0x60>)
 8000668:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 800066c:	609a      	str	r2, [r3, #8]
 800066e:	bf00      	nop
 8000670:	bd80      	pop	{r7, pc}
 8000672:	bf00      	nop
 8000674:	e000ed00 	.word	0xe000ed00
 8000678:	40023800 	.word	0x40023800
 800067c:	24003010 	.word	0x24003010

08000680 <SystemCoreClockUpdate>:
 8000680:	b480      	push	{r7}
 8000682:	b087      	sub	sp, #28
 8000684:	af00      	add	r7, sp, #0
 8000686:	2300      	movs	r3, #0
 8000688:	613b      	str	r3, [r7, #16]
 800068a:	2300      	movs	r3, #0
 800068c:	617b      	str	r3, [r7, #20]
 800068e:	2302      	movs	r3, #2
 8000690:	60fb      	str	r3, [r7, #12]
 8000692:	2300      	movs	r3, #0
 8000694:	60bb      	str	r3, [r7, #8]
 8000696:	2302      	movs	r3, #2
 8000698:	607b      	str	r3, [r7, #4]
 800069a:	4b32      	ldr	r3, [pc, #200]	; (8000764 <SystemCoreClockUpdate+0xe4>)
 800069c:	689b      	ldr	r3, [r3, #8]
 800069e:	f003 030c 	and.w	r3, r3, #12
 80006a2:	613b      	str	r3, [r7, #16]
 80006a4:	693b      	ldr	r3, [r7, #16]
 80006a6:	2b04      	cmp	r3, #4
 80006a8:	d007      	beq.n	80006ba <SystemCoreClockUpdate+0x3a>
 80006aa:	2b08      	cmp	r3, #8
 80006ac:	d009      	beq.n	80006c2 <SystemCoreClockUpdate+0x42>
 80006ae:	2b00      	cmp	r3, #0
 80006b0:	d13d      	bne.n	800072e <SystemCoreClockUpdate+0xae>
 80006b2:	4b2d      	ldr	r3, [pc, #180]	; (8000768 <SystemCoreClockUpdate+0xe8>)
 80006b4:	4a2d      	ldr	r2, [pc, #180]	; (800076c <SystemCoreClockUpdate+0xec>)
 80006b6:	601a      	str	r2, [r3, #0]
 80006b8:	e03d      	b.n	8000736 <SystemCoreClockUpdate+0xb6>
 80006ba:	4b2b      	ldr	r3, [pc, #172]	; (8000768 <SystemCoreClockUpdate+0xe8>)
 80006bc:	4a2c      	ldr	r2, [pc, #176]	; (8000770 <SystemCoreClockUpdate+0xf0>)
 80006be:	601a      	str	r2, [r3, #0]
 80006c0:	e039      	b.n	8000736 <SystemCoreClockUpdate+0xb6>
 80006c2:	4b28      	ldr	r3, [pc, #160]	; (8000764 <SystemCoreClockUpdate+0xe4>)
 80006c4:	685b      	ldr	r3, [r3, #4]
 80006c6:	0d9b      	lsrs	r3, r3, #22
 80006c8:	f003 0301 	and.w	r3, r3, #1
 80006cc:	60bb      	str	r3, [r7, #8]
 80006ce:	4b25      	ldr	r3, [pc, #148]	; (8000764 <SystemCoreClockUpdate+0xe4>)
 80006d0:	685b      	ldr	r3, [r3, #4]
 80006d2:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 80006d6:	607b      	str	r3, [r7, #4]
 80006d8:	68bb      	ldr	r3, [r7, #8]
 80006da:	2b00      	cmp	r3, #0
 80006dc:	d00c      	beq.n	80006f8 <SystemCoreClockUpdate+0x78>
 80006de:	4a24      	ldr	r2, [pc, #144]	; (8000770 <SystemCoreClockUpdate+0xf0>)
 80006e0:	687b      	ldr	r3, [r7, #4]
 80006e2:	fbb2 f3f3 	udiv	r3, r2, r3
 80006e6:	4a1f      	ldr	r2, [pc, #124]	; (8000764 <SystemCoreClockUpdate+0xe4>)
 80006e8:	6852      	ldr	r2, [r2, #4]
 80006ea:	0992      	lsrs	r2, r2, #6
 80006ec:	f3c2 0208 	ubfx	r2, r2, #0, #9
 80006f0:	fb02 f303 	mul.w	r3, r2, r3
 80006f4:	617b      	str	r3, [r7, #20]
 80006f6:	e00b      	b.n	8000710 <SystemCoreClockUpdate+0x90>
 80006f8:	4a1c      	ldr	r2, [pc, #112]	; (800076c <SystemCoreClockUpdate+0xec>)
 80006fa:	687b      	ldr	r3, [r7, #4]
 80006fc:	fbb2 f3f3 	udiv	r3, r2, r3
 8000700:	4a18      	ldr	r2, [pc, #96]	; (8000764 <SystemCoreClockUpdate+0xe4>)
 8000702:	6852      	ldr	r2, [r2, #4]
 8000704:	0992      	lsrs	r2, r2, #6
 8000706:	f3c2 0208 	ubfx	r2, r2, #0, #9
 800070a:	fb02 f303 	mul.w	r3, r2, r3
 800070e:	617b      	str	r3, [r7, #20]
 8000710:	4b14      	ldr	r3, [pc, #80]	; (8000764 <SystemCoreClockUpdate+0xe4>)
 8000712:	685b      	ldr	r3, [r3, #4]
 8000714:	0c1b      	lsrs	r3, r3, #16
 8000716:	f003 0303 	and.w	r3, r3, #3
 800071a:	3301      	adds	r3, #1
 800071c:	005b      	lsls	r3, r3, #1
 800071e:	60fb      	str	r3, [r7, #12]
 8000720:	697a      	ldr	r2, [r7, #20]
 8000722:	68fb      	ldr	r3, [r7, #12]
 8000724:	fbb2 f3f3 	udiv	r3, r2, r3
 8000728:	4a0f      	ldr	r2, [pc, #60]	; (8000768 <SystemCoreClockUpdate+0xe8>)
 800072a:	6013      	str	r3, [r2, #0]
 800072c:	e003      	b.n	8000736 <SystemCoreClockUpdate+0xb6>
 800072e:	4b0e      	ldr	r3, [pc, #56]	; (8000768 <SystemCoreClockUpdate+0xe8>)
 8000730:	4a0e      	ldr	r2, [pc, #56]	; (800076c <SystemCoreClockUpdate+0xec>)
 8000732:	601a      	str	r2, [r3, #0]
 8000734:	bf00      	nop
 8000736:	4b0b      	ldr	r3, [pc, #44]	; (8000764 <SystemCoreClockUpdate+0xe4>)
 8000738:	689b      	ldr	r3, [r3, #8]
 800073a:	091b      	lsrs	r3, r3, #4
 800073c:	f003 030f 	and.w	r3, r3, #15
 8000740:	4a0c      	ldr	r2, [pc, #48]	; (8000774 <SystemCoreClockUpdate+0xf4>)
 8000742:	5cd3      	ldrb	r3, [r2, r3]
 8000744:	b2db      	uxtb	r3, r3
 8000746:	613b      	str	r3, [r7, #16]
 8000748:	4b07      	ldr	r3, [pc, #28]	; (8000768 <SystemCoreClockUpdate+0xe8>)
 800074a:	681a      	ldr	r2, [r3, #0]
 800074c:	693b      	ldr	r3, [r7, #16]
 800074e:	fa22 f303 	lsr.w	r3, r2, r3
 8000752:	4a05      	ldr	r2, [pc, #20]	; (8000768 <SystemCoreClockUpdate+0xe8>)
 8000754:	6013      	str	r3, [r2, #0]
 8000756:	bf00      	nop
 8000758:	371c      	adds	r7, #28
 800075a:	46bd      	mov	sp, r7
 800075c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000760:	4770      	bx	lr
 8000762:	bf00      	nop
 8000764:	40023800 	.word	0x40023800
 8000768:	20000000 	.word	0x20000000
 800076c:	00f42400 	.word	0x00f42400
 8000770:	017d7840 	.word	0x017d7840
 8000774:	20000004 	.word	0x20000004

08000778 <SetSysClock>:
 8000778:	b480      	push	{r7}
 800077a:	af00      	add	r7, sp, #0
 800077c:	4b22      	ldr	r3, [pc, #136]	; (8000808 <SetSysClock+0x90>)
 800077e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000780:	4a21      	ldr	r2, [pc, #132]	; (8000808 <SetSysClock+0x90>)
 8000782:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8000786:	6413      	str	r3, [r2, #64]	; 0x40
 8000788:	4b20      	ldr	r3, [pc, #128]	; (800080c <SetSysClock+0x94>)
 800078a:	681b      	ldr	r3, [r3, #0]
 800078c:	4a1f      	ldr	r2, [pc, #124]	; (800080c <SetSysClock+0x94>)
 800078e:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8000792:	6013      	str	r3, [r2, #0]
 8000794:	4b1c      	ldr	r3, [pc, #112]	; (8000808 <SetSysClock+0x90>)
 8000796:	4a1c      	ldr	r2, [pc, #112]	; (8000808 <SetSysClock+0x90>)
 8000798:	689b      	ldr	r3, [r3, #8]
 800079a:	6093      	str	r3, [r2, #8]
 800079c:	4b1a      	ldr	r3, [pc, #104]	; (8000808 <SetSysClock+0x90>)
 800079e:	4a1a      	ldr	r2, [pc, #104]	; (8000808 <SetSysClock+0x90>)
 80007a0:	689b      	ldr	r3, [r3, #8]
 80007a2:	6093      	str	r3, [r2, #8]
 80007a4:	4b18      	ldr	r3, [pc, #96]	; (8000808 <SetSysClock+0x90>)
 80007a6:	689b      	ldr	r3, [r3, #8]
 80007a8:	4a17      	ldr	r2, [pc, #92]	; (8000808 <SetSysClock+0x90>)
 80007aa:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 80007ae:	6093      	str	r3, [r2, #8]
 80007b0:	4b15      	ldr	r3, [pc, #84]	; (8000808 <SetSysClock+0x90>)
 80007b2:	4a17      	ldr	r2, [pc, #92]	; (8000810 <SetSysClock+0x98>)
 80007b4:	605a      	str	r2, [r3, #4]
 80007b6:	4b14      	ldr	r3, [pc, #80]	; (8000808 <SetSysClock+0x90>)
 80007b8:	681b      	ldr	r3, [r3, #0]
 80007ba:	4a13      	ldr	r2, [pc, #76]	; (8000808 <SetSysClock+0x90>)
 80007bc:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80007c0:	6013      	str	r3, [r2, #0]
 80007c2:	bf00      	nop
 80007c4:	4b10      	ldr	r3, [pc, #64]	; (8000808 <SetSysClock+0x90>)
 80007c6:	681b      	ldr	r3, [r3, #0]
 80007c8:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80007cc:	2b00      	cmp	r3, #0
 80007ce:	d0f9      	beq.n	80007c4 <SetSysClock+0x4c>
 80007d0:	4b10      	ldr	r3, [pc, #64]	; (8000814 <SetSysClock+0x9c>)
 80007d2:	f240 6202 	movw	r2, #1538	; 0x602
 80007d6:	601a      	str	r2, [r3, #0]
 80007d8:	4b0b      	ldr	r3, [pc, #44]	; (8000808 <SetSysClock+0x90>)
 80007da:	689b      	ldr	r3, [r3, #8]
 80007dc:	4a0a      	ldr	r2, [pc, #40]	; (8000808 <SetSysClock+0x90>)
 80007de:	f023 0303 	bic.w	r3, r3, #3
 80007e2:	6093      	str	r3, [r2, #8]
 80007e4:	4b08      	ldr	r3, [pc, #32]	; (8000808 <SetSysClock+0x90>)
 80007e6:	689b      	ldr	r3, [r3, #8]
 80007e8:	4a07      	ldr	r2, [pc, #28]	; (8000808 <SetSysClock+0x90>)
 80007ea:	f043 0302 	orr.w	r3, r3, #2
 80007ee:	6093      	str	r3, [r2, #8]
 80007f0:	bf00      	nop
 80007f2:	4b05      	ldr	r3, [pc, #20]	; (8000808 <SetSysClock+0x90>)
 80007f4:	689b      	ldr	r3, [r3, #8]
 80007f6:	f003 030c 	and.w	r3, r3, #12
 80007fa:	2b08      	cmp	r3, #8
 80007fc:	d1f9      	bne.n	80007f2 <SetSysClock+0x7a>
 80007fe:	bf00      	nop
 8000800:	46bd      	mov	sp, r7
 8000802:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000806:	4770      	bx	lr
 8000808:	40023800 	.word	0x40023800
 800080c:	40007000 	.word	0x40007000
 8000810:	08015410 	.word	0x08015410
 8000814:	40023c00 	.word	0x40023c00

08000818 <NVIC_Init>:
 8000818:	b480      	push	{r7}
 800081a:	b085      	sub	sp, #20
 800081c:	af00      	add	r7, sp, #0
 800081e:	6078      	str	r0, [r7, #4]
 8000820:	2300      	movs	r3, #0
 8000822:	73fb      	strb	r3, [r7, #15]
 8000824:	2300      	movs	r3, #0
 8000826:	73bb      	strb	r3, [r7, #14]
 8000828:	230f      	movs	r3, #15
 800082a:	737b      	strb	r3, [r7, #13]
 800082c:	687b      	ldr	r3, [r7, #4]
 800082e:	78db      	ldrb	r3, [r3, #3]
 8000830:	2b00      	cmp	r3, #0
 8000832:	d039      	beq.n	80008a8 <NVIC_Init+0x90>
 8000834:	4b27      	ldr	r3, [pc, #156]	; (80008d4 <NVIC_Init+0xbc>)
 8000836:	68db      	ldr	r3, [r3, #12]
 8000838:	43db      	mvns	r3, r3
 800083a:	0a1b      	lsrs	r3, r3, #8
 800083c:	b2db      	uxtb	r3, r3
 800083e:	f003 0307 	and.w	r3, r3, #7
 8000842:	73fb      	strb	r3, [r7, #15]
 8000844:	7bfb      	ldrb	r3, [r7, #15]
 8000846:	f1c3 0304 	rsb	r3, r3, #4
 800084a:	73bb      	strb	r3, [r7, #14]
 800084c:	7b7a      	ldrb	r2, [r7, #13]
 800084e:	7bfb      	ldrb	r3, [r7, #15]
 8000850:	fa42 f303 	asr.w	r3, r2, r3
 8000854:	737b      	strb	r3, [r7, #13]
 8000856:	687b      	ldr	r3, [r7, #4]
 8000858:	785b      	ldrb	r3, [r3, #1]
 800085a:	461a      	mov	r2, r3
 800085c:	7bbb      	ldrb	r3, [r7, #14]
 800085e:	fa02 f303 	lsl.w	r3, r2, r3
 8000862:	73fb      	strb	r3, [r7, #15]
 8000864:	687b      	ldr	r3, [r7, #4]
 8000866:	789a      	ldrb	r2, [r3, #2]
 8000868:	7b7b      	ldrb	r3, [r7, #13]
 800086a:	4013      	ands	r3, r2
 800086c:	b2da      	uxtb	r2, r3
 800086e:	7bfb      	ldrb	r3, [r7, #15]
 8000870:	4313      	orrs	r3, r2
 8000872:	73fb      	strb	r3, [r7, #15]
 8000874:	7bfb      	ldrb	r3, [r7, #15]
 8000876:	011b      	lsls	r3, r3, #4
 8000878:	73fb      	strb	r3, [r7, #15]
 800087a:	4a17      	ldr	r2, [pc, #92]	; (80008d8 <NVIC_Init+0xc0>)
 800087c:	687b      	ldr	r3, [r7, #4]
 800087e:	781b      	ldrb	r3, [r3, #0]
 8000880:	4413      	add	r3, r2
 8000882:	7bfa      	ldrb	r2, [r7, #15]
 8000884:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8000888:	687b      	ldr	r3, [r7, #4]
 800088a:	781b      	ldrb	r3, [r3, #0]
 800088c:	f003 031f 	and.w	r3, r3, #31
 8000890:	4911      	ldr	r1, [pc, #68]	; (80008d8 <NVIC_Init+0xc0>)
 8000892:	687a      	ldr	r2, [r7, #4]
 8000894:	7812      	ldrb	r2, [r2, #0]
 8000896:	0952      	lsrs	r2, r2, #5
 8000898:	b2d2      	uxtb	r2, r2
 800089a:	4610      	mov	r0, r2
 800089c:	2201      	movs	r2, #1
 800089e:	fa02 f303 	lsl.w	r3, r2, r3
 80008a2:	f841 3020 	str.w	r3, [r1, r0, lsl #2]
 80008a6:	e00f      	b.n	80008c8 <NVIC_Init+0xb0>
 80008a8:	687b      	ldr	r3, [r7, #4]
 80008aa:	781b      	ldrb	r3, [r3, #0]
 80008ac:	f003 031f 	and.w	r3, r3, #31
 80008b0:	4909      	ldr	r1, [pc, #36]	; (80008d8 <NVIC_Init+0xc0>)
 80008b2:	687a      	ldr	r2, [r7, #4]
 80008b4:	7812      	ldrb	r2, [r2, #0]
 80008b6:	0952      	lsrs	r2, r2, #5
 80008b8:	b2d2      	uxtb	r2, r2
 80008ba:	4610      	mov	r0, r2
 80008bc:	2201      	movs	r2, #1
 80008be:	409a      	lsls	r2, r3
 80008c0:	f100 0320 	add.w	r3, r0, #32
 80008c4:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80008c8:	bf00      	nop
 80008ca:	3714      	adds	r7, #20
 80008cc:	46bd      	mov	sp, r7
 80008ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80008d2:	4770      	bx	lr
 80008d4:	e000ed00 	.word	0xe000ed00
 80008d8:	e000e100 	.word	0xe000e100

080008dc <GPIO_Init>:
 80008dc:	b480      	push	{r7}
 80008de:	b087      	sub	sp, #28
 80008e0:	af00      	add	r7, sp, #0
 80008e2:	6078      	str	r0, [r7, #4]
 80008e4:	6039      	str	r1, [r7, #0]
 80008e6:	2300      	movs	r3, #0
 80008e8:	617b      	str	r3, [r7, #20]
 80008ea:	2300      	movs	r3, #0
 80008ec:	613b      	str	r3, [r7, #16]
 80008ee:	2300      	movs	r3, #0
 80008f0:	60fb      	str	r3, [r7, #12]
 80008f2:	2300      	movs	r3, #0
 80008f4:	617b      	str	r3, [r7, #20]
 80008f6:	e076      	b.n	80009e6 <GPIO_Init+0x10a>
 80008f8:	2201      	movs	r2, #1
 80008fa:	697b      	ldr	r3, [r7, #20]
 80008fc:	fa02 f303 	lsl.w	r3, r2, r3
 8000900:	613b      	str	r3, [r7, #16]
 8000902:	683b      	ldr	r3, [r7, #0]
 8000904:	681b      	ldr	r3, [r3, #0]
 8000906:	693a      	ldr	r2, [r7, #16]
 8000908:	4013      	ands	r3, r2
 800090a:	60fb      	str	r3, [r7, #12]
 800090c:	68fa      	ldr	r2, [r7, #12]
 800090e:	693b      	ldr	r3, [r7, #16]
 8000910:	429a      	cmp	r2, r3
 8000912:	d165      	bne.n	80009e0 <GPIO_Init+0x104>
 8000914:	687b      	ldr	r3, [r7, #4]
 8000916:	681a      	ldr	r2, [r3, #0]
 8000918:	697b      	ldr	r3, [r7, #20]
 800091a:	005b      	lsls	r3, r3, #1
 800091c:	2103      	movs	r1, #3
 800091e:	fa01 f303 	lsl.w	r3, r1, r3
 8000922:	43db      	mvns	r3, r3
 8000924:	401a      	ands	r2, r3
 8000926:	687b      	ldr	r3, [r7, #4]
 8000928:	601a      	str	r2, [r3, #0]
 800092a:	687b      	ldr	r3, [r7, #4]
 800092c:	681a      	ldr	r2, [r3, #0]
 800092e:	683b      	ldr	r3, [r7, #0]
 8000930:	791b      	ldrb	r3, [r3, #4]
 8000932:	4619      	mov	r1, r3
 8000934:	697b      	ldr	r3, [r7, #20]
 8000936:	005b      	lsls	r3, r3, #1
 8000938:	fa01 f303 	lsl.w	r3, r1, r3
 800093c:	431a      	orrs	r2, r3
 800093e:	687b      	ldr	r3, [r7, #4]
 8000940:	601a      	str	r2, [r3, #0]
 8000942:	683b      	ldr	r3, [r7, #0]
 8000944:	791b      	ldrb	r3, [r3, #4]
 8000946:	2b01      	cmp	r3, #1
 8000948:	d003      	beq.n	8000952 <GPIO_Init+0x76>
 800094a:	683b      	ldr	r3, [r7, #0]
 800094c:	791b      	ldrb	r3, [r3, #4]
 800094e:	2b02      	cmp	r3, #2
 8000950:	d12e      	bne.n	80009b0 <GPIO_Init+0xd4>
 8000952:	687b      	ldr	r3, [r7, #4]
 8000954:	689a      	ldr	r2, [r3, #8]
 8000956:	697b      	ldr	r3, [r7, #20]
 8000958:	005b      	lsls	r3, r3, #1
 800095a:	2103      	movs	r1, #3
 800095c:	fa01 f303 	lsl.w	r3, r1, r3
 8000960:	43db      	mvns	r3, r3
 8000962:	401a      	ands	r2, r3
 8000964:	687b      	ldr	r3, [r7, #4]
 8000966:	609a      	str	r2, [r3, #8]
 8000968:	687b      	ldr	r3, [r7, #4]
 800096a:	689a      	ldr	r2, [r3, #8]
 800096c:	683b      	ldr	r3, [r7, #0]
 800096e:	795b      	ldrb	r3, [r3, #5]
 8000970:	4619      	mov	r1, r3
 8000972:	697b      	ldr	r3, [r7, #20]
 8000974:	005b      	lsls	r3, r3, #1
 8000976:	fa01 f303 	lsl.w	r3, r1, r3
 800097a:	431a      	orrs	r2, r3
 800097c:	687b      	ldr	r3, [r7, #4]
 800097e:	609a      	str	r2, [r3, #8]
 8000980:	687b      	ldr	r3, [r7, #4]
 8000982:	685a      	ldr	r2, [r3, #4]
 8000984:	697b      	ldr	r3, [r7, #20]
 8000986:	b29b      	uxth	r3, r3
 8000988:	4619      	mov	r1, r3
 800098a:	2301      	movs	r3, #1
 800098c:	408b      	lsls	r3, r1
 800098e:	43db      	mvns	r3, r3
 8000990:	401a      	ands	r2, r3
 8000992:	687b      	ldr	r3, [r7, #4]
 8000994:	605a      	str	r2, [r3, #4]
 8000996:	687b      	ldr	r3, [r7, #4]
 8000998:	685b      	ldr	r3, [r3, #4]
 800099a:	683a      	ldr	r2, [r7, #0]
 800099c:	7992      	ldrb	r2, [r2, #6]
 800099e:	4611      	mov	r1, r2
 80009a0:	697a      	ldr	r2, [r7, #20]
 80009a2:	b292      	uxth	r2, r2
 80009a4:	fa01 f202 	lsl.w	r2, r1, r2
 80009a8:	b292      	uxth	r2, r2
 80009aa:	431a      	orrs	r2, r3
 80009ac:	687b      	ldr	r3, [r7, #4]
 80009ae:	605a      	str	r2, [r3, #4]
 80009b0:	687b      	ldr	r3, [r7, #4]
 80009b2:	68da      	ldr	r2, [r3, #12]
 80009b4:	697b      	ldr	r3, [r7, #20]
 80009b6:	b29b      	uxth	r3, r3
 80009b8:	005b      	lsls	r3, r3, #1
 80009ba:	2103      	movs	r1, #3
 80009bc:	fa01 f303 	lsl.w	r3, r1, r3
 80009c0:	43db      	mvns	r3, r3
 80009c2:	401a      	ands	r2, r3
 80009c4:	687b      	ldr	r3, [r7, #4]
 80009c6:	60da      	str	r2, [r3, #12]
 80009c8:	687b      	ldr	r3, [r7, #4]
 80009ca:	68da      	ldr	r2, [r3, #12]
 80009cc:	683b      	ldr	r3, [r7, #0]
 80009ce:	79db      	ldrb	r3, [r3, #7]
 80009d0:	4619      	mov	r1, r3
 80009d2:	697b      	ldr	r3, [r7, #20]
 80009d4:	005b      	lsls	r3, r3, #1
 80009d6:	fa01 f303 	lsl.w	r3, r1, r3
 80009da:	431a      	orrs	r2, r3
 80009dc:	687b      	ldr	r3, [r7, #4]
 80009de:	60da      	str	r2, [r3, #12]
 80009e0:	697b      	ldr	r3, [r7, #20]
 80009e2:	3301      	adds	r3, #1
 80009e4:	617b      	str	r3, [r7, #20]
 80009e6:	697b      	ldr	r3, [r7, #20]
 80009e8:	2b0f      	cmp	r3, #15
 80009ea:	d985      	bls.n	80008f8 <GPIO_Init+0x1c>
 80009ec:	bf00      	nop
 80009ee:	371c      	adds	r7, #28
 80009f0:	46bd      	mov	sp, r7
 80009f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80009f6:	4770      	bx	lr

080009f8 <GPIO_ReadInputDataBit>:
 80009f8:	b480      	push	{r7}
 80009fa:	b085      	sub	sp, #20
 80009fc:	af00      	add	r7, sp, #0
 80009fe:	6078      	str	r0, [r7, #4]
 8000a00:	460b      	mov	r3, r1
 8000a02:	807b      	strh	r3, [r7, #2]
 8000a04:	2300      	movs	r3, #0
 8000a06:	73fb      	strb	r3, [r7, #15]
 8000a08:	687b      	ldr	r3, [r7, #4]
 8000a0a:	691a      	ldr	r2, [r3, #16]
 8000a0c:	887b      	ldrh	r3, [r7, #2]
 8000a0e:	4013      	ands	r3, r2
 8000a10:	2b00      	cmp	r3, #0
 8000a12:	d002      	beq.n	8000a1a <GPIO_ReadInputDataBit+0x22>
 8000a14:	2301      	movs	r3, #1
 8000a16:	73fb      	strb	r3, [r7, #15]
 8000a18:	e001      	b.n	8000a1e <GPIO_ReadInputDataBit+0x26>
 8000a1a:	2300      	movs	r3, #0
 8000a1c:	73fb      	strb	r3, [r7, #15]
 8000a1e:	7bfb      	ldrb	r3, [r7, #15]
 8000a20:	4618      	mov	r0, r3
 8000a22:	3714      	adds	r7, #20
 8000a24:	46bd      	mov	sp, r7
 8000a26:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000a2a:	4770      	bx	lr

08000a2c <GPIO_SetBits>:
 8000a2c:	b480      	push	{r7}
 8000a2e:	b083      	sub	sp, #12
 8000a30:	af00      	add	r7, sp, #0
 8000a32:	6078      	str	r0, [r7, #4]
 8000a34:	460b      	mov	r3, r1
 8000a36:	807b      	strh	r3, [r7, #2]
 8000a38:	687b      	ldr	r3, [r7, #4]
 8000a3a:	887a      	ldrh	r2, [r7, #2]
 8000a3c:	831a      	strh	r2, [r3, #24]
 8000a3e:	bf00      	nop
 8000a40:	370c      	adds	r7, #12
 8000a42:	46bd      	mov	sp, r7
 8000a44:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000a48:	4770      	bx	lr

08000a4a <GPIO_ResetBits>:
 8000a4a:	b480      	push	{r7}
 8000a4c:	b083      	sub	sp, #12
 8000a4e:	af00      	add	r7, sp, #0
 8000a50:	6078      	str	r0, [r7, #4]
 8000a52:	460b      	mov	r3, r1
 8000a54:	807b      	strh	r3, [r7, #2]
 8000a56:	687b      	ldr	r3, [r7, #4]
 8000a58:	887a      	ldrh	r2, [r7, #2]
 8000a5a:	835a      	strh	r2, [r3, #26]
 8000a5c:	bf00      	nop
 8000a5e:	370c      	adds	r7, #12
 8000a60:	46bd      	mov	sp, r7
 8000a62:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000a66:	4770      	bx	lr

08000a68 <GPIO_PinAFConfig>:
 8000a68:	b480      	push	{r7}
 8000a6a:	b085      	sub	sp, #20
 8000a6c:	af00      	add	r7, sp, #0
 8000a6e:	6078      	str	r0, [r7, #4]
 8000a70:	460b      	mov	r3, r1
 8000a72:	807b      	strh	r3, [r7, #2]
 8000a74:	4613      	mov	r3, r2
 8000a76:	707b      	strb	r3, [r7, #1]
 8000a78:	2300      	movs	r3, #0
 8000a7a:	60fb      	str	r3, [r7, #12]
 8000a7c:	2300      	movs	r3, #0
 8000a7e:	60bb      	str	r3, [r7, #8]
 8000a80:	787a      	ldrb	r2, [r7, #1]
 8000a82:	887b      	ldrh	r3, [r7, #2]
 8000a84:	f003 0307 	and.w	r3, r3, #7
 8000a88:	009b      	lsls	r3, r3, #2
 8000a8a:	fa02 f303 	lsl.w	r3, r2, r3
 8000a8e:	60fb      	str	r3, [r7, #12]
 8000a90:	887b      	ldrh	r3, [r7, #2]
 8000a92:	08db      	lsrs	r3, r3, #3
 8000a94:	b29b      	uxth	r3, r3
 8000a96:	461a      	mov	r2, r3
 8000a98:	687b      	ldr	r3, [r7, #4]
 8000a9a:	3208      	adds	r2, #8
 8000a9c:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8000aa0:	887b      	ldrh	r3, [r7, #2]
 8000aa2:	f003 0307 	and.w	r3, r3, #7
 8000aa6:	009b      	lsls	r3, r3, #2
 8000aa8:	210f      	movs	r1, #15
 8000aaa:	fa01 f303 	lsl.w	r3, r1, r3
 8000aae:	43db      	mvns	r3, r3
 8000ab0:	8879      	ldrh	r1, [r7, #2]
 8000ab2:	08c9      	lsrs	r1, r1, #3
 8000ab4:	b289      	uxth	r1, r1
 8000ab6:	4608      	mov	r0, r1
 8000ab8:	ea02 0103 	and.w	r1, r2, r3
 8000abc:	687b      	ldr	r3, [r7, #4]
 8000abe:	f100 0208 	add.w	r2, r0, #8
 8000ac2:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8000ac6:	887b      	ldrh	r3, [r7, #2]
 8000ac8:	08db      	lsrs	r3, r3, #3
 8000aca:	b29b      	uxth	r3, r3
 8000acc:	461a      	mov	r2, r3
 8000ace:	687b      	ldr	r3, [r7, #4]
 8000ad0:	3208      	adds	r2, #8
 8000ad2:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8000ad6:	68fa      	ldr	r2, [r7, #12]
 8000ad8:	4313      	orrs	r3, r2
 8000ada:	60bb      	str	r3, [r7, #8]
 8000adc:	887b      	ldrh	r3, [r7, #2]
 8000ade:	08db      	lsrs	r3, r3, #3
 8000ae0:	b29b      	uxth	r3, r3
 8000ae2:	461a      	mov	r2, r3
 8000ae4:	687b      	ldr	r3, [r7, #4]
 8000ae6:	3208      	adds	r2, #8
 8000ae8:	68b9      	ldr	r1, [r7, #8]
 8000aea:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8000aee:	bf00      	nop
 8000af0:	3714      	adds	r7, #20
 8000af2:	46bd      	mov	sp, r7
 8000af4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000af8:	4770      	bx	lr
	...

08000afc <I2C_Init>:
 8000afc:	b580      	push	{r7, lr}
 8000afe:	b08a      	sub	sp, #40	; 0x28
 8000b00:	af00      	add	r7, sp, #0
 8000b02:	6078      	str	r0, [r7, #4]
 8000b04:	6039      	str	r1, [r7, #0]
 8000b06:	2300      	movs	r3, #0
 8000b08:	84fb      	strh	r3, [r7, #38]	; 0x26
 8000b0a:	2300      	movs	r3, #0
 8000b0c:	847b      	strh	r3, [r7, #34]	; 0x22
 8000b0e:	2304      	movs	r3, #4
 8000b10:	84bb      	strh	r3, [r7, #36]	; 0x24
 8000b12:	4b57      	ldr	r3, [pc, #348]	; (8000c70 <I2C_Init+0x174>)
 8000b14:	61fb      	str	r3, [r7, #28]
 8000b16:	687b      	ldr	r3, [r7, #4]
 8000b18:	889b      	ldrh	r3, [r3, #4]
 8000b1a:	84fb      	strh	r3, [r7, #38]	; 0x26
 8000b1c:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 8000b1e:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8000b22:	84fb      	strh	r3, [r7, #38]	; 0x26
 8000b24:	f107 030c 	add.w	r3, r7, #12
 8000b28:	4618      	mov	r0, r3
 8000b2a:	f000 fa3d 	bl	8000fa8 <RCC_GetClocksFreq>
 8000b2e:	697b      	ldr	r3, [r7, #20]
 8000b30:	61fb      	str	r3, [r7, #28]
 8000b32:	69fb      	ldr	r3, [r7, #28]
 8000b34:	4a4f      	ldr	r2, [pc, #316]	; (8000c74 <I2C_Init+0x178>)
 8000b36:	fba2 2303 	umull	r2, r3, r2, r3
 8000b3a:	0c9b      	lsrs	r3, r3, #18
 8000b3c:	847b      	strh	r3, [r7, #34]	; 0x22
 8000b3e:	8cfa      	ldrh	r2, [r7, #38]	; 0x26
 8000b40:	8c7b      	ldrh	r3, [r7, #34]	; 0x22
 8000b42:	4313      	orrs	r3, r2
 8000b44:	84fb      	strh	r3, [r7, #38]	; 0x26
 8000b46:	687b      	ldr	r3, [r7, #4]
 8000b48:	8cfa      	ldrh	r2, [r7, #38]	; 0x26
 8000b4a:	809a      	strh	r2, [r3, #4]
 8000b4c:	687b      	ldr	r3, [r7, #4]
 8000b4e:	881b      	ldrh	r3, [r3, #0]
 8000b50:	b29b      	uxth	r3, r3
 8000b52:	f023 0301 	bic.w	r3, r3, #1
 8000b56:	b29a      	uxth	r2, r3
 8000b58:	687b      	ldr	r3, [r7, #4]
 8000b5a:	801a      	strh	r2, [r3, #0]
 8000b5c:	2300      	movs	r3, #0
 8000b5e:	84fb      	strh	r3, [r7, #38]	; 0x26
 8000b60:	683b      	ldr	r3, [r7, #0]
 8000b62:	681b      	ldr	r3, [r3, #0]
 8000b64:	4a44      	ldr	r2, [pc, #272]	; (8000c78 <I2C_Init+0x17c>)
 8000b66:	4293      	cmp	r3, r2
 8000b68:	d815      	bhi.n	8000b96 <I2C_Init+0x9a>
 8000b6a:	683b      	ldr	r3, [r7, #0]
 8000b6c:	681b      	ldr	r3, [r3, #0]
 8000b6e:	005b      	lsls	r3, r3, #1
 8000b70:	69fa      	ldr	r2, [r7, #28]
 8000b72:	fbb2 f3f3 	udiv	r3, r2, r3
 8000b76:	84bb      	strh	r3, [r7, #36]	; 0x24
 8000b78:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 8000b7a:	2b03      	cmp	r3, #3
 8000b7c:	d801      	bhi.n	8000b82 <I2C_Init+0x86>
 8000b7e:	2304      	movs	r3, #4
 8000b80:	84bb      	strh	r3, [r7, #36]	; 0x24
 8000b82:	8cfa      	ldrh	r2, [r7, #38]	; 0x26
 8000b84:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 8000b86:	4313      	orrs	r3, r2
 8000b88:	84fb      	strh	r3, [r7, #38]	; 0x26
 8000b8a:	8c7b      	ldrh	r3, [r7, #34]	; 0x22
 8000b8c:	3301      	adds	r3, #1
 8000b8e:	b29a      	uxth	r2, r3
 8000b90:	687b      	ldr	r3, [r7, #4]
 8000b92:	841a      	strh	r2, [r3, #32]
 8000b94:	e040      	b.n	8000c18 <I2C_Init+0x11c>
 8000b96:	683b      	ldr	r3, [r7, #0]
 8000b98:	88db      	ldrh	r3, [r3, #6]
 8000b9a:	f64b 72ff 	movw	r2, #49151	; 0xbfff
 8000b9e:	4293      	cmp	r3, r2
 8000ba0:	d109      	bne.n	8000bb6 <I2C_Init+0xba>
 8000ba2:	683b      	ldr	r3, [r7, #0]
 8000ba4:	681a      	ldr	r2, [r3, #0]
 8000ba6:	4613      	mov	r3, r2
 8000ba8:	005b      	lsls	r3, r3, #1
 8000baa:	4413      	add	r3, r2
 8000bac:	69fa      	ldr	r2, [r7, #28]
 8000bae:	fbb2 f3f3 	udiv	r3, r2, r3
 8000bb2:	84bb      	strh	r3, [r7, #36]	; 0x24
 8000bb4:	e00e      	b.n	8000bd4 <I2C_Init+0xd8>
 8000bb6:	683b      	ldr	r3, [r7, #0]
 8000bb8:	681a      	ldr	r2, [r3, #0]
 8000bba:	4613      	mov	r3, r2
 8000bbc:	009b      	lsls	r3, r3, #2
 8000bbe:	4413      	add	r3, r2
 8000bc0:	009a      	lsls	r2, r3, #2
 8000bc2:	4413      	add	r3, r2
 8000bc4:	69fa      	ldr	r2, [r7, #28]
 8000bc6:	fbb2 f3f3 	udiv	r3, r2, r3
 8000bca:	84bb      	strh	r3, [r7, #36]	; 0x24
 8000bcc:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 8000bce:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000bd2:	84bb      	strh	r3, [r7, #36]	; 0x24
 8000bd4:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 8000bd6:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8000bda:	2b00      	cmp	r3, #0
 8000bdc:	d103      	bne.n	8000be6 <I2C_Init+0xea>
 8000bde:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 8000be0:	f043 0301 	orr.w	r3, r3, #1
 8000be4:	84bb      	strh	r3, [r7, #36]	; 0x24
 8000be6:	8cba      	ldrh	r2, [r7, #36]	; 0x24
 8000be8:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 8000bea:	4313      	orrs	r3, r2
 8000bec:	b29b      	uxth	r3, r3
 8000bee:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 8000bf2:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 8000bf6:	84fb      	strh	r3, [r7, #38]	; 0x26
 8000bf8:	8c7b      	ldrh	r3, [r7, #34]	; 0x22
 8000bfa:	f44f 7296 	mov.w	r2, #300	; 0x12c
 8000bfe:	fb02 f303 	mul.w	r3, r2, r3
 8000c02:	4a1e      	ldr	r2, [pc, #120]	; (8000c7c <I2C_Init+0x180>)
 8000c04:	fb82 1203 	smull	r1, r2, r2, r3
 8000c08:	1192      	asrs	r2, r2, #6
 8000c0a:	17db      	asrs	r3, r3, #31
 8000c0c:	1ad3      	subs	r3, r2, r3
 8000c0e:	b29b      	uxth	r3, r3
 8000c10:	3301      	adds	r3, #1
 8000c12:	b29a      	uxth	r2, r3
 8000c14:	687b      	ldr	r3, [r7, #4]
 8000c16:	841a      	strh	r2, [r3, #32]
 8000c18:	687b      	ldr	r3, [r7, #4]
 8000c1a:	8cfa      	ldrh	r2, [r7, #38]	; 0x26
 8000c1c:	839a      	strh	r2, [r3, #28]
 8000c1e:	687b      	ldr	r3, [r7, #4]
 8000c20:	881b      	ldrh	r3, [r3, #0]
 8000c22:	b29b      	uxth	r3, r3
 8000c24:	f043 0301 	orr.w	r3, r3, #1
 8000c28:	b29a      	uxth	r2, r3
 8000c2a:	687b      	ldr	r3, [r7, #4]
 8000c2c:	801a      	strh	r2, [r3, #0]
 8000c2e:	687b      	ldr	r3, [r7, #4]
 8000c30:	881b      	ldrh	r3, [r3, #0]
 8000c32:	84fb      	strh	r3, [r7, #38]	; 0x26
 8000c34:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 8000c36:	f423 6381 	bic.w	r3, r3, #1032	; 0x408
 8000c3a:	f023 0302 	bic.w	r3, r3, #2
 8000c3e:	84fb      	strh	r3, [r7, #38]	; 0x26
 8000c40:	683b      	ldr	r3, [r7, #0]
 8000c42:	889a      	ldrh	r2, [r3, #4]
 8000c44:	683b      	ldr	r3, [r7, #0]
 8000c46:	895b      	ldrh	r3, [r3, #10]
 8000c48:	4313      	orrs	r3, r2
 8000c4a:	b29a      	uxth	r2, r3
 8000c4c:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 8000c4e:	4313      	orrs	r3, r2
 8000c50:	84fb      	strh	r3, [r7, #38]	; 0x26
 8000c52:	687b      	ldr	r3, [r7, #4]
 8000c54:	8cfa      	ldrh	r2, [r7, #38]	; 0x26
 8000c56:	801a      	strh	r2, [r3, #0]
 8000c58:	683b      	ldr	r3, [r7, #0]
 8000c5a:	899a      	ldrh	r2, [r3, #12]
 8000c5c:	683b      	ldr	r3, [r7, #0]
 8000c5e:	891b      	ldrh	r3, [r3, #8]
 8000c60:	4313      	orrs	r3, r2
 8000c62:	b29a      	uxth	r2, r3
 8000c64:	687b      	ldr	r3, [r7, #4]
 8000c66:	811a      	strh	r2, [r3, #8]
 8000c68:	bf00      	nop
 8000c6a:	3728      	adds	r7, #40	; 0x28
 8000c6c:	46bd      	mov	sp, r7
 8000c6e:	bd80      	pop	{r7, pc}
 8000c70:	007a1200 	.word	0x007a1200
 8000c74:	431bde83 	.word	0x431bde83
 8000c78:	000186a0 	.word	0x000186a0
 8000c7c:	10624dd3 	.word	0x10624dd3

08000c80 <I2C_Cmd>:
 8000c80:	b480      	push	{r7}
 8000c82:	b083      	sub	sp, #12
 8000c84:	af00      	add	r7, sp, #0
 8000c86:	6078      	str	r0, [r7, #4]
 8000c88:	460b      	mov	r3, r1
 8000c8a:	70fb      	strb	r3, [r7, #3]
 8000c8c:	78fb      	ldrb	r3, [r7, #3]
 8000c8e:	2b00      	cmp	r3, #0
 8000c90:	d008      	beq.n	8000ca4 <I2C_Cmd+0x24>
 8000c92:	687b      	ldr	r3, [r7, #4]
 8000c94:	881b      	ldrh	r3, [r3, #0]
 8000c96:	b29b      	uxth	r3, r3
 8000c98:	f043 0301 	orr.w	r3, r3, #1
 8000c9c:	b29a      	uxth	r2, r3
 8000c9e:	687b      	ldr	r3, [r7, #4]
 8000ca0:	801a      	strh	r2, [r3, #0]
 8000ca2:	e007      	b.n	8000cb4 <I2C_Cmd+0x34>
 8000ca4:	687b      	ldr	r3, [r7, #4]
 8000ca6:	881b      	ldrh	r3, [r3, #0]
 8000ca8:	b29b      	uxth	r3, r3
 8000caa:	f023 0301 	bic.w	r3, r3, #1
 8000cae:	b29a      	uxth	r2, r3
 8000cb0:	687b      	ldr	r3, [r7, #4]
 8000cb2:	801a      	strh	r2, [r3, #0]
 8000cb4:	bf00      	nop
 8000cb6:	370c      	adds	r7, #12
 8000cb8:	46bd      	mov	sp, r7
 8000cba:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000cbe:	4770      	bx	lr

08000cc0 <I2C_GenerateSTART>:
 8000cc0:	b480      	push	{r7}
 8000cc2:	b083      	sub	sp, #12
 8000cc4:	af00      	add	r7, sp, #0
 8000cc6:	6078      	str	r0, [r7, #4]
 8000cc8:	460b      	mov	r3, r1
 8000cca:	70fb      	strb	r3, [r7, #3]
 8000ccc:	78fb      	ldrb	r3, [r7, #3]
 8000cce:	2b00      	cmp	r3, #0
 8000cd0:	d008      	beq.n	8000ce4 <I2C_GenerateSTART+0x24>
 8000cd2:	687b      	ldr	r3, [r7, #4]
 8000cd4:	881b      	ldrh	r3, [r3, #0]
 8000cd6:	b29b      	uxth	r3, r3
 8000cd8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8000cdc:	b29a      	uxth	r2, r3
 8000cde:	687b      	ldr	r3, [r7, #4]
 8000ce0:	801a      	strh	r2, [r3, #0]
 8000ce2:	e007      	b.n	8000cf4 <I2C_GenerateSTART+0x34>
 8000ce4:	687b      	ldr	r3, [r7, #4]
 8000ce6:	881b      	ldrh	r3, [r3, #0]
 8000ce8:	b29b      	uxth	r3, r3
 8000cea:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8000cee:	b29a      	uxth	r2, r3
 8000cf0:	687b      	ldr	r3, [r7, #4]
 8000cf2:	801a      	strh	r2, [r3, #0]
 8000cf4:	bf00      	nop
 8000cf6:	370c      	adds	r7, #12
 8000cf8:	46bd      	mov	sp, r7
 8000cfa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000cfe:	4770      	bx	lr

08000d00 <I2C_GenerateSTOP>:
 8000d00:	b480      	push	{r7}
 8000d02:	b083      	sub	sp, #12
 8000d04:	af00      	add	r7, sp, #0
 8000d06:	6078      	str	r0, [r7, #4]
 8000d08:	460b      	mov	r3, r1
 8000d0a:	70fb      	strb	r3, [r7, #3]
 8000d0c:	78fb      	ldrb	r3, [r7, #3]
 8000d0e:	2b00      	cmp	r3, #0
 8000d10:	d008      	beq.n	8000d24 <I2C_GenerateSTOP+0x24>
 8000d12:	687b      	ldr	r3, [r7, #4]
 8000d14:	881b      	ldrh	r3, [r3, #0]
 8000d16:	b29b      	uxth	r3, r3
 8000d18:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8000d1c:	b29a      	uxth	r2, r3
 8000d1e:	687b      	ldr	r3, [r7, #4]
 8000d20:	801a      	strh	r2, [r3, #0]
 8000d22:	e007      	b.n	8000d34 <I2C_GenerateSTOP+0x34>
 8000d24:	687b      	ldr	r3, [r7, #4]
 8000d26:	881b      	ldrh	r3, [r3, #0]
 8000d28:	b29b      	uxth	r3, r3
 8000d2a:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8000d2e:	b29a      	uxth	r2, r3
 8000d30:	687b      	ldr	r3, [r7, #4]
 8000d32:	801a      	strh	r2, [r3, #0]
 8000d34:	bf00      	nop
 8000d36:	370c      	adds	r7, #12
 8000d38:	46bd      	mov	sp, r7
 8000d3a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d3e:	4770      	bx	lr

08000d40 <I2C_Send7bitAddress>:
 8000d40:	b480      	push	{r7}
 8000d42:	b083      	sub	sp, #12
 8000d44:	af00      	add	r7, sp, #0
 8000d46:	6078      	str	r0, [r7, #4]
 8000d48:	460b      	mov	r3, r1
 8000d4a:	70fb      	strb	r3, [r7, #3]
 8000d4c:	4613      	mov	r3, r2
 8000d4e:	70bb      	strb	r3, [r7, #2]
 8000d50:	78bb      	ldrb	r3, [r7, #2]
 8000d52:	2b00      	cmp	r3, #0
 8000d54:	d004      	beq.n	8000d60 <I2C_Send7bitAddress+0x20>
 8000d56:	78fb      	ldrb	r3, [r7, #3]
 8000d58:	f043 0301 	orr.w	r3, r3, #1
 8000d5c:	70fb      	strb	r3, [r7, #3]
 8000d5e:	e003      	b.n	8000d68 <I2C_Send7bitAddress+0x28>
 8000d60:	78fb      	ldrb	r3, [r7, #3]
 8000d62:	f023 0301 	bic.w	r3, r3, #1
 8000d66:	70fb      	strb	r3, [r7, #3]
 8000d68:	78fb      	ldrb	r3, [r7, #3]
 8000d6a:	b29a      	uxth	r2, r3
 8000d6c:	687b      	ldr	r3, [r7, #4]
 8000d6e:	821a      	strh	r2, [r3, #16]
 8000d70:	bf00      	nop
 8000d72:	370c      	adds	r7, #12
 8000d74:	46bd      	mov	sp, r7
 8000d76:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d7a:	4770      	bx	lr

08000d7c <I2C_AcknowledgeConfig>:
 8000d7c:	b480      	push	{r7}
 8000d7e:	b083      	sub	sp, #12
 8000d80:	af00      	add	r7, sp, #0
 8000d82:	6078      	str	r0, [r7, #4]
 8000d84:	460b      	mov	r3, r1
 8000d86:	70fb      	strb	r3, [r7, #3]
 8000d88:	78fb      	ldrb	r3, [r7, #3]
 8000d8a:	2b00      	cmp	r3, #0
 8000d8c:	d008      	beq.n	8000da0 <I2C_AcknowledgeConfig+0x24>
 8000d8e:	687b      	ldr	r3, [r7, #4]
 8000d90:	881b      	ldrh	r3, [r3, #0]
 8000d92:	b29b      	uxth	r3, r3
 8000d94:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8000d98:	b29a      	uxth	r2, r3
 8000d9a:	687b      	ldr	r3, [r7, #4]
 8000d9c:	801a      	strh	r2, [r3, #0]
 8000d9e:	e007      	b.n	8000db0 <I2C_AcknowledgeConfig+0x34>
 8000da0:	687b      	ldr	r3, [r7, #4]
 8000da2:	881b      	ldrh	r3, [r3, #0]
 8000da4:	b29b      	uxth	r3, r3
 8000da6:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8000daa:	b29a      	uxth	r2, r3
 8000dac:	687b      	ldr	r3, [r7, #4]
 8000dae:	801a      	strh	r2, [r3, #0]
 8000db0:	bf00      	nop
 8000db2:	370c      	adds	r7, #12
 8000db4:	46bd      	mov	sp, r7
 8000db6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000dba:	4770      	bx	lr

08000dbc <I2C_SendData>:
 8000dbc:	b480      	push	{r7}
 8000dbe:	b083      	sub	sp, #12
 8000dc0:	af00      	add	r7, sp, #0
 8000dc2:	6078      	str	r0, [r7, #4]
 8000dc4:	460b      	mov	r3, r1
 8000dc6:	70fb      	strb	r3, [r7, #3]
 8000dc8:	78fb      	ldrb	r3, [r7, #3]
 8000dca:	b29a      	uxth	r2, r3
 8000dcc:	687b      	ldr	r3, [r7, #4]
 8000dce:	821a      	strh	r2, [r3, #16]
 8000dd0:	bf00      	nop
 8000dd2:	370c      	adds	r7, #12
 8000dd4:	46bd      	mov	sp, r7
 8000dd6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000dda:	4770      	bx	lr

08000ddc <I2C_ReceiveData>:
 8000ddc:	b480      	push	{r7}
 8000dde:	b083      	sub	sp, #12
 8000de0:	af00      	add	r7, sp, #0
 8000de2:	6078      	str	r0, [r7, #4]
 8000de4:	687b      	ldr	r3, [r7, #4]
 8000de6:	8a1b      	ldrh	r3, [r3, #16]
 8000de8:	b29b      	uxth	r3, r3
 8000dea:	b2db      	uxtb	r3, r3
 8000dec:	4618      	mov	r0, r3
 8000dee:	370c      	adds	r7, #12
 8000df0:	46bd      	mov	sp, r7
 8000df2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000df6:	4770      	bx	lr

08000df8 <I2C_ITConfig>:
 8000df8:	b480      	push	{r7}
 8000dfa:	b083      	sub	sp, #12
 8000dfc:	af00      	add	r7, sp, #0
 8000dfe:	6078      	str	r0, [r7, #4]
 8000e00:	460b      	mov	r3, r1
 8000e02:	807b      	strh	r3, [r7, #2]
 8000e04:	4613      	mov	r3, r2
 8000e06:	707b      	strb	r3, [r7, #1]
 8000e08:	787b      	ldrb	r3, [r7, #1]
 8000e0a:	2b00      	cmp	r3, #0
 8000e0c:	d008      	beq.n	8000e20 <I2C_ITConfig+0x28>
 8000e0e:	687b      	ldr	r3, [r7, #4]
 8000e10:	889b      	ldrh	r3, [r3, #4]
 8000e12:	b29a      	uxth	r2, r3
 8000e14:	887b      	ldrh	r3, [r7, #2]
 8000e16:	4313      	orrs	r3, r2
 8000e18:	b29a      	uxth	r2, r3
 8000e1a:	687b      	ldr	r3, [r7, #4]
 8000e1c:	809a      	strh	r2, [r3, #4]
 8000e1e:	e009      	b.n	8000e34 <I2C_ITConfig+0x3c>
 8000e20:	687b      	ldr	r3, [r7, #4]
 8000e22:	889b      	ldrh	r3, [r3, #4]
 8000e24:	b29a      	uxth	r2, r3
 8000e26:	887b      	ldrh	r3, [r7, #2]
 8000e28:	43db      	mvns	r3, r3
 8000e2a:	b29b      	uxth	r3, r3
 8000e2c:	4013      	ands	r3, r2
 8000e2e:	b29a      	uxth	r2, r3
 8000e30:	687b      	ldr	r3, [r7, #4]
 8000e32:	809a      	strh	r2, [r3, #4]
 8000e34:	bf00      	nop
 8000e36:	370c      	adds	r7, #12
 8000e38:	46bd      	mov	sp, r7
 8000e3a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e3e:	4770      	bx	lr

08000e40 <I2C_CheckEvent>:
 8000e40:	b480      	push	{r7}
 8000e42:	b087      	sub	sp, #28
 8000e44:	af00      	add	r7, sp, #0
 8000e46:	6078      	str	r0, [r7, #4]
 8000e48:	6039      	str	r1, [r7, #0]
 8000e4a:	2300      	movs	r3, #0
 8000e4c:	613b      	str	r3, [r7, #16]
 8000e4e:	2300      	movs	r3, #0
 8000e50:	60fb      	str	r3, [r7, #12]
 8000e52:	2300      	movs	r3, #0
 8000e54:	60bb      	str	r3, [r7, #8]
 8000e56:	2300      	movs	r3, #0
 8000e58:	75fb      	strb	r3, [r7, #23]
 8000e5a:	687b      	ldr	r3, [r7, #4]
 8000e5c:	8a9b      	ldrh	r3, [r3, #20]
 8000e5e:	b29b      	uxth	r3, r3
 8000e60:	60fb      	str	r3, [r7, #12]
 8000e62:	687b      	ldr	r3, [r7, #4]
 8000e64:	8b1b      	ldrh	r3, [r3, #24]
 8000e66:	b29b      	uxth	r3, r3
 8000e68:	60bb      	str	r3, [r7, #8]
 8000e6a:	68bb      	ldr	r3, [r7, #8]
 8000e6c:	041b      	lsls	r3, r3, #16
 8000e6e:	60bb      	str	r3, [r7, #8]
 8000e70:	68fa      	ldr	r2, [r7, #12]
 8000e72:	68bb      	ldr	r3, [r7, #8]
 8000e74:	4313      	orrs	r3, r2
 8000e76:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
 8000e7a:	613b      	str	r3, [r7, #16]
 8000e7c:	693a      	ldr	r2, [r7, #16]
 8000e7e:	683b      	ldr	r3, [r7, #0]
 8000e80:	4013      	ands	r3, r2
 8000e82:	683a      	ldr	r2, [r7, #0]
 8000e84:	429a      	cmp	r2, r3
 8000e86:	d102      	bne.n	8000e8e <I2C_CheckEvent+0x4e>
 8000e88:	2301      	movs	r3, #1
 8000e8a:	75fb      	strb	r3, [r7, #23]
 8000e8c:	e001      	b.n	8000e92 <I2C_CheckEvent+0x52>
 8000e8e:	2300      	movs	r3, #0
 8000e90:	75fb      	strb	r3, [r7, #23]
 8000e92:	7dfb      	ldrb	r3, [r7, #23]
 8000e94:	4618      	mov	r0, r3
 8000e96:	371c      	adds	r7, #28
 8000e98:	46bd      	mov	sp, r7
 8000e9a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e9e:	4770      	bx	lr

08000ea0 <I2C_GetLastEvent>:
 8000ea0:	b480      	push	{r7}
 8000ea2:	b087      	sub	sp, #28
 8000ea4:	af00      	add	r7, sp, #0
 8000ea6:	6078      	str	r0, [r7, #4]
 8000ea8:	2300      	movs	r3, #0
 8000eaa:	617b      	str	r3, [r7, #20]
 8000eac:	2300      	movs	r3, #0
 8000eae:	613b      	str	r3, [r7, #16]
 8000eb0:	2300      	movs	r3, #0
 8000eb2:	60fb      	str	r3, [r7, #12]
 8000eb4:	687b      	ldr	r3, [r7, #4]
 8000eb6:	8a9b      	ldrh	r3, [r3, #20]
 8000eb8:	b29b      	uxth	r3, r3
 8000eba:	613b      	str	r3, [r7, #16]
 8000ebc:	687b      	ldr	r3, [r7, #4]
 8000ebe:	8b1b      	ldrh	r3, [r3, #24]
 8000ec0:	b29b      	uxth	r3, r3
 8000ec2:	60fb      	str	r3, [r7, #12]
 8000ec4:	68fb      	ldr	r3, [r7, #12]
 8000ec6:	041b      	lsls	r3, r3, #16
 8000ec8:	60fb      	str	r3, [r7, #12]
 8000eca:	693a      	ldr	r2, [r7, #16]
 8000ecc:	68fb      	ldr	r3, [r7, #12]
 8000ece:	4313      	orrs	r3, r2
 8000ed0:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
 8000ed4:	617b      	str	r3, [r7, #20]
 8000ed6:	697b      	ldr	r3, [r7, #20]
 8000ed8:	4618      	mov	r0, r3
 8000eda:	371c      	adds	r7, #28
 8000edc:	46bd      	mov	sp, r7
 8000ede:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000ee2:	4770      	bx	lr

08000ee4 <I2C_GetFlagStatus>:
 8000ee4:	b480      	push	{r7}
 8000ee6:	b087      	sub	sp, #28
 8000ee8:	af00      	add	r7, sp, #0
 8000eea:	6078      	str	r0, [r7, #4]
 8000eec:	6039      	str	r1, [r7, #0]
 8000eee:	2300      	movs	r3, #0
 8000ef0:	75fb      	strb	r3, [r7, #23]
 8000ef2:	2300      	movs	r3, #0
 8000ef4:	613b      	str	r3, [r7, #16]
 8000ef6:	2300      	movs	r3, #0
 8000ef8:	60fb      	str	r3, [r7, #12]
 8000efa:	687b      	ldr	r3, [r7, #4]
 8000efc:	60fb      	str	r3, [r7, #12]
 8000efe:	683b      	ldr	r3, [r7, #0]
 8000f00:	0f1b      	lsrs	r3, r3, #28
 8000f02:	613b      	str	r3, [r7, #16]
 8000f04:	683b      	ldr	r3, [r7, #0]
 8000f06:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
 8000f0a:	603b      	str	r3, [r7, #0]
 8000f0c:	693b      	ldr	r3, [r7, #16]
 8000f0e:	2b00      	cmp	r3, #0
 8000f10:	d003      	beq.n	8000f1a <I2C_GetFlagStatus+0x36>
 8000f12:	68fb      	ldr	r3, [r7, #12]
 8000f14:	3314      	adds	r3, #20
 8000f16:	60fb      	str	r3, [r7, #12]
 8000f18:	e005      	b.n	8000f26 <I2C_GetFlagStatus+0x42>
 8000f1a:	683b      	ldr	r3, [r7, #0]
 8000f1c:	0c1b      	lsrs	r3, r3, #16
 8000f1e:	603b      	str	r3, [r7, #0]
 8000f20:	68fb      	ldr	r3, [r7, #12]
 8000f22:	3318      	adds	r3, #24
 8000f24:	60fb      	str	r3, [r7, #12]
 8000f26:	68fb      	ldr	r3, [r7, #12]
 8000f28:	681a      	ldr	r2, [r3, #0]
 8000f2a:	683b      	ldr	r3, [r7, #0]
 8000f2c:	4013      	ands	r3, r2
 8000f2e:	2b00      	cmp	r3, #0
 8000f30:	d002      	beq.n	8000f38 <I2C_GetFlagStatus+0x54>
 8000f32:	2301      	movs	r3, #1
 8000f34:	75fb      	strb	r3, [r7, #23]
 8000f36:	e001      	b.n	8000f3c <I2C_GetFlagStatus+0x58>
 8000f38:	2300      	movs	r3, #0
 8000f3a:	75fb      	strb	r3, [r7, #23]
 8000f3c:	7dfb      	ldrb	r3, [r7, #23]
 8000f3e:	4618      	mov	r0, r3
 8000f40:	371c      	adds	r7, #28
 8000f42:	46bd      	mov	sp, r7
 8000f44:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f48:	4770      	bx	lr

08000f4a <I2C_ClearFlag>:
 8000f4a:	b480      	push	{r7}
 8000f4c:	b085      	sub	sp, #20
 8000f4e:	af00      	add	r7, sp, #0
 8000f50:	6078      	str	r0, [r7, #4]
 8000f52:	6039      	str	r1, [r7, #0]
 8000f54:	2300      	movs	r3, #0
 8000f56:	60fb      	str	r3, [r7, #12]
 8000f58:	683b      	ldr	r3, [r7, #0]
 8000f5a:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
 8000f5e:	60fb      	str	r3, [r7, #12]
 8000f60:	68fb      	ldr	r3, [r7, #12]
 8000f62:	b29b      	uxth	r3, r3
 8000f64:	43db      	mvns	r3, r3
 8000f66:	b29a      	uxth	r2, r3
 8000f68:	687b      	ldr	r3, [r7, #4]
 8000f6a:	829a      	strh	r2, [r3, #20]
 8000f6c:	bf00      	nop
 8000f6e:	3714      	adds	r7, #20
 8000f70:	46bd      	mov	sp, r7
 8000f72:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f76:	4770      	bx	lr

08000f78 <I2C_ClearITPendingBit>:
 8000f78:	b480      	push	{r7}
 8000f7a:	b085      	sub	sp, #20
 8000f7c:	af00      	add	r7, sp, #0
 8000f7e:	6078      	str	r0, [r7, #4]
 8000f80:	6039      	str	r1, [r7, #0]
 8000f82:	2300      	movs	r3, #0
 8000f84:	60fb      	str	r3, [r7, #12]
 8000f86:	683b      	ldr	r3, [r7, #0]
 8000f88:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
 8000f8c:	60fb      	str	r3, [r7, #12]
 8000f8e:	68fb      	ldr	r3, [r7, #12]
 8000f90:	b29b      	uxth	r3, r3
 8000f92:	43db      	mvns	r3, r3
 8000f94:	b29a      	uxth	r2, r3
 8000f96:	687b      	ldr	r3, [r7, #4]
 8000f98:	829a      	strh	r2, [r3, #20]
 8000f9a:	bf00      	nop
 8000f9c:	3714      	adds	r7, #20
 8000f9e:	46bd      	mov	sp, r7
 8000fa0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000fa4:	4770      	bx	lr
	...

08000fa8 <RCC_GetClocksFreq>:
 8000fa8:	b480      	push	{r7}
 8000faa:	b089      	sub	sp, #36	; 0x24
 8000fac:	af00      	add	r7, sp, #0
 8000fae:	6078      	str	r0, [r7, #4]
 8000fb0:	2300      	movs	r3, #0
 8000fb2:	61bb      	str	r3, [r7, #24]
 8000fb4:	2300      	movs	r3, #0
 8000fb6:	617b      	str	r3, [r7, #20]
 8000fb8:	2300      	movs	r3, #0
 8000fba:	61fb      	str	r3, [r7, #28]
 8000fbc:	2302      	movs	r3, #2
 8000fbe:	613b      	str	r3, [r7, #16]
 8000fc0:	2300      	movs	r3, #0
 8000fc2:	60fb      	str	r3, [r7, #12]
 8000fc4:	2302      	movs	r3, #2
 8000fc6:	60bb      	str	r3, [r7, #8]
 8000fc8:	4b47      	ldr	r3, [pc, #284]	; (80010e8 <RCC_GetClocksFreq+0x140>)
 8000fca:	689b      	ldr	r3, [r3, #8]
 8000fcc:	f003 030c 	and.w	r3, r3, #12
 8000fd0:	61bb      	str	r3, [r7, #24]
 8000fd2:	69bb      	ldr	r3, [r7, #24]
 8000fd4:	2b04      	cmp	r3, #4
 8000fd6:	d007      	beq.n	8000fe8 <RCC_GetClocksFreq+0x40>
 8000fd8:	2b08      	cmp	r3, #8
 8000fda:	d009      	beq.n	8000ff0 <RCC_GetClocksFreq+0x48>
 8000fdc:	2b00      	cmp	r3, #0
 8000fde:	d13d      	bne.n	800105c <RCC_GetClocksFreq+0xb4>
 8000fe0:	687b      	ldr	r3, [r7, #4]
 8000fe2:	4a42      	ldr	r2, [pc, #264]	; (80010ec <RCC_GetClocksFreq+0x144>)
 8000fe4:	601a      	str	r2, [r3, #0]
 8000fe6:	e03d      	b.n	8001064 <RCC_GetClocksFreq+0xbc>
 8000fe8:	687b      	ldr	r3, [r7, #4]
 8000fea:	4a41      	ldr	r2, [pc, #260]	; (80010f0 <RCC_GetClocksFreq+0x148>)
 8000fec:	601a      	str	r2, [r3, #0]
 8000fee:	e039      	b.n	8001064 <RCC_GetClocksFreq+0xbc>
 8000ff0:	4b3d      	ldr	r3, [pc, #244]	; (80010e8 <RCC_GetClocksFreq+0x140>)
 8000ff2:	685b      	ldr	r3, [r3, #4]
 8000ff4:	0d9b      	lsrs	r3, r3, #22
 8000ff6:	f003 0301 	and.w	r3, r3, #1
 8000ffa:	60fb      	str	r3, [r7, #12]
 8000ffc:	4b3a      	ldr	r3, [pc, #232]	; (80010e8 <RCC_GetClocksFreq+0x140>)
 8000ffe:	685b      	ldr	r3, [r3, #4]
 8001000:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8001004:	60bb      	str	r3, [r7, #8]
 8001006:	68fb      	ldr	r3, [r7, #12]
 8001008:	2b00      	cmp	r3, #0
 800100a:	d00c      	beq.n	8001026 <RCC_GetClocksFreq+0x7e>
 800100c:	4a38      	ldr	r2, [pc, #224]	; (80010f0 <RCC_GetClocksFreq+0x148>)
 800100e:	68bb      	ldr	r3, [r7, #8]
 8001010:	fbb2 f3f3 	udiv	r3, r2, r3
 8001014:	4a34      	ldr	r2, [pc, #208]	; (80010e8 <RCC_GetClocksFreq+0x140>)
 8001016:	6852      	ldr	r2, [r2, #4]
 8001018:	0992      	lsrs	r2, r2, #6
 800101a:	f3c2 0208 	ubfx	r2, r2, #0, #9
 800101e:	fb02 f303 	mul.w	r3, r2, r3
 8001022:	61fb      	str	r3, [r7, #28]
 8001024:	e00b      	b.n	800103e <RCC_GetClocksFreq+0x96>
 8001026:	4a31      	ldr	r2, [pc, #196]	; (80010ec <RCC_GetClocksFreq+0x144>)
 8001028:	68bb      	ldr	r3, [r7, #8]
 800102a:	fbb2 f3f3 	udiv	r3, r2, r3
 800102e:	4a2e      	ldr	r2, [pc, #184]	; (80010e8 <RCC_GetClocksFreq+0x140>)
 8001030:	6852      	ldr	r2, [r2, #4]
 8001032:	0992      	lsrs	r2, r2, #6
 8001034:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8001038:	fb02 f303 	mul.w	r3, r2, r3
 800103c:	61fb      	str	r3, [r7, #28]
 800103e:	4b2a      	ldr	r3, [pc, #168]	; (80010e8 <RCC_GetClocksFreq+0x140>)
 8001040:	685b      	ldr	r3, [r3, #4]
 8001042:	0c1b      	lsrs	r3, r3, #16
 8001044:	f003 0303 	and.w	r3, r3, #3
 8001048:	3301      	adds	r3, #1
 800104a:	005b      	lsls	r3, r3, #1
 800104c:	613b      	str	r3, [r7, #16]
 800104e:	69fa      	ldr	r2, [r7, #28]
 8001050:	693b      	ldr	r3, [r7, #16]
 8001052:	fbb2 f2f3 	udiv	r2, r2, r3
 8001056:	687b      	ldr	r3, [r7, #4]
 8001058:	601a      	str	r2, [r3, #0]
 800105a:	e003      	b.n	8001064 <RCC_GetClocksFreq+0xbc>
 800105c:	687b      	ldr	r3, [r7, #4]
 800105e:	4a23      	ldr	r2, [pc, #140]	; (80010ec <RCC_GetClocksFreq+0x144>)
 8001060:	601a      	str	r2, [r3, #0]
 8001062:	bf00      	nop
 8001064:	4b20      	ldr	r3, [pc, #128]	; (80010e8 <RCC_GetClocksFreq+0x140>)
 8001066:	689b      	ldr	r3, [r3, #8]
 8001068:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 800106c:	61bb      	str	r3, [r7, #24]
 800106e:	69bb      	ldr	r3, [r7, #24]
 8001070:	091b      	lsrs	r3, r3, #4
 8001072:	61bb      	str	r3, [r7, #24]
 8001074:	4a1f      	ldr	r2, [pc, #124]	; (80010f4 <RCC_GetClocksFreq+0x14c>)
 8001076:	69bb      	ldr	r3, [r7, #24]
 8001078:	4413      	add	r3, r2
 800107a:	781b      	ldrb	r3, [r3, #0]
 800107c:	b2db      	uxtb	r3, r3
 800107e:	617b      	str	r3, [r7, #20]
 8001080:	687b      	ldr	r3, [r7, #4]
 8001082:	681a      	ldr	r2, [r3, #0]
 8001084:	697b      	ldr	r3, [r7, #20]
 8001086:	40da      	lsrs	r2, r3
 8001088:	687b      	ldr	r3, [r7, #4]
 800108a:	605a      	str	r2, [r3, #4]
 800108c:	4b16      	ldr	r3, [pc, #88]	; (80010e8 <RCC_GetClocksFreq+0x140>)
 800108e:	689b      	ldr	r3, [r3, #8]
 8001090:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 8001094:	61bb      	str	r3, [r7, #24]
 8001096:	69bb      	ldr	r3, [r7, #24]
 8001098:	0a9b      	lsrs	r3, r3, #10
 800109a:	61bb      	str	r3, [r7, #24]
 800109c:	4a15      	ldr	r2, [pc, #84]	; (80010f4 <RCC_GetClocksFreq+0x14c>)
 800109e:	69bb      	ldr	r3, [r7, #24]
 80010a0:	4413      	add	r3, r2
 80010a2:	781b      	ldrb	r3, [r3, #0]
 80010a4:	b2db      	uxtb	r3, r3
 80010a6:	617b      	str	r3, [r7, #20]
 80010a8:	687b      	ldr	r3, [r7, #4]
 80010aa:	685a      	ldr	r2, [r3, #4]
 80010ac:	697b      	ldr	r3, [r7, #20]
 80010ae:	40da      	lsrs	r2, r3
 80010b0:	687b      	ldr	r3, [r7, #4]
 80010b2:	609a      	str	r2, [r3, #8]
 80010b4:	4b0c      	ldr	r3, [pc, #48]	; (80010e8 <RCC_GetClocksFreq+0x140>)
 80010b6:	689b      	ldr	r3, [r3, #8]
 80010b8:	f403 4360 	and.w	r3, r3, #57344	; 0xe000
 80010bc:	61bb      	str	r3, [r7, #24]
 80010be:	69bb      	ldr	r3, [r7, #24]
 80010c0:	0b5b      	lsrs	r3, r3, #13
 80010c2:	61bb      	str	r3, [r7, #24]
 80010c4:	4a0b      	ldr	r2, [pc, #44]	; (80010f4 <RCC_GetClocksFreq+0x14c>)
 80010c6:	69bb      	ldr	r3, [r7, #24]
 80010c8:	4413      	add	r3, r2
 80010ca:	781b      	ldrb	r3, [r3, #0]
 80010cc:	b2db      	uxtb	r3, r3
 80010ce:	617b      	str	r3, [r7, #20]
 80010d0:	687b      	ldr	r3, [r7, #4]
 80010d2:	685a      	ldr	r2, [r3, #4]
 80010d4:	697b      	ldr	r3, [r7, #20]
 80010d6:	40da      	lsrs	r2, r3
 80010d8:	687b      	ldr	r3, [r7, #4]
 80010da:	60da      	str	r2, [r3, #12]
 80010dc:	bf00      	nop
 80010de:	3724      	adds	r7, #36	; 0x24
 80010e0:	46bd      	mov	sp, r7
 80010e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80010e6:	4770      	bx	lr
 80010e8:	40023800 	.word	0x40023800
 80010ec:	00f42400 	.word	0x00f42400
 80010f0:	017d7840 	.word	0x017d7840
 80010f4:	20000014 	.word	0x20000014

080010f8 <RCC_AHB1PeriphClockCmd>:
 80010f8:	b480      	push	{r7}
 80010fa:	b083      	sub	sp, #12
 80010fc:	af00      	add	r7, sp, #0
 80010fe:	6078      	str	r0, [r7, #4]
 8001100:	460b      	mov	r3, r1
 8001102:	70fb      	strb	r3, [r7, #3]
 8001104:	78fb      	ldrb	r3, [r7, #3]
 8001106:	2b00      	cmp	r3, #0
 8001108:	d006      	beq.n	8001118 <RCC_AHB1PeriphClockCmd+0x20>
 800110a:	4b0a      	ldr	r3, [pc, #40]	; (8001134 <RCC_AHB1PeriphClockCmd+0x3c>)
 800110c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800110e:	4909      	ldr	r1, [pc, #36]	; (8001134 <RCC_AHB1PeriphClockCmd+0x3c>)
 8001110:	687b      	ldr	r3, [r7, #4]
 8001112:	4313      	orrs	r3, r2
 8001114:	630b      	str	r3, [r1, #48]	; 0x30
 8001116:	e006      	b.n	8001126 <RCC_AHB1PeriphClockCmd+0x2e>
 8001118:	4b06      	ldr	r3, [pc, #24]	; (8001134 <RCC_AHB1PeriphClockCmd+0x3c>)
 800111a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800111c:	687b      	ldr	r3, [r7, #4]
 800111e:	43db      	mvns	r3, r3
 8001120:	4904      	ldr	r1, [pc, #16]	; (8001134 <RCC_AHB1PeriphClockCmd+0x3c>)
 8001122:	4013      	ands	r3, r2
 8001124:	630b      	str	r3, [r1, #48]	; 0x30
 8001126:	bf00      	nop
 8001128:	370c      	adds	r7, #12
 800112a:	46bd      	mov	sp, r7
 800112c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001130:	4770      	bx	lr
 8001132:	bf00      	nop
 8001134:	40023800 	.word	0x40023800

08001138 <RCC_APB1PeriphClockCmd>:
 8001138:	b480      	push	{r7}
 800113a:	b083      	sub	sp, #12
 800113c:	af00      	add	r7, sp, #0
 800113e:	6078      	str	r0, [r7, #4]
 8001140:	460b      	mov	r3, r1
 8001142:	70fb      	strb	r3, [r7, #3]
 8001144:	78fb      	ldrb	r3, [r7, #3]
 8001146:	2b00      	cmp	r3, #0
 8001148:	d006      	beq.n	8001158 <RCC_APB1PeriphClockCmd+0x20>
 800114a:	4b0a      	ldr	r3, [pc, #40]	; (8001174 <RCC_APB1PeriphClockCmd+0x3c>)
 800114c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800114e:	4909      	ldr	r1, [pc, #36]	; (8001174 <RCC_APB1PeriphClockCmd+0x3c>)
 8001150:	687b      	ldr	r3, [r7, #4]
 8001152:	4313      	orrs	r3, r2
 8001154:	640b      	str	r3, [r1, #64]	; 0x40
 8001156:	e006      	b.n	8001166 <RCC_APB1PeriphClockCmd+0x2e>
 8001158:	4b06      	ldr	r3, [pc, #24]	; (8001174 <RCC_APB1PeriphClockCmd+0x3c>)
 800115a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800115c:	687b      	ldr	r3, [r7, #4]
 800115e:	43db      	mvns	r3, r3
 8001160:	4904      	ldr	r1, [pc, #16]	; (8001174 <RCC_APB1PeriphClockCmd+0x3c>)
 8001162:	4013      	ands	r3, r2
 8001164:	640b      	str	r3, [r1, #64]	; 0x40
 8001166:	bf00      	nop
 8001168:	370c      	adds	r7, #12
 800116a:	46bd      	mov	sp, r7
 800116c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001170:	4770      	bx	lr
 8001172:	bf00      	nop
 8001174:	40023800 	.word	0x40023800

08001178 <__libc_init_array>:
 8001178:	b570      	push	{r4, r5, r6, lr}
 800117a:	4d0d      	ldr	r5, [pc, #52]	; (80011b0 <__libc_init_array+0x38>)
 800117c:	4c0d      	ldr	r4, [pc, #52]	; (80011b4 <__libc_init_array+0x3c>)
 800117e:	1b64      	subs	r4, r4, r5
 8001180:	10a4      	asrs	r4, r4, #2
 8001182:	2600      	movs	r6, #0
 8001184:	42a6      	cmp	r6, r4
 8001186:	d109      	bne.n	800119c <__libc_init_array+0x24>
 8001188:	4d0b      	ldr	r5, [pc, #44]	; (80011b8 <__libc_init_array+0x40>)
 800118a:	4c0c      	ldr	r4, [pc, #48]	; (80011bc <__libc_init_array+0x44>)
 800118c:	f000 f818 	bl	80011c0 <_init>
 8001190:	1b64      	subs	r4, r4, r5
 8001192:	10a4      	asrs	r4, r4, #2
 8001194:	2600      	movs	r6, #0
 8001196:	42a6      	cmp	r6, r4
 8001198:	d105      	bne.n	80011a6 <__libc_init_array+0x2e>
 800119a:	bd70      	pop	{r4, r5, r6, pc}
 800119c:	f855 3b04 	ldr.w	r3, [r5], #4
 80011a0:	4798      	blx	r3
 80011a2:	3601      	adds	r6, #1
 80011a4:	e7ee      	b.n	8001184 <__libc_init_array+0xc>
 80011a6:	f855 3b04 	ldr.w	r3, [r5], #4
 80011aa:	4798      	blx	r3
 80011ac:	3601      	adds	r6, #1
 80011ae:	e7f2      	b.n	8001196 <__libc_init_array+0x1e>
 80011b0:	080011d8 	.word	0x080011d8
 80011b4:	080011d8 	.word	0x080011d8
 80011b8:	080011d8 	.word	0x080011d8
 80011bc:	080011dc 	.word	0x080011dc

080011c0 <_init>:
 80011c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80011c2:	bf00      	nop
 80011c4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80011c6:	bc08      	pop	{r3}
 80011c8:	469e      	mov	lr, r3
 80011ca:	4770      	bx	lr

080011cc <_fini>:
 80011cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80011ce:	bf00      	nop
 80011d0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80011d2:	bc08      	pop	{r3}
 80011d4:	469e      	mov	lr, r3
 80011d6:	4770      	bx	lr
