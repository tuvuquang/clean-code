
lab6_bai1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000ba0  08000194  08000194  00010194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000d34  08000d34  00020010  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000d34  08000d34  00020010  2**0
                  CONTENTS
  4 .ARM          00000000  08000d34  08000d34  00020010  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000d34  08000d34  00020010  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000d34  08000d34  00010d34  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000d38  08000d38  00010d38  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000010  20000000  08000d3c  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000020  20000010  08000d4c  00020010  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000030  08000d4c  00020030  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020010  2**0
                  CONTENTS, READONLY
 12 .debug_info   00002a70  00000000  00000000  00020040  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000087c  00000000  00000000  00022ab0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000003e0  00000000  00000000  00023330  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000388  00000000  00000000  00023710  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000c471  00000000  00000000  00023a98  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000022e8  00000000  00000000  0002ff09  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0003da72  00000000  00000000  000321f1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      000000ce  00000000  00000000  0006fc63  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00001068  00000000  00000000  0006fd34  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	; (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	20000010 	.word	0x20000010
 80001b0:	00000000 	.word	0x00000000
 80001b4:	08000d1c 	.word	0x08000d1c

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	; (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	; (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	; (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	20000014 	.word	0x20000014
 80001d0:	08000d1c 	.word	0x08000d1c

080001d4 <main>:
static void USART6_TX_Init(void);
static void USART1_RX_Init(void);
void delay();
static void Control_LED_Received(void);
int main(void)
{
 80001d4:	b580      	push	{r7, lr}
 80001d6:	af00      	add	r7, sp, #0
	Led_init();
 80001d8:	f000 f848 	bl	800026c <Led_init>
	Button_init();
 80001dc:	f000 f82a 	bl	8000234 <Button_init>
	USART6_TX_Init();
 80001e0:	f000 f860 	bl	80002a4 <USART6_TX_Init>
	USART1_RX_Init();
 80001e4:	f000 f89c 	bl	8000320 <USART1_RX_Init>
	while(1)
	{
		Control_LED_Received();
 80001e8:	f000 f908 	bl	80003fc <Control_LED_Received>
 80001ec:	e7fc      	b.n	80001e8 <main+0x14>
	...

080001f0 <delay>:
	}

}
void delay()
{
 80001f0:	b480      	push	{r7}
 80001f2:	b083      	sub	sp, #12
 80001f4:	af00      	add	r7, sp, #0
	for(uint32_t i = 0 ; i < 50000;i++)
 80001f6:	2300      	movs	r3, #0
 80001f8:	607b      	str	r3, [r7, #4]
 80001fa:	e00c      	b.n	8000216 <delay+0x26>
	{
		for(uint32_t j = 0; j<500000;j++);
 80001fc:	2300      	movs	r3, #0
 80001fe:	603b      	str	r3, [r7, #0]
 8000200:	e002      	b.n	8000208 <delay+0x18>
 8000202:	683b      	ldr	r3, [r7, #0]
 8000204:	3301      	adds	r3, #1
 8000206:	603b      	str	r3, [r7, #0]
 8000208:	683b      	ldr	r3, [r7, #0]
 800020a:	4a09      	ldr	r2, [pc, #36]	; (8000230 <delay+0x40>)
 800020c:	4293      	cmp	r3, r2
 800020e:	d9f8      	bls.n	8000202 <delay+0x12>
	for(uint32_t i = 0 ; i < 50000;i++)
 8000210:	687b      	ldr	r3, [r7, #4]
 8000212:	3301      	adds	r3, #1
 8000214:	607b      	str	r3, [r7, #4]
 8000216:	687b      	ldr	r3, [r7, #4]
 8000218:	f24c 324f 	movw	r2, #49999	; 0xc34f
 800021c:	4293      	cmp	r3, r2
 800021e:	d9ed      	bls.n	80001fc <delay+0xc>
	}
}
 8000220:	bf00      	nop
 8000222:	bf00      	nop
 8000224:	370c      	adds	r7, #12
 8000226:	46bd      	mov	sp, r7
 8000228:	f85d 7b04 	ldr.w	r7, [sp], #4
 800022c:	4770      	bx	lr
 800022e:	bf00      	nop
 8000230:	0007a11f 	.word	0x0007a11f

08000234 <Button_init>:
 * @param	None
 * @retval	None
 */
static
void Button_init(void)
{
 8000234:	b580      	push	{r7, lr}
 8000236:	b082      	sub	sp, #8
 8000238:	af00      	add	r7, sp, #0
	GPIO_InitTypeDef GPIO_InitStruct;

	RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOC, ENABLE);
 800023a:	2101      	movs	r1, #1
 800023c:	2004      	movs	r0, #4
 800023e:	f000 fb69 	bl	8000914 <RCC_AHB1PeriphClockCmd>

	GPIO_InitStruct.GPIO_Mode = GPIO_Mode_IN;
 8000242:	2300      	movs	r3, #0
 8000244:	713b      	strb	r3, [r7, #4]
	GPIO_InitStruct.GPIO_PuPd = GPIO_PuPd_UP;
 8000246:	2301      	movs	r3, #1
 8000248:	71fb      	strb	r3, [r7, #7]
	GPIO_InitStruct.GPIO_Speed = GPIO_Speed_100MHz;
 800024a:	2303      	movs	r3, #3
 800024c:	717b      	strb	r3, [r7, #5]

	GPIO_InitStruct.GPIO_Pin = Button;
 800024e:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8000252:	603b      	str	r3, [r7, #0]
	GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000254:	463b      	mov	r3, r7
 8000256:	4619      	mov	r1, r3
 8000258:	4803      	ldr	r0, [pc, #12]	; (8000268 <Button_init+0x34>)
 800025a:	f000 f9a3 	bl	80005a4 <GPIO_Init>


}
 800025e:	bf00      	nop
 8000260:	3708      	adds	r7, #8
 8000262:	46bd      	mov	sp, r7
 8000264:	bd80      	pop	{r7, pc}
 8000266:	bf00      	nop
 8000268:	40020800 	.word	0x40020800

0800026c <Led_init>:
 * @param	None
 * @retval	None
 */
static
void Led_init(void)
{
 800026c:	b580      	push	{r7, lr}
 800026e:	b082      	sub	sp, #8
 8000270:	af00      	add	r7, sp, #0
	GPIO_InitTypeDef GPIO_InitStruct;

	RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOA, ENABLE);
 8000272:	2101      	movs	r1, #1
 8000274:	2001      	movs	r0, #1
 8000276:	f000 fb4d 	bl	8000914 <RCC_AHB1PeriphClockCmd>

	GPIO_InitStruct.GPIO_Mode = GPIO_Mode_OUT;
 800027a:	2301      	movs	r3, #1
 800027c:	713b      	strb	r3, [r7, #4]
	GPIO_InitStruct.GPIO_OType = GPIO_OType_PP;
 800027e:	2300      	movs	r3, #0
 8000280:	71bb      	strb	r3, [r7, #6]
	GPIO_InitStruct.GPIO_PuPd = GPIO_PuPd_DOWN;
 8000282:	2302      	movs	r3, #2
 8000284:	71fb      	strb	r3, [r7, #7]
	GPIO_InitStruct.GPIO_Speed = GPIO_Speed_100MHz;
 8000286:	2303      	movs	r3, #3
 8000288:	717b      	strb	r3, [r7, #5]

	GPIO_InitStruct.GPIO_Pin = Led;
 800028a:	2301      	movs	r3, #1
 800028c:	603b      	str	r3, [r7, #0]
	GPIO_Init(GPIOA, &GPIO_InitStruct);
 800028e:	463b      	mov	r3, r7
 8000290:	4619      	mov	r1, r3
 8000292:	4803      	ldr	r0, [pc, #12]	; (80002a0 <Led_init+0x34>)
 8000294:	f000 f986 	bl	80005a4 <GPIO_Init>

}
 8000298:	bf00      	nop
 800029a:	3708      	adds	r7, #8
 800029c:	46bd      	mov	sp, r7
 800029e:	bd80      	pop	{r7, pc}
 80002a0:	40020000 	.word	0x40020000

080002a4 <USART6_TX_Init>:
 * @param	None
 * @retval	None
 */
static
void USART6_TX_Init(void)
{
 80002a4:	b580      	push	{r7, lr}
 80002a6:	b086      	sub	sp, #24
 80002a8:	af00      	add	r7, sp, #0
	GPIO_InitTypeDef GPIO_InitStructure;
	USART_InitTypeDef USART_InitStructure;


	RCC_AHB1PeriphClockCmd(USART6_GPIO_Clock, ENABLE);
 80002aa:	2101      	movs	r1, #1
 80002ac:	2004      	movs	r0, #4
 80002ae:	f000 fb31 	bl	8000914 <RCC_AHB1PeriphClockCmd>

	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;
 80002b2:	2302      	movs	r3, #2
 80002b4:	753b      	strb	r3, [r7, #20]
	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
 80002b6:	2300      	movs	r3, #0
 80002b8:	75bb      	strb	r3, [r7, #22]
	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 80002ba:	2302      	movs	r3, #2
 80002bc:	757b      	strb	r3, [r7, #21]
	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;
 80002be:	2301      	movs	r3, #1
 80002c0:	75fb      	strb	r3, [r7, #23]

	GPIO_InitStructure.GPIO_Pin = USART6_TX;
 80002c2:	2340      	movs	r3, #64	; 0x40
 80002c4:	613b      	str	r3, [r7, #16]
	GPIO_Init(USART6_GPIO, &GPIO_InitStructure);
 80002c6:	f107 0310 	add.w	r3, r7, #16
 80002ca:	4619      	mov	r1, r3
 80002cc:	4812      	ldr	r0, [pc, #72]	; (8000318 <USART6_TX_Init+0x74>)
 80002ce:	f000 f969 	bl	80005a4 <GPIO_Init>

	GPIO_PinAFConfig(USART6_GPIO, GPIO_PinSource6, GPIO_AF_USART6);
 80002d2:	2208      	movs	r2, #8
 80002d4:	2106      	movs	r1, #6
 80002d6:	4810      	ldr	r0, [pc, #64]	; (8000318 <USART6_TX_Init+0x74>)
 80002d8:	f000 fa2a 	bl	8000730 <GPIO_PinAFConfig>

// Configure USART
	RCC_APB2PeriphClockCmd(USART6_CLOCK, ENABLE);
 80002dc:	2101      	movs	r1, #1
 80002de:	2020      	movs	r0, #32
 80002e0:	f000 fb38 	bl	8000954 <RCC_APB2PeriphClockCmd>

	USART_InitStructure.USART_BaudRate = USARTx_Baud;
 80002e4:	f44f 5316 	mov.w	r3, #9600	; 0x2580
 80002e8:	603b      	str	r3, [r7, #0]
	USART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
 80002ea:	2300      	movs	r3, #0
 80002ec:	81bb      	strh	r3, [r7, #12]
	USART_InitStructure.USART_Mode = USART_Mode_Tx;
 80002ee:	2308      	movs	r3, #8
 80002f0:	817b      	strh	r3, [r7, #10]
	USART_InitStructure.USART_Parity = USART_Parity_No;
 80002f2:	2300      	movs	r3, #0
 80002f4:	813b      	strh	r3, [r7, #8]
	USART_InitStructure.USART_WordLength = USART_WordLength_8b;
 80002f6:	2300      	movs	r3, #0
 80002f8:	80bb      	strh	r3, [r7, #4]
	USART_InitStructure.USART_StopBits = USART_StopBits_1;
 80002fa:	2300      	movs	r3, #0
 80002fc:	80fb      	strh	r3, [r7, #6]

	USART_Init(USART6, &USART_InitStructure);
 80002fe:	463b      	mov	r3, r7
 8000300:	4619      	mov	r1, r3
 8000302:	4806      	ldr	r0, [pc, #24]	; (800031c <USART6_TX_Init+0x78>)
 8000304:	f000 fb46 	bl	8000994 <USART_Init>
	USART_Cmd(USART6, ENABLE);
 8000308:	2101      	movs	r1, #1
 800030a:	4804      	ldr	r0, [pc, #16]	; (800031c <USART6_TX_Init+0x78>)
 800030c:	f000 fbfc 	bl	8000b08 <USART_Cmd>

}
 8000310:	bf00      	nop
 8000312:	3718      	adds	r7, #24
 8000314:	46bd      	mov	sp, r7
 8000316:	bd80      	pop	{r7, pc}
 8000318:	40020800 	.word	0x40020800
 800031c:	40011400 	.word	0x40011400

08000320 <USART1_RX_Init>:
 * @param	None
 * @retval	None
 */
static
void USART1_RX_Init(void)
{
 8000320:	b580      	push	{r7, lr}
 8000322:	b088      	sub	sp, #32
 8000324:	af00      	add	r7, sp, #0
	GPIO_InitTypeDef GPIO_InitStructure;
	USART_InitTypeDef USART_InitStructure;
	NVIC_InitTypeDef NVIC_InitStructure;


	RCC_AHB1PeriphClockCmd(USART1_GPIO_Clock, ENABLE);
 8000326:	2101      	movs	r1, #1
 8000328:	2001      	movs	r0, #1
 800032a:	f000 faf3 	bl	8000914 <RCC_AHB1PeriphClockCmd>

	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;
 800032e:	2302      	movs	r3, #2
 8000330:	773b      	strb	r3, [r7, #28]
	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
 8000332:	2300      	movs	r3, #0
 8000334:	77bb      	strb	r3, [r7, #30]
	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 8000336:	2302      	movs	r3, #2
 8000338:	777b      	strb	r3, [r7, #29]
	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;
 800033a:	2301      	movs	r3, #1
 800033c:	77fb      	strb	r3, [r7, #31]

	GPIO_InitStructure.GPIO_Pin = USART1_TX;
 800033e:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000342:	61bb      	str	r3, [r7, #24]
	GPIO_Init(USART1_GPIO, &GPIO_InitStructure);
 8000344:	f107 0318 	add.w	r3, r7, #24
 8000348:	4619      	mov	r1, r3
 800034a:	481e      	ldr	r0, [pc, #120]	; (80003c4 <USART1_RX_Init+0xa4>)
 800034c:	f000 f92a 	bl	80005a4 <GPIO_Init>

	GPIO_PinAFConfig(USART1_GPIO, GPIO_PinSource1, GPIO_AF_USART1);
 8000350:	2207      	movs	r2, #7
 8000352:	2101      	movs	r1, #1
 8000354:	481b      	ldr	r0, [pc, #108]	; (80003c4 <USART1_RX_Init+0xa4>)
 8000356:	f000 f9eb 	bl	8000730 <GPIO_PinAFConfig>

// Configure USART
	RCC_APB2PeriphClockCmd(USART1_CLOCK, ENABLE);
 800035a:	2101      	movs	r1, #1
 800035c:	2010      	movs	r0, #16
 800035e:	f000 faf9 	bl	8000954 <RCC_APB2PeriphClockCmd>

	USART_InitStructure.USART_BaudRate = USARTx_Baud;
 8000362:	f44f 5316 	mov.w	r3, #9600	; 0x2580
 8000366:	60bb      	str	r3, [r7, #8]
	USART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
 8000368:	2300      	movs	r3, #0
 800036a:	82bb      	strh	r3, [r7, #20]
	USART_InitStructure.USART_Mode = USART_Mode_Rx;
 800036c:	2304      	movs	r3, #4
 800036e:	827b      	strh	r3, [r7, #18]
	USART_InitStructure.USART_Parity = USART_Parity_No;
 8000370:	2300      	movs	r3, #0
 8000372:	823b      	strh	r3, [r7, #16]
	USART_InitStructure.USART_WordLength = USART_WordLength_8b;
 8000374:	2300      	movs	r3, #0
 8000376:	81bb      	strh	r3, [r7, #12]
	USART_InitStructure.USART_StopBits = USART_StopBits_1;
 8000378:	2300      	movs	r3, #0
 800037a:	81fb      	strh	r3, [r7, #14]

	USART_Init(USART1, &USART_InitStructure);
 800037c:	f107 0308 	add.w	r3, r7, #8
 8000380:	4619      	mov	r1, r3
 8000382:	4811      	ldr	r0, [pc, #68]	; (80003c8 <USART1_RX_Init+0xa8>)
 8000384:	f000 fb06 	bl	8000994 <USART_Init>
	USART_Cmd(USART1, ENABLE);
 8000388:	2101      	movs	r1, #1
 800038a:	480f      	ldr	r0, [pc, #60]	; (80003c8 <USART1_RX_Init+0xa8>)
 800038c:	f000 fbbc 	bl	8000b08 <USART_Cmd>

// NVIC configure
	// Enable USARTx Receive interrupts
	USART_ITConfig(USART1, USART_IT_RXNE, ENABLE);
 8000390:	2201      	movs	r2, #1
 8000392:	f240 5125 	movw	r1, #1317	; 0x525
 8000396:	480c      	ldr	r0, [pc, #48]	; (80003c8 <USART1_RX_Init+0xa8>)
 8000398:	f000 fbf8 	bl	8000b8c <USART_ITConfig>

	// NVIC configuration
	NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);
 800039c:	f44f 60a0 	mov.w	r0, #1280	; 0x500
 80003a0:	f000 f88a 	bl	80004b8 <NVIC_PriorityGroupConfig>

	NVIC_InitStructure.NVIC_IRQChannel = USART1_IRQn;
 80003a4:	2325      	movs	r3, #37	; 0x25
 80003a6:	713b      	strb	r3, [r7, #4]
	NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;
 80003a8:	2300      	movs	r3, #0
 80003aa:	717b      	strb	r3, [r7, #5]
	NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
 80003ac:	2300      	movs	r3, #0
 80003ae:	71bb      	strb	r3, [r7, #6]
	NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
 80003b0:	2301      	movs	r3, #1
 80003b2:	71fb      	strb	r3, [r7, #7]
	NVIC_Init(&NVIC_InitStructure);
 80003b4:	1d3b      	adds	r3, r7, #4
 80003b6:	4618      	mov	r0, r3
 80003b8:	f000 f892 	bl	80004e0 <NVIC_Init>
}
 80003bc:	bf00      	nop
 80003be:	3720      	adds	r7, #32
 80003c0:	46bd      	mov	sp, r7
 80003c2:	bd80      	pop	{r7, pc}
 80003c4:	40020000 	.word	0x40020000
 80003c8:	40011000 	.word	0x40011000

080003cc <USART1_IRQHandler>:
 * @param	None
 * @retval	None
 */

void USART1_IRQHandler(void)
{
 80003cc:	b580      	push	{r7, lr}
 80003ce:	af00      	add	r7, sp, #0
	if(USART_GetITStatus(USART1, USART_IT_RXNE)== SET)
 80003d0:	f240 5125 	movw	r1, #1317	; 0x525
 80003d4:	4807      	ldr	r0, [pc, #28]	; (80003f4 <USART1_IRQHandler+0x28>)
 80003d6:	f000 fc21 	bl	8000c1c <USART_GetITStatus>
 80003da:	4603      	mov	r3, r0
 80003dc:	2b01      	cmp	r3, #1
 80003de:	d106      	bne.n	80003ee <USART1_IRQHandler+0x22>
	{
		data1 = USART_ReceiveData(USART1);
 80003e0:	4804      	ldr	r0, [pc, #16]	; (80003f4 <USART1_IRQHandler+0x28>)
 80003e2:	f000 fbc3 	bl	8000b6c <USART_ReceiveData>
 80003e6:	4603      	mov	r3, r0
 80003e8:	461a      	mov	r2, r3
 80003ea:	4b03      	ldr	r3, [pc, #12]	; (80003f8 <USART1_IRQHandler+0x2c>)
 80003ec:	801a      	strh	r2, [r3, #0]
	}
}
 80003ee:	bf00      	nop
 80003f0:	bd80      	pop	{r7, pc}
 80003f2:	bf00      	nop
 80003f4:	40011000 	.word	0x40011000
 80003f8:	2000002c 	.word	0x2000002c

080003fc <Control_LED_Received>:

static
void Control_LED_Received(void)
{
 80003fc:	b580      	push	{r7, lr}
 80003fe:	b082      	sub	sp, #8
 8000400:	af00      	add	r7, sp, #0
	// Send data from USART6 to USART1
	if(GPIO_ReadInputDataBit(GPIOC, GPIO_Pin_13)== 0)
 8000402:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8000406:	4813      	ldr	r0, [pc, #76]	; (8000454 <Control_LED_Received+0x58>)
 8000408:	f000 f95a 	bl	80006c0 <GPIO_ReadInputDataBit>
 800040c:	4603      	mov	r3, r0
 800040e:	2b00      	cmp	r3, #0
 8000410:	d103      	bne.n	800041a <Control_LED_Received+0x1e>
	{
		USART_SendData(USART6, 0x10);
 8000412:	2110      	movs	r1, #16
 8000414:	4810      	ldr	r0, [pc, #64]	; (8000458 <Control_LED_Received+0x5c>)
 8000416:	f000 fb97 	bl	8000b48 <USART_SendData>
	}

	if(Data_receive == Check_Data)
 800041a:	4b10      	ldr	r3, [pc, #64]	; (800045c <Control_LED_Received+0x60>)
 800041c:	881b      	ldrh	r3, [r3, #0]
 800041e:	2b10      	cmp	r3, #16
 8000420:	d114      	bne.n	800044c <Control_LED_Received+0x50>
	{
		for(int i = 0;i<5;i++)
 8000422:	2300      	movs	r3, #0
 8000424:	607b      	str	r3, [r7, #4]
 8000426:	e00e      	b.n	8000446 <Control_LED_Received+0x4a>
		{
			GPIO_SetBits(GPIOA, Led);
 8000428:	2101      	movs	r1, #1
 800042a:	480d      	ldr	r0, [pc, #52]	; (8000460 <Control_LED_Received+0x64>)
 800042c:	f000 f962 	bl	80006f4 <GPIO_SetBits>
			delay();
 8000430:	f7ff fede 	bl	80001f0 <delay>
			GPIO_ResetBits(GPIOA, Led);
 8000434:	2101      	movs	r1, #1
 8000436:	480a      	ldr	r0, [pc, #40]	; (8000460 <Control_LED_Received+0x64>)
 8000438:	f000 f96b 	bl	8000712 <GPIO_ResetBits>
			delay();
 800043c:	f7ff fed8 	bl	80001f0 <delay>
		for(int i = 0;i<5;i++)
 8000440:	687b      	ldr	r3, [r7, #4]
 8000442:	3301      	adds	r3, #1
 8000444:	607b      	str	r3, [r7, #4]
 8000446:	687b      	ldr	r3, [r7, #4]
 8000448:	2b04      	cmp	r3, #4
 800044a:	dded      	ble.n	8000428 <Control_LED_Received+0x2c>
		}
	}
}
 800044c:	bf00      	nop
 800044e:	3708      	adds	r7, #8
 8000450:	46bd      	mov	sp, r7
 8000452:	bd80      	pop	{r7, pc}
 8000454:	40020800 	.word	0x40020800
 8000458:	40011400 	.word	0x40011400
 800045c:	2000002e 	.word	0x2000002e
 8000460:	40020000 	.word	0x40020000

08000464 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000464:	480d      	ldr	r0, [pc, #52]	; (800049c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000466:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 8000468:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800046c:	480c      	ldr	r0, [pc, #48]	; (80004a0 <LoopForever+0x6>)
  ldr r1, =_edata
 800046e:	490d      	ldr	r1, [pc, #52]	; (80004a4 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000470:	4a0d      	ldr	r2, [pc, #52]	; (80004a8 <LoopForever+0xe>)
  movs r3, #0
 8000472:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000474:	e002      	b.n	800047c <LoopCopyDataInit>

08000476 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000476:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000478:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800047a:	3304      	adds	r3, #4

0800047c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800047c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800047e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000480:	d3f9      	bcc.n	8000476 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000482:	4a0a      	ldr	r2, [pc, #40]	; (80004ac <LoopForever+0x12>)
  ldr r4, =_ebss
 8000484:	4c0a      	ldr	r4, [pc, #40]	; (80004b0 <LoopForever+0x16>)
  movs r3, #0
 8000486:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000488:	e001      	b.n	800048e <LoopFillZerobss>

0800048a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800048a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800048c:	3204      	adds	r2, #4

0800048e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800048e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000490:	d3fb      	bcc.n	800048a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000492:	f000 fc1f 	bl	8000cd4 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000496:	f7ff fe9d 	bl	80001d4 <main>

0800049a <LoopForever>:

LoopForever:
    b LoopForever
 800049a:	e7fe      	b.n	800049a <LoopForever>
  ldr   r0, =_estack
 800049c:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 80004a0:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80004a4:	20000010 	.word	0x20000010
  ldr r2, =_sidata
 80004a8:	08000d3c 	.word	0x08000d3c
  ldr r2, =_sbss
 80004ac:	20000010 	.word	0x20000010
  ldr r4, =_ebss
 80004b0:	20000030 	.word	0x20000030

080004b4 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80004b4:	e7fe      	b.n	80004b4 <ADC_IRQHandler>
	...

080004b8 <NVIC_PriorityGroupConfig>:
 80004b8:	b480      	push	{r7}
 80004ba:	b083      	sub	sp, #12
 80004bc:	af00      	add	r7, sp, #0
 80004be:	6078      	str	r0, [r7, #4]
 80004c0:	4a06      	ldr	r2, [pc, #24]	; (80004dc <NVIC_PriorityGroupConfig+0x24>)
 80004c2:	687b      	ldr	r3, [r7, #4]
 80004c4:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 80004c8:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80004cc:	60d3      	str	r3, [r2, #12]
 80004ce:	bf00      	nop
 80004d0:	370c      	adds	r7, #12
 80004d2:	46bd      	mov	sp, r7
 80004d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004d8:	4770      	bx	lr
 80004da:	bf00      	nop
 80004dc:	e000ed00 	.word	0xe000ed00

080004e0 <NVIC_Init>:
 80004e0:	b480      	push	{r7}
 80004e2:	b085      	sub	sp, #20
 80004e4:	af00      	add	r7, sp, #0
 80004e6:	6078      	str	r0, [r7, #4]
 80004e8:	2300      	movs	r3, #0
 80004ea:	73fb      	strb	r3, [r7, #15]
 80004ec:	2300      	movs	r3, #0
 80004ee:	73bb      	strb	r3, [r7, #14]
 80004f0:	230f      	movs	r3, #15
 80004f2:	737b      	strb	r3, [r7, #13]
 80004f4:	687b      	ldr	r3, [r7, #4]
 80004f6:	78db      	ldrb	r3, [r3, #3]
 80004f8:	2b00      	cmp	r3, #0
 80004fa:	d039      	beq.n	8000570 <NVIC_Init+0x90>
 80004fc:	4b27      	ldr	r3, [pc, #156]	; (800059c <NVIC_Init+0xbc>)
 80004fe:	68db      	ldr	r3, [r3, #12]
 8000500:	43db      	mvns	r3, r3
 8000502:	0a1b      	lsrs	r3, r3, #8
 8000504:	b2db      	uxtb	r3, r3
 8000506:	f003 0307 	and.w	r3, r3, #7
 800050a:	73fb      	strb	r3, [r7, #15]
 800050c:	7bfb      	ldrb	r3, [r7, #15]
 800050e:	f1c3 0304 	rsb	r3, r3, #4
 8000512:	73bb      	strb	r3, [r7, #14]
 8000514:	7b7a      	ldrb	r2, [r7, #13]
 8000516:	7bfb      	ldrb	r3, [r7, #15]
 8000518:	fa42 f303 	asr.w	r3, r2, r3
 800051c:	737b      	strb	r3, [r7, #13]
 800051e:	687b      	ldr	r3, [r7, #4]
 8000520:	785b      	ldrb	r3, [r3, #1]
 8000522:	461a      	mov	r2, r3
 8000524:	7bbb      	ldrb	r3, [r7, #14]
 8000526:	fa02 f303 	lsl.w	r3, r2, r3
 800052a:	73fb      	strb	r3, [r7, #15]
 800052c:	687b      	ldr	r3, [r7, #4]
 800052e:	789a      	ldrb	r2, [r3, #2]
 8000530:	7b7b      	ldrb	r3, [r7, #13]
 8000532:	4013      	ands	r3, r2
 8000534:	b2da      	uxtb	r2, r3
 8000536:	7bfb      	ldrb	r3, [r7, #15]
 8000538:	4313      	orrs	r3, r2
 800053a:	73fb      	strb	r3, [r7, #15]
 800053c:	7bfb      	ldrb	r3, [r7, #15]
 800053e:	011b      	lsls	r3, r3, #4
 8000540:	73fb      	strb	r3, [r7, #15]
 8000542:	4a17      	ldr	r2, [pc, #92]	; (80005a0 <NVIC_Init+0xc0>)
 8000544:	687b      	ldr	r3, [r7, #4]
 8000546:	781b      	ldrb	r3, [r3, #0]
 8000548:	4413      	add	r3, r2
 800054a:	7bfa      	ldrb	r2, [r7, #15]
 800054c:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8000550:	687b      	ldr	r3, [r7, #4]
 8000552:	781b      	ldrb	r3, [r3, #0]
 8000554:	f003 031f 	and.w	r3, r3, #31
 8000558:	4911      	ldr	r1, [pc, #68]	; (80005a0 <NVIC_Init+0xc0>)
 800055a:	687a      	ldr	r2, [r7, #4]
 800055c:	7812      	ldrb	r2, [r2, #0]
 800055e:	0952      	lsrs	r2, r2, #5
 8000560:	b2d2      	uxtb	r2, r2
 8000562:	4610      	mov	r0, r2
 8000564:	2201      	movs	r2, #1
 8000566:	fa02 f303 	lsl.w	r3, r2, r3
 800056a:	f841 3020 	str.w	r3, [r1, r0, lsl #2]
 800056e:	e00f      	b.n	8000590 <NVIC_Init+0xb0>
 8000570:	687b      	ldr	r3, [r7, #4]
 8000572:	781b      	ldrb	r3, [r3, #0]
 8000574:	f003 031f 	and.w	r3, r3, #31
 8000578:	4909      	ldr	r1, [pc, #36]	; (80005a0 <NVIC_Init+0xc0>)
 800057a:	687a      	ldr	r2, [r7, #4]
 800057c:	7812      	ldrb	r2, [r2, #0]
 800057e:	0952      	lsrs	r2, r2, #5
 8000580:	b2d2      	uxtb	r2, r2
 8000582:	4610      	mov	r0, r2
 8000584:	2201      	movs	r2, #1
 8000586:	409a      	lsls	r2, r3
 8000588:	f100 0320 	add.w	r3, r0, #32
 800058c:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8000590:	bf00      	nop
 8000592:	3714      	adds	r7, #20
 8000594:	46bd      	mov	sp, r7
 8000596:	f85d 7b04 	ldr.w	r7, [sp], #4
 800059a:	4770      	bx	lr
 800059c:	e000ed00 	.word	0xe000ed00
 80005a0:	e000e100 	.word	0xe000e100

080005a4 <GPIO_Init>:
 80005a4:	b480      	push	{r7}
 80005a6:	b087      	sub	sp, #28
 80005a8:	af00      	add	r7, sp, #0
 80005aa:	6078      	str	r0, [r7, #4]
 80005ac:	6039      	str	r1, [r7, #0]
 80005ae:	2300      	movs	r3, #0
 80005b0:	617b      	str	r3, [r7, #20]
 80005b2:	2300      	movs	r3, #0
 80005b4:	613b      	str	r3, [r7, #16]
 80005b6:	2300      	movs	r3, #0
 80005b8:	60fb      	str	r3, [r7, #12]
 80005ba:	2300      	movs	r3, #0
 80005bc:	617b      	str	r3, [r7, #20]
 80005be:	e076      	b.n	80006ae <GPIO_Init+0x10a>
 80005c0:	2201      	movs	r2, #1
 80005c2:	697b      	ldr	r3, [r7, #20]
 80005c4:	fa02 f303 	lsl.w	r3, r2, r3
 80005c8:	613b      	str	r3, [r7, #16]
 80005ca:	683b      	ldr	r3, [r7, #0]
 80005cc:	681b      	ldr	r3, [r3, #0]
 80005ce:	693a      	ldr	r2, [r7, #16]
 80005d0:	4013      	ands	r3, r2
 80005d2:	60fb      	str	r3, [r7, #12]
 80005d4:	68fa      	ldr	r2, [r7, #12]
 80005d6:	693b      	ldr	r3, [r7, #16]
 80005d8:	429a      	cmp	r2, r3
 80005da:	d165      	bne.n	80006a8 <GPIO_Init+0x104>
 80005dc:	687b      	ldr	r3, [r7, #4]
 80005de:	681a      	ldr	r2, [r3, #0]
 80005e0:	697b      	ldr	r3, [r7, #20]
 80005e2:	005b      	lsls	r3, r3, #1
 80005e4:	2103      	movs	r1, #3
 80005e6:	fa01 f303 	lsl.w	r3, r1, r3
 80005ea:	43db      	mvns	r3, r3
 80005ec:	401a      	ands	r2, r3
 80005ee:	687b      	ldr	r3, [r7, #4]
 80005f0:	601a      	str	r2, [r3, #0]
 80005f2:	687b      	ldr	r3, [r7, #4]
 80005f4:	681a      	ldr	r2, [r3, #0]
 80005f6:	683b      	ldr	r3, [r7, #0]
 80005f8:	791b      	ldrb	r3, [r3, #4]
 80005fa:	4619      	mov	r1, r3
 80005fc:	697b      	ldr	r3, [r7, #20]
 80005fe:	005b      	lsls	r3, r3, #1
 8000600:	fa01 f303 	lsl.w	r3, r1, r3
 8000604:	431a      	orrs	r2, r3
 8000606:	687b      	ldr	r3, [r7, #4]
 8000608:	601a      	str	r2, [r3, #0]
 800060a:	683b      	ldr	r3, [r7, #0]
 800060c:	791b      	ldrb	r3, [r3, #4]
 800060e:	2b01      	cmp	r3, #1
 8000610:	d003      	beq.n	800061a <GPIO_Init+0x76>
 8000612:	683b      	ldr	r3, [r7, #0]
 8000614:	791b      	ldrb	r3, [r3, #4]
 8000616:	2b02      	cmp	r3, #2
 8000618:	d12e      	bne.n	8000678 <GPIO_Init+0xd4>
 800061a:	687b      	ldr	r3, [r7, #4]
 800061c:	689a      	ldr	r2, [r3, #8]
 800061e:	697b      	ldr	r3, [r7, #20]
 8000620:	005b      	lsls	r3, r3, #1
 8000622:	2103      	movs	r1, #3
 8000624:	fa01 f303 	lsl.w	r3, r1, r3
 8000628:	43db      	mvns	r3, r3
 800062a:	401a      	ands	r2, r3
 800062c:	687b      	ldr	r3, [r7, #4]
 800062e:	609a      	str	r2, [r3, #8]
 8000630:	687b      	ldr	r3, [r7, #4]
 8000632:	689a      	ldr	r2, [r3, #8]
 8000634:	683b      	ldr	r3, [r7, #0]
 8000636:	795b      	ldrb	r3, [r3, #5]
 8000638:	4619      	mov	r1, r3
 800063a:	697b      	ldr	r3, [r7, #20]
 800063c:	005b      	lsls	r3, r3, #1
 800063e:	fa01 f303 	lsl.w	r3, r1, r3
 8000642:	431a      	orrs	r2, r3
 8000644:	687b      	ldr	r3, [r7, #4]
 8000646:	609a      	str	r2, [r3, #8]
 8000648:	687b      	ldr	r3, [r7, #4]
 800064a:	685a      	ldr	r2, [r3, #4]
 800064c:	697b      	ldr	r3, [r7, #20]
 800064e:	b29b      	uxth	r3, r3
 8000650:	4619      	mov	r1, r3
 8000652:	2301      	movs	r3, #1
 8000654:	408b      	lsls	r3, r1
 8000656:	43db      	mvns	r3, r3
 8000658:	401a      	ands	r2, r3
 800065a:	687b      	ldr	r3, [r7, #4]
 800065c:	605a      	str	r2, [r3, #4]
 800065e:	687b      	ldr	r3, [r7, #4]
 8000660:	685b      	ldr	r3, [r3, #4]
 8000662:	683a      	ldr	r2, [r7, #0]
 8000664:	7992      	ldrb	r2, [r2, #6]
 8000666:	4611      	mov	r1, r2
 8000668:	697a      	ldr	r2, [r7, #20]
 800066a:	b292      	uxth	r2, r2
 800066c:	fa01 f202 	lsl.w	r2, r1, r2
 8000670:	b292      	uxth	r2, r2
 8000672:	431a      	orrs	r2, r3
 8000674:	687b      	ldr	r3, [r7, #4]
 8000676:	605a      	str	r2, [r3, #4]
 8000678:	687b      	ldr	r3, [r7, #4]
 800067a:	68da      	ldr	r2, [r3, #12]
 800067c:	697b      	ldr	r3, [r7, #20]
 800067e:	b29b      	uxth	r3, r3
 8000680:	005b      	lsls	r3, r3, #1
 8000682:	2103      	movs	r1, #3
 8000684:	fa01 f303 	lsl.w	r3, r1, r3
 8000688:	43db      	mvns	r3, r3
 800068a:	401a      	ands	r2, r3
 800068c:	687b      	ldr	r3, [r7, #4]
 800068e:	60da      	str	r2, [r3, #12]
 8000690:	687b      	ldr	r3, [r7, #4]
 8000692:	68da      	ldr	r2, [r3, #12]
 8000694:	683b      	ldr	r3, [r7, #0]
 8000696:	79db      	ldrb	r3, [r3, #7]
 8000698:	4619      	mov	r1, r3
 800069a:	697b      	ldr	r3, [r7, #20]
 800069c:	005b      	lsls	r3, r3, #1
 800069e:	fa01 f303 	lsl.w	r3, r1, r3
 80006a2:	431a      	orrs	r2, r3
 80006a4:	687b      	ldr	r3, [r7, #4]
 80006a6:	60da      	str	r2, [r3, #12]
 80006a8:	697b      	ldr	r3, [r7, #20]
 80006aa:	3301      	adds	r3, #1
 80006ac:	617b      	str	r3, [r7, #20]
 80006ae:	697b      	ldr	r3, [r7, #20]
 80006b0:	2b0f      	cmp	r3, #15
 80006b2:	d985      	bls.n	80005c0 <GPIO_Init+0x1c>
 80006b4:	bf00      	nop
 80006b6:	371c      	adds	r7, #28
 80006b8:	46bd      	mov	sp, r7
 80006ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80006be:	4770      	bx	lr

080006c0 <GPIO_ReadInputDataBit>:
 80006c0:	b480      	push	{r7}
 80006c2:	b085      	sub	sp, #20
 80006c4:	af00      	add	r7, sp, #0
 80006c6:	6078      	str	r0, [r7, #4]
 80006c8:	460b      	mov	r3, r1
 80006ca:	807b      	strh	r3, [r7, #2]
 80006cc:	2300      	movs	r3, #0
 80006ce:	73fb      	strb	r3, [r7, #15]
 80006d0:	687b      	ldr	r3, [r7, #4]
 80006d2:	691a      	ldr	r2, [r3, #16]
 80006d4:	887b      	ldrh	r3, [r7, #2]
 80006d6:	4013      	ands	r3, r2
 80006d8:	2b00      	cmp	r3, #0
 80006da:	d002      	beq.n	80006e2 <GPIO_ReadInputDataBit+0x22>
 80006dc:	2301      	movs	r3, #1
 80006de:	73fb      	strb	r3, [r7, #15]
 80006e0:	e001      	b.n	80006e6 <GPIO_ReadInputDataBit+0x26>
 80006e2:	2300      	movs	r3, #0
 80006e4:	73fb      	strb	r3, [r7, #15]
 80006e6:	7bfb      	ldrb	r3, [r7, #15]
 80006e8:	4618      	mov	r0, r3
 80006ea:	3714      	adds	r7, #20
 80006ec:	46bd      	mov	sp, r7
 80006ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80006f2:	4770      	bx	lr

080006f4 <GPIO_SetBits>:
 80006f4:	b480      	push	{r7}
 80006f6:	b083      	sub	sp, #12
 80006f8:	af00      	add	r7, sp, #0
 80006fa:	6078      	str	r0, [r7, #4]
 80006fc:	460b      	mov	r3, r1
 80006fe:	807b      	strh	r3, [r7, #2]
 8000700:	687b      	ldr	r3, [r7, #4]
 8000702:	887a      	ldrh	r2, [r7, #2]
 8000704:	831a      	strh	r2, [r3, #24]
 8000706:	bf00      	nop
 8000708:	370c      	adds	r7, #12
 800070a:	46bd      	mov	sp, r7
 800070c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000710:	4770      	bx	lr

08000712 <GPIO_ResetBits>:
 8000712:	b480      	push	{r7}
 8000714:	b083      	sub	sp, #12
 8000716:	af00      	add	r7, sp, #0
 8000718:	6078      	str	r0, [r7, #4]
 800071a:	460b      	mov	r3, r1
 800071c:	807b      	strh	r3, [r7, #2]
 800071e:	687b      	ldr	r3, [r7, #4]
 8000720:	887a      	ldrh	r2, [r7, #2]
 8000722:	835a      	strh	r2, [r3, #26]
 8000724:	bf00      	nop
 8000726:	370c      	adds	r7, #12
 8000728:	46bd      	mov	sp, r7
 800072a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800072e:	4770      	bx	lr

08000730 <GPIO_PinAFConfig>:
 8000730:	b480      	push	{r7}
 8000732:	b085      	sub	sp, #20
 8000734:	af00      	add	r7, sp, #0
 8000736:	6078      	str	r0, [r7, #4]
 8000738:	460b      	mov	r3, r1
 800073a:	807b      	strh	r3, [r7, #2]
 800073c:	4613      	mov	r3, r2
 800073e:	707b      	strb	r3, [r7, #1]
 8000740:	2300      	movs	r3, #0
 8000742:	60fb      	str	r3, [r7, #12]
 8000744:	2300      	movs	r3, #0
 8000746:	60bb      	str	r3, [r7, #8]
 8000748:	787a      	ldrb	r2, [r7, #1]
 800074a:	887b      	ldrh	r3, [r7, #2]
 800074c:	f003 0307 	and.w	r3, r3, #7
 8000750:	009b      	lsls	r3, r3, #2
 8000752:	fa02 f303 	lsl.w	r3, r2, r3
 8000756:	60fb      	str	r3, [r7, #12]
 8000758:	887b      	ldrh	r3, [r7, #2]
 800075a:	08db      	lsrs	r3, r3, #3
 800075c:	b29b      	uxth	r3, r3
 800075e:	461a      	mov	r2, r3
 8000760:	687b      	ldr	r3, [r7, #4]
 8000762:	3208      	adds	r2, #8
 8000764:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8000768:	887b      	ldrh	r3, [r7, #2]
 800076a:	f003 0307 	and.w	r3, r3, #7
 800076e:	009b      	lsls	r3, r3, #2
 8000770:	210f      	movs	r1, #15
 8000772:	fa01 f303 	lsl.w	r3, r1, r3
 8000776:	43db      	mvns	r3, r3
 8000778:	8879      	ldrh	r1, [r7, #2]
 800077a:	08c9      	lsrs	r1, r1, #3
 800077c:	b289      	uxth	r1, r1
 800077e:	4608      	mov	r0, r1
 8000780:	ea02 0103 	and.w	r1, r2, r3
 8000784:	687b      	ldr	r3, [r7, #4]
 8000786:	f100 0208 	add.w	r2, r0, #8
 800078a:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 800078e:	887b      	ldrh	r3, [r7, #2]
 8000790:	08db      	lsrs	r3, r3, #3
 8000792:	b29b      	uxth	r3, r3
 8000794:	461a      	mov	r2, r3
 8000796:	687b      	ldr	r3, [r7, #4]
 8000798:	3208      	adds	r2, #8
 800079a:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800079e:	68fa      	ldr	r2, [r7, #12]
 80007a0:	4313      	orrs	r3, r2
 80007a2:	60bb      	str	r3, [r7, #8]
 80007a4:	887b      	ldrh	r3, [r7, #2]
 80007a6:	08db      	lsrs	r3, r3, #3
 80007a8:	b29b      	uxth	r3, r3
 80007aa:	461a      	mov	r2, r3
 80007ac:	687b      	ldr	r3, [r7, #4]
 80007ae:	3208      	adds	r2, #8
 80007b0:	68b9      	ldr	r1, [r7, #8]
 80007b2:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 80007b6:	bf00      	nop
 80007b8:	3714      	adds	r7, #20
 80007ba:	46bd      	mov	sp, r7
 80007bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80007c0:	4770      	bx	lr
	...

080007c4 <RCC_GetClocksFreq>:
 80007c4:	b480      	push	{r7}
 80007c6:	b089      	sub	sp, #36	; 0x24
 80007c8:	af00      	add	r7, sp, #0
 80007ca:	6078      	str	r0, [r7, #4]
 80007cc:	2300      	movs	r3, #0
 80007ce:	61bb      	str	r3, [r7, #24]
 80007d0:	2300      	movs	r3, #0
 80007d2:	617b      	str	r3, [r7, #20]
 80007d4:	2300      	movs	r3, #0
 80007d6:	61fb      	str	r3, [r7, #28]
 80007d8:	2302      	movs	r3, #2
 80007da:	613b      	str	r3, [r7, #16]
 80007dc:	2300      	movs	r3, #0
 80007de:	60fb      	str	r3, [r7, #12]
 80007e0:	2302      	movs	r3, #2
 80007e2:	60bb      	str	r3, [r7, #8]
 80007e4:	4b47      	ldr	r3, [pc, #284]	; (8000904 <RCC_GetClocksFreq+0x140>)
 80007e6:	689b      	ldr	r3, [r3, #8]
 80007e8:	f003 030c 	and.w	r3, r3, #12
 80007ec:	61bb      	str	r3, [r7, #24]
 80007ee:	69bb      	ldr	r3, [r7, #24]
 80007f0:	2b04      	cmp	r3, #4
 80007f2:	d007      	beq.n	8000804 <RCC_GetClocksFreq+0x40>
 80007f4:	2b08      	cmp	r3, #8
 80007f6:	d009      	beq.n	800080c <RCC_GetClocksFreq+0x48>
 80007f8:	2b00      	cmp	r3, #0
 80007fa:	d13d      	bne.n	8000878 <RCC_GetClocksFreq+0xb4>
 80007fc:	687b      	ldr	r3, [r7, #4]
 80007fe:	4a42      	ldr	r2, [pc, #264]	; (8000908 <RCC_GetClocksFreq+0x144>)
 8000800:	601a      	str	r2, [r3, #0]
 8000802:	e03d      	b.n	8000880 <RCC_GetClocksFreq+0xbc>
 8000804:	687b      	ldr	r3, [r7, #4]
 8000806:	4a41      	ldr	r2, [pc, #260]	; (800090c <RCC_GetClocksFreq+0x148>)
 8000808:	601a      	str	r2, [r3, #0]
 800080a:	e039      	b.n	8000880 <RCC_GetClocksFreq+0xbc>
 800080c:	4b3d      	ldr	r3, [pc, #244]	; (8000904 <RCC_GetClocksFreq+0x140>)
 800080e:	685b      	ldr	r3, [r3, #4]
 8000810:	0d9b      	lsrs	r3, r3, #22
 8000812:	f003 0301 	and.w	r3, r3, #1
 8000816:	60fb      	str	r3, [r7, #12]
 8000818:	4b3a      	ldr	r3, [pc, #232]	; (8000904 <RCC_GetClocksFreq+0x140>)
 800081a:	685b      	ldr	r3, [r3, #4]
 800081c:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8000820:	60bb      	str	r3, [r7, #8]
 8000822:	68fb      	ldr	r3, [r7, #12]
 8000824:	2b00      	cmp	r3, #0
 8000826:	d00c      	beq.n	8000842 <RCC_GetClocksFreq+0x7e>
 8000828:	4a38      	ldr	r2, [pc, #224]	; (800090c <RCC_GetClocksFreq+0x148>)
 800082a:	68bb      	ldr	r3, [r7, #8]
 800082c:	fbb2 f3f3 	udiv	r3, r2, r3
 8000830:	4a34      	ldr	r2, [pc, #208]	; (8000904 <RCC_GetClocksFreq+0x140>)
 8000832:	6852      	ldr	r2, [r2, #4]
 8000834:	0992      	lsrs	r2, r2, #6
 8000836:	f3c2 0208 	ubfx	r2, r2, #0, #9
 800083a:	fb02 f303 	mul.w	r3, r2, r3
 800083e:	61fb      	str	r3, [r7, #28]
 8000840:	e00b      	b.n	800085a <RCC_GetClocksFreq+0x96>
 8000842:	4a31      	ldr	r2, [pc, #196]	; (8000908 <RCC_GetClocksFreq+0x144>)
 8000844:	68bb      	ldr	r3, [r7, #8]
 8000846:	fbb2 f3f3 	udiv	r3, r2, r3
 800084a:	4a2e      	ldr	r2, [pc, #184]	; (8000904 <RCC_GetClocksFreq+0x140>)
 800084c:	6852      	ldr	r2, [r2, #4]
 800084e:	0992      	lsrs	r2, r2, #6
 8000850:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8000854:	fb02 f303 	mul.w	r3, r2, r3
 8000858:	61fb      	str	r3, [r7, #28]
 800085a:	4b2a      	ldr	r3, [pc, #168]	; (8000904 <RCC_GetClocksFreq+0x140>)
 800085c:	685b      	ldr	r3, [r3, #4]
 800085e:	0c1b      	lsrs	r3, r3, #16
 8000860:	f003 0303 	and.w	r3, r3, #3
 8000864:	3301      	adds	r3, #1
 8000866:	005b      	lsls	r3, r3, #1
 8000868:	613b      	str	r3, [r7, #16]
 800086a:	69fa      	ldr	r2, [r7, #28]
 800086c:	693b      	ldr	r3, [r7, #16]
 800086e:	fbb2 f2f3 	udiv	r2, r2, r3
 8000872:	687b      	ldr	r3, [r7, #4]
 8000874:	601a      	str	r2, [r3, #0]
 8000876:	e003      	b.n	8000880 <RCC_GetClocksFreq+0xbc>
 8000878:	687b      	ldr	r3, [r7, #4]
 800087a:	4a23      	ldr	r2, [pc, #140]	; (8000908 <RCC_GetClocksFreq+0x144>)
 800087c:	601a      	str	r2, [r3, #0]
 800087e:	bf00      	nop
 8000880:	4b20      	ldr	r3, [pc, #128]	; (8000904 <RCC_GetClocksFreq+0x140>)
 8000882:	689b      	ldr	r3, [r3, #8]
 8000884:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8000888:	61bb      	str	r3, [r7, #24]
 800088a:	69bb      	ldr	r3, [r7, #24]
 800088c:	091b      	lsrs	r3, r3, #4
 800088e:	61bb      	str	r3, [r7, #24]
 8000890:	4a1f      	ldr	r2, [pc, #124]	; (8000910 <RCC_GetClocksFreq+0x14c>)
 8000892:	69bb      	ldr	r3, [r7, #24]
 8000894:	4413      	add	r3, r2
 8000896:	781b      	ldrb	r3, [r3, #0]
 8000898:	b2db      	uxtb	r3, r3
 800089a:	617b      	str	r3, [r7, #20]
 800089c:	687b      	ldr	r3, [r7, #4]
 800089e:	681a      	ldr	r2, [r3, #0]
 80008a0:	697b      	ldr	r3, [r7, #20]
 80008a2:	40da      	lsrs	r2, r3
 80008a4:	687b      	ldr	r3, [r7, #4]
 80008a6:	605a      	str	r2, [r3, #4]
 80008a8:	4b16      	ldr	r3, [pc, #88]	; (8000904 <RCC_GetClocksFreq+0x140>)
 80008aa:	689b      	ldr	r3, [r3, #8]
 80008ac:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 80008b0:	61bb      	str	r3, [r7, #24]
 80008b2:	69bb      	ldr	r3, [r7, #24]
 80008b4:	0a9b      	lsrs	r3, r3, #10
 80008b6:	61bb      	str	r3, [r7, #24]
 80008b8:	4a15      	ldr	r2, [pc, #84]	; (8000910 <RCC_GetClocksFreq+0x14c>)
 80008ba:	69bb      	ldr	r3, [r7, #24]
 80008bc:	4413      	add	r3, r2
 80008be:	781b      	ldrb	r3, [r3, #0]
 80008c0:	b2db      	uxtb	r3, r3
 80008c2:	617b      	str	r3, [r7, #20]
 80008c4:	687b      	ldr	r3, [r7, #4]
 80008c6:	685a      	ldr	r2, [r3, #4]
 80008c8:	697b      	ldr	r3, [r7, #20]
 80008ca:	40da      	lsrs	r2, r3
 80008cc:	687b      	ldr	r3, [r7, #4]
 80008ce:	609a      	str	r2, [r3, #8]
 80008d0:	4b0c      	ldr	r3, [pc, #48]	; (8000904 <RCC_GetClocksFreq+0x140>)
 80008d2:	689b      	ldr	r3, [r3, #8]
 80008d4:	f403 4360 	and.w	r3, r3, #57344	; 0xe000
 80008d8:	61bb      	str	r3, [r7, #24]
 80008da:	69bb      	ldr	r3, [r7, #24]
 80008dc:	0b5b      	lsrs	r3, r3, #13
 80008de:	61bb      	str	r3, [r7, #24]
 80008e0:	4a0b      	ldr	r2, [pc, #44]	; (8000910 <RCC_GetClocksFreq+0x14c>)
 80008e2:	69bb      	ldr	r3, [r7, #24]
 80008e4:	4413      	add	r3, r2
 80008e6:	781b      	ldrb	r3, [r3, #0]
 80008e8:	b2db      	uxtb	r3, r3
 80008ea:	617b      	str	r3, [r7, #20]
 80008ec:	687b      	ldr	r3, [r7, #4]
 80008ee:	685a      	ldr	r2, [r3, #4]
 80008f0:	697b      	ldr	r3, [r7, #20]
 80008f2:	40da      	lsrs	r2, r3
 80008f4:	687b      	ldr	r3, [r7, #4]
 80008f6:	60da      	str	r2, [r3, #12]
 80008f8:	bf00      	nop
 80008fa:	3724      	adds	r7, #36	; 0x24
 80008fc:	46bd      	mov	sp, r7
 80008fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000902:	4770      	bx	lr
 8000904:	40023800 	.word	0x40023800
 8000908:	00f42400 	.word	0x00f42400
 800090c:	017d7840 	.word	0x017d7840
 8000910:	20000000 	.word	0x20000000

08000914 <RCC_AHB1PeriphClockCmd>:
 8000914:	b480      	push	{r7}
 8000916:	b083      	sub	sp, #12
 8000918:	af00      	add	r7, sp, #0
 800091a:	6078      	str	r0, [r7, #4]
 800091c:	460b      	mov	r3, r1
 800091e:	70fb      	strb	r3, [r7, #3]
 8000920:	78fb      	ldrb	r3, [r7, #3]
 8000922:	2b00      	cmp	r3, #0
 8000924:	d006      	beq.n	8000934 <RCC_AHB1PeriphClockCmd+0x20>
 8000926:	4b0a      	ldr	r3, [pc, #40]	; (8000950 <RCC_AHB1PeriphClockCmd+0x3c>)
 8000928:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800092a:	4909      	ldr	r1, [pc, #36]	; (8000950 <RCC_AHB1PeriphClockCmd+0x3c>)
 800092c:	687b      	ldr	r3, [r7, #4]
 800092e:	4313      	orrs	r3, r2
 8000930:	630b      	str	r3, [r1, #48]	; 0x30
 8000932:	e006      	b.n	8000942 <RCC_AHB1PeriphClockCmd+0x2e>
 8000934:	4b06      	ldr	r3, [pc, #24]	; (8000950 <RCC_AHB1PeriphClockCmd+0x3c>)
 8000936:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000938:	687b      	ldr	r3, [r7, #4]
 800093a:	43db      	mvns	r3, r3
 800093c:	4904      	ldr	r1, [pc, #16]	; (8000950 <RCC_AHB1PeriphClockCmd+0x3c>)
 800093e:	4013      	ands	r3, r2
 8000940:	630b      	str	r3, [r1, #48]	; 0x30
 8000942:	bf00      	nop
 8000944:	370c      	adds	r7, #12
 8000946:	46bd      	mov	sp, r7
 8000948:	f85d 7b04 	ldr.w	r7, [sp], #4
 800094c:	4770      	bx	lr
 800094e:	bf00      	nop
 8000950:	40023800 	.word	0x40023800

08000954 <RCC_APB2PeriphClockCmd>:
 8000954:	b480      	push	{r7}
 8000956:	b083      	sub	sp, #12
 8000958:	af00      	add	r7, sp, #0
 800095a:	6078      	str	r0, [r7, #4]
 800095c:	460b      	mov	r3, r1
 800095e:	70fb      	strb	r3, [r7, #3]
 8000960:	78fb      	ldrb	r3, [r7, #3]
 8000962:	2b00      	cmp	r3, #0
 8000964:	d006      	beq.n	8000974 <RCC_APB2PeriphClockCmd+0x20>
 8000966:	4b0a      	ldr	r3, [pc, #40]	; (8000990 <RCC_APB2PeriphClockCmd+0x3c>)
 8000968:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800096a:	4909      	ldr	r1, [pc, #36]	; (8000990 <RCC_APB2PeriphClockCmd+0x3c>)
 800096c:	687b      	ldr	r3, [r7, #4]
 800096e:	4313      	orrs	r3, r2
 8000970:	644b      	str	r3, [r1, #68]	; 0x44
 8000972:	e006      	b.n	8000982 <RCC_APB2PeriphClockCmd+0x2e>
 8000974:	4b06      	ldr	r3, [pc, #24]	; (8000990 <RCC_APB2PeriphClockCmd+0x3c>)
 8000976:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8000978:	687b      	ldr	r3, [r7, #4]
 800097a:	43db      	mvns	r3, r3
 800097c:	4904      	ldr	r1, [pc, #16]	; (8000990 <RCC_APB2PeriphClockCmd+0x3c>)
 800097e:	4013      	ands	r3, r2
 8000980:	644b      	str	r3, [r1, #68]	; 0x44
 8000982:	bf00      	nop
 8000984:	370c      	adds	r7, #12
 8000986:	46bd      	mov	sp, r7
 8000988:	f85d 7b04 	ldr.w	r7, [sp], #4
 800098c:	4770      	bx	lr
 800098e:	bf00      	nop
 8000990:	40023800 	.word	0x40023800

08000994 <USART_Init>:
 8000994:	b580      	push	{r7, lr}
 8000996:	b08a      	sub	sp, #40	; 0x28
 8000998:	af00      	add	r7, sp, #0
 800099a:	6078      	str	r0, [r7, #4]
 800099c:	6039      	str	r1, [r7, #0]
 800099e:	2300      	movs	r3, #0
 80009a0:	627b      	str	r3, [r7, #36]	; 0x24
 80009a2:	2300      	movs	r3, #0
 80009a4:	623b      	str	r3, [r7, #32]
 80009a6:	2300      	movs	r3, #0
 80009a8:	61fb      	str	r3, [r7, #28]
 80009aa:	2300      	movs	r3, #0
 80009ac:	61bb      	str	r3, [r7, #24]
 80009ae:	687b      	ldr	r3, [r7, #4]
 80009b0:	8a1b      	ldrh	r3, [r3, #16]
 80009b2:	b29b      	uxth	r3, r3
 80009b4:	627b      	str	r3, [r7, #36]	; 0x24
 80009b6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80009b8:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 80009bc:	627b      	str	r3, [r7, #36]	; 0x24
 80009be:	683b      	ldr	r3, [r7, #0]
 80009c0:	88db      	ldrh	r3, [r3, #6]
 80009c2:	461a      	mov	r2, r3
 80009c4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80009c6:	4313      	orrs	r3, r2
 80009c8:	627b      	str	r3, [r7, #36]	; 0x24
 80009ca:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80009cc:	b29a      	uxth	r2, r3
 80009ce:	687b      	ldr	r3, [r7, #4]
 80009d0:	821a      	strh	r2, [r3, #16]
 80009d2:	687b      	ldr	r3, [r7, #4]
 80009d4:	899b      	ldrh	r3, [r3, #12]
 80009d6:	b29b      	uxth	r3, r3
 80009d8:	627b      	str	r3, [r7, #36]	; 0x24
 80009da:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80009dc:	f423 53b0 	bic.w	r3, r3, #5632	; 0x1600
 80009e0:	f023 030c 	bic.w	r3, r3, #12
 80009e4:	627b      	str	r3, [r7, #36]	; 0x24
 80009e6:	683b      	ldr	r3, [r7, #0]
 80009e8:	889a      	ldrh	r2, [r3, #4]
 80009ea:	683b      	ldr	r3, [r7, #0]
 80009ec:	891b      	ldrh	r3, [r3, #8]
 80009ee:	4313      	orrs	r3, r2
 80009f0:	b29a      	uxth	r2, r3
 80009f2:	683b      	ldr	r3, [r7, #0]
 80009f4:	895b      	ldrh	r3, [r3, #10]
 80009f6:	4313      	orrs	r3, r2
 80009f8:	b29b      	uxth	r3, r3
 80009fa:	461a      	mov	r2, r3
 80009fc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80009fe:	4313      	orrs	r3, r2
 8000a00:	627b      	str	r3, [r7, #36]	; 0x24
 8000a02:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8000a04:	b29a      	uxth	r2, r3
 8000a06:	687b      	ldr	r3, [r7, #4]
 8000a08:	819a      	strh	r2, [r3, #12]
 8000a0a:	687b      	ldr	r3, [r7, #4]
 8000a0c:	8a9b      	ldrh	r3, [r3, #20]
 8000a0e:	b29b      	uxth	r3, r3
 8000a10:	627b      	str	r3, [r7, #36]	; 0x24
 8000a12:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8000a14:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8000a18:	627b      	str	r3, [r7, #36]	; 0x24
 8000a1a:	683b      	ldr	r3, [r7, #0]
 8000a1c:	899b      	ldrh	r3, [r3, #12]
 8000a1e:	461a      	mov	r2, r3
 8000a20:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8000a22:	4313      	orrs	r3, r2
 8000a24:	627b      	str	r3, [r7, #36]	; 0x24
 8000a26:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8000a28:	b29a      	uxth	r2, r3
 8000a2a:	687b      	ldr	r3, [r7, #4]
 8000a2c:	829a      	strh	r2, [r3, #20]
 8000a2e:	f107 0308 	add.w	r3, r7, #8
 8000a32:	4618      	mov	r0, r3
 8000a34:	f7ff fec6 	bl	80007c4 <RCC_GetClocksFreq>
 8000a38:	687b      	ldr	r3, [r7, #4]
 8000a3a:	4a30      	ldr	r2, [pc, #192]	; (8000afc <USART_Init+0x168>)
 8000a3c:	4293      	cmp	r3, r2
 8000a3e:	d003      	beq.n	8000a48 <USART_Init+0xb4>
 8000a40:	687b      	ldr	r3, [r7, #4]
 8000a42:	4a2f      	ldr	r2, [pc, #188]	; (8000b00 <USART_Init+0x16c>)
 8000a44:	4293      	cmp	r3, r2
 8000a46:	d102      	bne.n	8000a4e <USART_Init+0xba>
 8000a48:	697b      	ldr	r3, [r7, #20]
 8000a4a:	623b      	str	r3, [r7, #32]
 8000a4c:	e001      	b.n	8000a52 <USART_Init+0xbe>
 8000a4e:	693b      	ldr	r3, [r7, #16]
 8000a50:	623b      	str	r3, [r7, #32]
 8000a52:	687b      	ldr	r3, [r7, #4]
 8000a54:	899b      	ldrh	r3, [r3, #12]
 8000a56:	b29b      	uxth	r3, r3
 8000a58:	b21b      	sxth	r3, r3
 8000a5a:	2b00      	cmp	r3, #0
 8000a5c:	da0c      	bge.n	8000a78 <USART_Init+0xe4>
 8000a5e:	6a3a      	ldr	r2, [r7, #32]
 8000a60:	4613      	mov	r3, r2
 8000a62:	009b      	lsls	r3, r3, #2
 8000a64:	4413      	add	r3, r2
 8000a66:	009a      	lsls	r2, r3, #2
 8000a68:	441a      	add	r2, r3
 8000a6a:	683b      	ldr	r3, [r7, #0]
 8000a6c:	681b      	ldr	r3, [r3, #0]
 8000a6e:	005b      	lsls	r3, r3, #1
 8000a70:	fbb2 f3f3 	udiv	r3, r2, r3
 8000a74:	61fb      	str	r3, [r7, #28]
 8000a76:	e00b      	b.n	8000a90 <USART_Init+0xfc>
 8000a78:	6a3a      	ldr	r2, [r7, #32]
 8000a7a:	4613      	mov	r3, r2
 8000a7c:	009b      	lsls	r3, r3, #2
 8000a7e:	4413      	add	r3, r2
 8000a80:	009a      	lsls	r2, r3, #2
 8000a82:	441a      	add	r2, r3
 8000a84:	683b      	ldr	r3, [r7, #0]
 8000a86:	681b      	ldr	r3, [r3, #0]
 8000a88:	009b      	lsls	r3, r3, #2
 8000a8a:	fbb2 f3f3 	udiv	r3, r2, r3
 8000a8e:	61fb      	str	r3, [r7, #28]
 8000a90:	69fb      	ldr	r3, [r7, #28]
 8000a92:	4a1c      	ldr	r2, [pc, #112]	; (8000b04 <USART_Init+0x170>)
 8000a94:	fba2 2303 	umull	r2, r3, r2, r3
 8000a98:	095b      	lsrs	r3, r3, #5
 8000a9a:	011b      	lsls	r3, r3, #4
 8000a9c:	627b      	str	r3, [r7, #36]	; 0x24
 8000a9e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8000aa0:	091b      	lsrs	r3, r3, #4
 8000aa2:	2264      	movs	r2, #100	; 0x64
 8000aa4:	fb02 f303 	mul.w	r3, r2, r3
 8000aa8:	69fa      	ldr	r2, [r7, #28]
 8000aaa:	1ad3      	subs	r3, r2, r3
 8000aac:	61bb      	str	r3, [r7, #24]
 8000aae:	687b      	ldr	r3, [r7, #4]
 8000ab0:	899b      	ldrh	r3, [r3, #12]
 8000ab2:	b29b      	uxth	r3, r3
 8000ab4:	b21b      	sxth	r3, r3
 8000ab6:	2b00      	cmp	r3, #0
 8000ab8:	da0c      	bge.n	8000ad4 <USART_Init+0x140>
 8000aba:	69bb      	ldr	r3, [r7, #24]
 8000abc:	00db      	lsls	r3, r3, #3
 8000abe:	3332      	adds	r3, #50	; 0x32
 8000ac0:	4a10      	ldr	r2, [pc, #64]	; (8000b04 <USART_Init+0x170>)
 8000ac2:	fba2 2303 	umull	r2, r3, r2, r3
 8000ac6:	095b      	lsrs	r3, r3, #5
 8000ac8:	f003 0307 	and.w	r3, r3, #7
 8000acc:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8000ace:	4313      	orrs	r3, r2
 8000ad0:	627b      	str	r3, [r7, #36]	; 0x24
 8000ad2:	e00b      	b.n	8000aec <USART_Init+0x158>
 8000ad4:	69bb      	ldr	r3, [r7, #24]
 8000ad6:	011b      	lsls	r3, r3, #4
 8000ad8:	3332      	adds	r3, #50	; 0x32
 8000ada:	4a0a      	ldr	r2, [pc, #40]	; (8000b04 <USART_Init+0x170>)
 8000adc:	fba2 2303 	umull	r2, r3, r2, r3
 8000ae0:	095b      	lsrs	r3, r3, #5
 8000ae2:	f003 030f 	and.w	r3, r3, #15
 8000ae6:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8000ae8:	4313      	orrs	r3, r2
 8000aea:	627b      	str	r3, [r7, #36]	; 0x24
 8000aec:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8000aee:	b29a      	uxth	r2, r3
 8000af0:	687b      	ldr	r3, [r7, #4]
 8000af2:	811a      	strh	r2, [r3, #8]
 8000af4:	bf00      	nop
 8000af6:	3728      	adds	r7, #40	; 0x28
 8000af8:	46bd      	mov	sp, r7
 8000afa:	bd80      	pop	{r7, pc}
 8000afc:	40011000 	.word	0x40011000
 8000b00:	40011400 	.word	0x40011400
 8000b04:	51eb851f 	.word	0x51eb851f

08000b08 <USART_Cmd>:
 8000b08:	b480      	push	{r7}
 8000b0a:	b083      	sub	sp, #12
 8000b0c:	af00      	add	r7, sp, #0
 8000b0e:	6078      	str	r0, [r7, #4]
 8000b10:	460b      	mov	r3, r1
 8000b12:	70fb      	strb	r3, [r7, #3]
 8000b14:	78fb      	ldrb	r3, [r7, #3]
 8000b16:	2b00      	cmp	r3, #0
 8000b18:	d008      	beq.n	8000b2c <USART_Cmd+0x24>
 8000b1a:	687b      	ldr	r3, [r7, #4]
 8000b1c:	899b      	ldrh	r3, [r3, #12]
 8000b1e:	b29b      	uxth	r3, r3
 8000b20:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8000b24:	b29a      	uxth	r2, r3
 8000b26:	687b      	ldr	r3, [r7, #4]
 8000b28:	819a      	strh	r2, [r3, #12]
 8000b2a:	e007      	b.n	8000b3c <USART_Cmd+0x34>
 8000b2c:	687b      	ldr	r3, [r7, #4]
 8000b2e:	899b      	ldrh	r3, [r3, #12]
 8000b30:	b29b      	uxth	r3, r3
 8000b32:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8000b36:	b29a      	uxth	r2, r3
 8000b38:	687b      	ldr	r3, [r7, #4]
 8000b3a:	819a      	strh	r2, [r3, #12]
 8000b3c:	bf00      	nop
 8000b3e:	370c      	adds	r7, #12
 8000b40:	46bd      	mov	sp, r7
 8000b42:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000b46:	4770      	bx	lr

08000b48 <USART_SendData>:
 8000b48:	b480      	push	{r7}
 8000b4a:	b083      	sub	sp, #12
 8000b4c:	af00      	add	r7, sp, #0
 8000b4e:	6078      	str	r0, [r7, #4]
 8000b50:	460b      	mov	r3, r1
 8000b52:	807b      	strh	r3, [r7, #2]
 8000b54:	887b      	ldrh	r3, [r7, #2]
 8000b56:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8000b5a:	b29a      	uxth	r2, r3
 8000b5c:	687b      	ldr	r3, [r7, #4]
 8000b5e:	809a      	strh	r2, [r3, #4]
 8000b60:	bf00      	nop
 8000b62:	370c      	adds	r7, #12
 8000b64:	46bd      	mov	sp, r7
 8000b66:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000b6a:	4770      	bx	lr

08000b6c <USART_ReceiveData>:
 8000b6c:	b480      	push	{r7}
 8000b6e:	b083      	sub	sp, #12
 8000b70:	af00      	add	r7, sp, #0
 8000b72:	6078      	str	r0, [r7, #4]
 8000b74:	687b      	ldr	r3, [r7, #4]
 8000b76:	889b      	ldrh	r3, [r3, #4]
 8000b78:	b29b      	uxth	r3, r3
 8000b7a:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8000b7e:	b29b      	uxth	r3, r3
 8000b80:	4618      	mov	r0, r3
 8000b82:	370c      	adds	r7, #12
 8000b84:	46bd      	mov	sp, r7
 8000b86:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000b8a:	4770      	bx	lr

08000b8c <USART_ITConfig>:
 8000b8c:	b480      	push	{r7}
 8000b8e:	b087      	sub	sp, #28
 8000b90:	af00      	add	r7, sp, #0
 8000b92:	6078      	str	r0, [r7, #4]
 8000b94:	460b      	mov	r3, r1
 8000b96:	807b      	strh	r3, [r7, #2]
 8000b98:	4613      	mov	r3, r2
 8000b9a:	707b      	strb	r3, [r7, #1]
 8000b9c:	2300      	movs	r3, #0
 8000b9e:	613b      	str	r3, [r7, #16]
 8000ba0:	2300      	movs	r3, #0
 8000ba2:	60fb      	str	r3, [r7, #12]
 8000ba4:	2300      	movs	r3, #0
 8000ba6:	60bb      	str	r3, [r7, #8]
 8000ba8:	2300      	movs	r3, #0
 8000baa:	617b      	str	r3, [r7, #20]
 8000bac:	687b      	ldr	r3, [r7, #4]
 8000bae:	617b      	str	r3, [r7, #20]
 8000bb0:	887b      	ldrh	r3, [r7, #2]
 8000bb2:	b2db      	uxtb	r3, r3
 8000bb4:	095b      	lsrs	r3, r3, #5
 8000bb6:	b2db      	uxtb	r3, r3
 8000bb8:	613b      	str	r3, [r7, #16]
 8000bba:	887b      	ldrh	r3, [r7, #2]
 8000bbc:	f003 031f 	and.w	r3, r3, #31
 8000bc0:	60fb      	str	r3, [r7, #12]
 8000bc2:	2201      	movs	r2, #1
 8000bc4:	68fb      	ldr	r3, [r7, #12]
 8000bc6:	fa02 f303 	lsl.w	r3, r2, r3
 8000bca:	60bb      	str	r3, [r7, #8]
 8000bcc:	693b      	ldr	r3, [r7, #16]
 8000bce:	2b01      	cmp	r3, #1
 8000bd0:	d103      	bne.n	8000bda <USART_ITConfig+0x4e>
 8000bd2:	697b      	ldr	r3, [r7, #20]
 8000bd4:	330c      	adds	r3, #12
 8000bd6:	617b      	str	r3, [r7, #20]
 8000bd8:	e009      	b.n	8000bee <USART_ITConfig+0x62>
 8000bda:	693b      	ldr	r3, [r7, #16]
 8000bdc:	2b02      	cmp	r3, #2
 8000bde:	d103      	bne.n	8000be8 <USART_ITConfig+0x5c>
 8000be0:	697b      	ldr	r3, [r7, #20]
 8000be2:	3310      	adds	r3, #16
 8000be4:	617b      	str	r3, [r7, #20]
 8000be6:	e002      	b.n	8000bee <USART_ITConfig+0x62>
 8000be8:	697b      	ldr	r3, [r7, #20]
 8000bea:	3314      	adds	r3, #20
 8000bec:	617b      	str	r3, [r7, #20]
 8000bee:	787b      	ldrb	r3, [r7, #1]
 8000bf0:	2b00      	cmp	r3, #0
 8000bf2:	d006      	beq.n	8000c02 <USART_ITConfig+0x76>
 8000bf4:	697b      	ldr	r3, [r7, #20]
 8000bf6:	6819      	ldr	r1, [r3, #0]
 8000bf8:	697b      	ldr	r3, [r7, #20]
 8000bfa:	68ba      	ldr	r2, [r7, #8]
 8000bfc:	430a      	orrs	r2, r1
 8000bfe:	601a      	str	r2, [r3, #0]
 8000c00:	e006      	b.n	8000c10 <USART_ITConfig+0x84>
 8000c02:	697b      	ldr	r3, [r7, #20]
 8000c04:	6819      	ldr	r1, [r3, #0]
 8000c06:	68bb      	ldr	r3, [r7, #8]
 8000c08:	43da      	mvns	r2, r3
 8000c0a:	697b      	ldr	r3, [r7, #20]
 8000c0c:	400a      	ands	r2, r1
 8000c0e:	601a      	str	r2, [r3, #0]
 8000c10:	bf00      	nop
 8000c12:	371c      	adds	r7, #28
 8000c14:	46bd      	mov	sp, r7
 8000c16:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000c1a:	4770      	bx	lr

08000c1c <USART_GetITStatus>:
 8000c1c:	b480      	push	{r7}
 8000c1e:	b087      	sub	sp, #28
 8000c20:	af00      	add	r7, sp, #0
 8000c22:	6078      	str	r0, [r7, #4]
 8000c24:	460b      	mov	r3, r1
 8000c26:	807b      	strh	r3, [r7, #2]
 8000c28:	2300      	movs	r3, #0
 8000c2a:	60fb      	str	r3, [r7, #12]
 8000c2c:	2300      	movs	r3, #0
 8000c2e:	617b      	str	r3, [r7, #20]
 8000c30:	2300      	movs	r3, #0
 8000c32:	60bb      	str	r3, [r7, #8]
 8000c34:	2300      	movs	r3, #0
 8000c36:	74fb      	strb	r3, [r7, #19]
 8000c38:	887b      	ldrh	r3, [r7, #2]
 8000c3a:	b2db      	uxtb	r3, r3
 8000c3c:	095b      	lsrs	r3, r3, #5
 8000c3e:	b2db      	uxtb	r3, r3
 8000c40:	60bb      	str	r3, [r7, #8]
 8000c42:	887b      	ldrh	r3, [r7, #2]
 8000c44:	f003 031f 	and.w	r3, r3, #31
 8000c48:	617b      	str	r3, [r7, #20]
 8000c4a:	2201      	movs	r2, #1
 8000c4c:	697b      	ldr	r3, [r7, #20]
 8000c4e:	fa02 f303 	lsl.w	r3, r2, r3
 8000c52:	617b      	str	r3, [r7, #20]
 8000c54:	68bb      	ldr	r3, [r7, #8]
 8000c56:	2b01      	cmp	r3, #1
 8000c58:	d107      	bne.n	8000c6a <USART_GetITStatus+0x4e>
 8000c5a:	687b      	ldr	r3, [r7, #4]
 8000c5c:	899b      	ldrh	r3, [r3, #12]
 8000c5e:	b29b      	uxth	r3, r3
 8000c60:	461a      	mov	r2, r3
 8000c62:	697b      	ldr	r3, [r7, #20]
 8000c64:	4013      	ands	r3, r2
 8000c66:	617b      	str	r3, [r7, #20]
 8000c68:	e011      	b.n	8000c8e <USART_GetITStatus+0x72>
 8000c6a:	68bb      	ldr	r3, [r7, #8]
 8000c6c:	2b02      	cmp	r3, #2
 8000c6e:	d107      	bne.n	8000c80 <USART_GetITStatus+0x64>
 8000c70:	687b      	ldr	r3, [r7, #4]
 8000c72:	8a1b      	ldrh	r3, [r3, #16]
 8000c74:	b29b      	uxth	r3, r3
 8000c76:	461a      	mov	r2, r3
 8000c78:	697b      	ldr	r3, [r7, #20]
 8000c7a:	4013      	ands	r3, r2
 8000c7c:	617b      	str	r3, [r7, #20]
 8000c7e:	e006      	b.n	8000c8e <USART_GetITStatus+0x72>
 8000c80:	687b      	ldr	r3, [r7, #4]
 8000c82:	8a9b      	ldrh	r3, [r3, #20]
 8000c84:	b29b      	uxth	r3, r3
 8000c86:	461a      	mov	r2, r3
 8000c88:	697b      	ldr	r3, [r7, #20]
 8000c8a:	4013      	ands	r3, r2
 8000c8c:	617b      	str	r3, [r7, #20]
 8000c8e:	887b      	ldrh	r3, [r7, #2]
 8000c90:	0a1b      	lsrs	r3, r3, #8
 8000c92:	b29b      	uxth	r3, r3
 8000c94:	60fb      	str	r3, [r7, #12]
 8000c96:	2201      	movs	r2, #1
 8000c98:	68fb      	ldr	r3, [r7, #12]
 8000c9a:	fa02 f303 	lsl.w	r3, r2, r3
 8000c9e:	60fb      	str	r3, [r7, #12]
 8000ca0:	687b      	ldr	r3, [r7, #4]
 8000ca2:	881b      	ldrh	r3, [r3, #0]
 8000ca4:	b29b      	uxth	r3, r3
 8000ca6:	461a      	mov	r2, r3
 8000ca8:	68fb      	ldr	r3, [r7, #12]
 8000caa:	4013      	ands	r3, r2
 8000cac:	60fb      	str	r3, [r7, #12]
 8000cae:	697b      	ldr	r3, [r7, #20]
 8000cb0:	2b00      	cmp	r3, #0
 8000cb2:	d005      	beq.n	8000cc0 <USART_GetITStatus+0xa4>
 8000cb4:	68fb      	ldr	r3, [r7, #12]
 8000cb6:	2b00      	cmp	r3, #0
 8000cb8:	d002      	beq.n	8000cc0 <USART_GetITStatus+0xa4>
 8000cba:	2301      	movs	r3, #1
 8000cbc:	74fb      	strb	r3, [r7, #19]
 8000cbe:	e001      	b.n	8000cc4 <USART_GetITStatus+0xa8>
 8000cc0:	2300      	movs	r3, #0
 8000cc2:	74fb      	strb	r3, [r7, #19]
 8000cc4:	7cfb      	ldrb	r3, [r7, #19]
 8000cc6:	4618      	mov	r0, r3
 8000cc8:	371c      	adds	r7, #28
 8000cca:	46bd      	mov	sp, r7
 8000ccc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000cd0:	4770      	bx	lr
	...

08000cd4 <__libc_init_array>:
 8000cd4:	b570      	push	{r4, r5, r6, lr}
 8000cd6:	4d0d      	ldr	r5, [pc, #52]	; (8000d0c <__libc_init_array+0x38>)
 8000cd8:	4c0d      	ldr	r4, [pc, #52]	; (8000d10 <__libc_init_array+0x3c>)
 8000cda:	1b64      	subs	r4, r4, r5
 8000cdc:	10a4      	asrs	r4, r4, #2
 8000cde:	2600      	movs	r6, #0
 8000ce0:	42a6      	cmp	r6, r4
 8000ce2:	d109      	bne.n	8000cf8 <__libc_init_array+0x24>
 8000ce4:	4d0b      	ldr	r5, [pc, #44]	; (8000d14 <__libc_init_array+0x40>)
 8000ce6:	4c0c      	ldr	r4, [pc, #48]	; (8000d18 <__libc_init_array+0x44>)
 8000ce8:	f000 f818 	bl	8000d1c <_init>
 8000cec:	1b64      	subs	r4, r4, r5
 8000cee:	10a4      	asrs	r4, r4, #2
 8000cf0:	2600      	movs	r6, #0
 8000cf2:	42a6      	cmp	r6, r4
 8000cf4:	d105      	bne.n	8000d02 <__libc_init_array+0x2e>
 8000cf6:	bd70      	pop	{r4, r5, r6, pc}
 8000cf8:	f855 3b04 	ldr.w	r3, [r5], #4
 8000cfc:	4798      	blx	r3
 8000cfe:	3601      	adds	r6, #1
 8000d00:	e7ee      	b.n	8000ce0 <__libc_init_array+0xc>
 8000d02:	f855 3b04 	ldr.w	r3, [r5], #4
 8000d06:	4798      	blx	r3
 8000d08:	3601      	adds	r6, #1
 8000d0a:	e7f2      	b.n	8000cf2 <__libc_init_array+0x1e>
 8000d0c:	08000d34 	.word	0x08000d34
 8000d10:	08000d34 	.word	0x08000d34
 8000d14:	08000d34 	.word	0x08000d34
 8000d18:	08000d38 	.word	0x08000d38

08000d1c <_init>:
 8000d1c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000d1e:	bf00      	nop
 8000d20:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000d22:	bc08      	pop	{r3}
 8000d24:	469e      	mov	lr, r3
 8000d26:	4770      	bx	lr

08000d28 <_fini>:
 8000d28:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000d2a:	bf00      	nop
 8000d2c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000d2e:	bc08      	pop	{r3}
 8000d30:	469e      	mov	lr, r3
 8000d32:	4770      	bx	lr
